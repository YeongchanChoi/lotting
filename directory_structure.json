{
    "app": {
        "__files__": {
            "globals.css": "@media screen and (max-width: 720px) {\n    body{\n        background-color: red;\n    }\n}\nbody{\n    margin: 0;\n}\n\nmain{\n    padding-left: 280px;\n}\n\ninput[type='date']::before {\n    content: attr(data-placeholder);\n    width: 100%;\n}\n\nbutton{ \n    background: inherit ; border:none; box-shadow:none; border-radius:0; padding:0; overflow:visible; cursor:pointer\n}\n\nul, li{\n    text-decoration: none;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\ninput[type=\"file\"] {\n    position: absolute;\n    width: 0;\n    height: 0;\n    padding: 0;\n    overflow: hidden;\n    border: 0;\n}\n\ninput[type=\"button\"]{\n    background: inherit; \n    box-shadow:none; \n    cursor:pointer;\n}\n\n\na {\n    text-decoration: none;\n    color: #000;\n}",
            "Home.module.scss": ".container {\n    display: grid;\n\tgrid-template-columns: 1fr 1fr;\n    gap: 20px;\n}\n",
            "icon.ico": null,
            "layout.js": "import Nav from '@/components/Nav'\nimport './globals.css'\nimport Header from '@/components/Header'\nimport RecoilRootProvider from './recoilRootProvider';\nimport { AuthProvider } from '@/utils/context/AuthContext';\n\nexport const metadata = {\n  title: 'LOTTING',\n  description: 'LOTTING SYSTEM 개발중',\n}\n\nexport default function RootLayout({ children }) {\n  return (\n    <AuthProvider>\n    <html>\n      <head>\n        <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n      </head>\n      <body>\n        {true?<Nav />:<></>}\n        {true?<Header />:<></>}\n        <RecoilRootProvider>\n          <main>{children}</main>\n        </RecoilRootProvider>\n      </body>\n    </html></AuthProvider>\n  )\n}\n",
            "page.js": "\"use client\"\n\nimport { Inputbox,PostInputbox,LongInputbox,DropInputbox,FileInputbox } from \"@/components/Inputbox\"\nimport styles from \"@/app/Home.module.scss\"\n\nconst testlist = [{\n  \"value\" : \"여기에 벨류를 입력하세요\",\n  \"item\" : \"여기에 아이템을 입력하세요\"\n}]\n\nexport default function Home() {\n  const handleChange = e => {\n    console.log(e.target.value)\n  }\n\n  return (\n      <div >\n        <h1>123</h1>\n        <div className={styles.container}>\n          <PostInputbox />\n          <FileInputbox />\n          <Inputbox type=\"text\" placeholder=\"이름\" onChange={handleChange} />\n          <Inputbox type=\"date\" placeholder=\"날짜\" />\n          <Inputbox />\n          <Inputbox />\n          <LongInputbox />\n          <Inputbox />\n          <Inputbox />\n          <DropInputbox list={testlist}/>\n\n        </div>    \n      </div>\n    )\n}\n",
            "recoilRootProvider.js": "'use client'\n\nimport { RecoilRoot } from \"recoil\";\n\nexport default function RecoilRootProvider({children}){\n    return <RecoilRoot>{children}</RecoilRoot>\n}"
        },
        "control": {
            "__files__": {
                "page.js": "export default function Control() {\n    return (\n        <>\n          <h1>Control</h1>\n        </>\n      )\n  }\n  "
            },
            "chasu": {
                "__files__": {
                    "page.js": "\"use client\"\n\nimport { Inputbox, Inputbox_L, Inputbox_M, PostInputbox, LongInputbox, DropInputbox, FileInputbox, Spanbox } from \"@/components/Inputbox\"\nimport { PaymentScheduleButton, ToggleButton, SearchButton, Button_Y, Button_N } from \"@/components/Button\"\nimport styles from \"@/styles/chasu.module.scss\";\nimport { useState, useEffect } from \"react\"; // useEffect와 useState 추가\nimport { BsDatabase } from \"react-icons/bs\";\nimport { CgSearch } from \"react-icons/cg\";\nimport { useForm } from 'react-hook-form';\n\nexport default function chasu() {\n    const { register, watch, handleSubmit } = useForm();\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    const [isElementVisible, setIsElementVisible] = useState(false);\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const element = document.getElementById('targetElement'); // targetElement의 ID를 가져옴\n            if (element) {\n                const elementTop = element.getBoundingClientRect().top;\n                const windowHeight = window.innerHeight;\n                setIsElementVisible(elementTop < windowHeight);\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n    return (\n        <div className={styles.Container}>\n            <div className={styles.Title}>\n                <div className = {styles.TitleFont1}>일반납부일정 확인</div>\n                <div className = {styles.TitleFont2}>일반납부일정 정보를 입력합니다.</div>\n            </div>\n            <div className={styles.MainBody}>\n                <div className={styles.MainTop}></div>\n                <div className={styles.MainTitle1}>\n                    <div className={styles.MainTitle1_head}>\n                        <div className={styles.MainTitleFont}>\n                            <br />층별 군\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            <br />1차\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            <br />2차\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            <br />3차\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            20%<br />4차\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            15%<br />5차\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            20%<br />6차\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            20%<br />7차\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            15%<br />8차\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            10%<br />9차\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            <br />합계\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            <br />납입비율\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle1_body}>\n                        <div className={styles.MainTitleFont}>\n                            <br />남은금원\n                        </div>\n                    </div>\n                </div>\n\n                <div className={styles.MainTitle2}>\n                    <div className={styles.MainTitle2_head}>\n                        <div className={styles.MainTitleFont}>\n                            <br />군\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_head}>\n                        <div className={styles.MainTitleFont}>\n                            <br />층\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            <br />가입 시\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            가입 후<br />1개월\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            가입 후<br />2개월\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            협동조합<br />설립 시\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            건축심의<br />접수 시\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            건축심의<br />완료 시\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            사업승인<br />신청 시\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            사업승인<br />완료 시\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            <br />창공 시\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            -<br />\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            -<br />\n                        </div>\n                    </div>\n                    <div className={styles.MainTitle2_body}>\n                        <div className={styles.MainTitleFont}>\n                            부담금+<br />업무대행비\n                        </div>\n                    </div>\n                </div>\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                <div className={styles.ExcelContentsBody}>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>44가</div>\n                    </div>\n                    <div className={styles.ExcelContent_Head}>\n                        <div className={styles.ExcelContentFont}>1~6</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>1,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>9,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>5,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>12,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>11,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>16,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>7,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>8,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>85,000</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>40.37%</div>\n                    </div>\n                    <div className={styles.ExcelContent_Body}>\n                        <div className={styles.ExcelContentFont}>80,000</div>\n                    </div>\n                </div>\n                {/* 한덩어리 */}\n\n                \n            </div>\n        </div>\n    );\n};\n"
                }
            },
            "chasupay": {
                "__files__": {
                    "page.js": "\"use client\"\n\nimport { Inputbox, Inputbox_L, Inputbox_M, PostInputbox, LongInputbox, DropInputbox, FileInputbox, Spanbox } from \"@/components/Inputbox\"\nimport { PaymentScheduleButton, ModifyButton,ChecButton,ToggleButton, SearchButton, Button_Y, Button_N } from \"@/components/Button\"\nimport styles from \"@/styles/chasupay.module.scss\";\nimport { useState, useEffect } from \"react\"; // useEffect와 useState 추가\nimport { BsDatabase } from \"react-icons/bs\";\nimport { CgSearch } from \"react-icons/cg\";\nimport { useForm } from 'react-hook-form';\n\nexport default function chasupay() {\n    const { register, watch, handleSubmit } = useForm();\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    const [isElementVisible, setIsElementVisible] = useState(false);\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const element = document.getElementById('targetElement'); // targetElement의 ID를 가져옴\n            if (element) {\n                const elementTop = element.getBoundingClientRect().top;\n                const windowHeight = window.innerHeight;\n                setIsElementVisible(elementTop < windowHeight);\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n    return (\n        <div className={styles.Container}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n            <div className={styles.Mainbody}>\n            <div className={styles.Title}>\n                <div className = {styles.TitleFont1}>일반납부일정 확인</div>\n                <div className = {styles.TitleFont2}>일반납부일정 정보를 입력합니다.</div>\n            </div>\n            <div className = {styles.Category}>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.CategoryFont}>차수</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.CategoryFont}>생성일</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.CategoryFont}>생성자</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.CategoryFont}>코멘트</div>\n                </div>\n            </div>\n            <div className = {styles.Line}></div>\n            <div className = {styles.Category}>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>1-1차</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>23/12/29</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>이승준</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>특이사항 없음</div>\n                </div>\n                <div className = {styles.Categorybody}></div>\n                <div className = {styles.Buttonbody}>\n                    <ChecButton>\n                        <div className ={styles.ButtonFont}>확인하기</div>\n                    </ChecButton>\n                </div>\n            </div>\n            <div className = {styles.Line}></div>\n\n            <div className = {styles.Category}>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>1-1차</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>23/12/29</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>이승준</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>특이사항 없음</div>\n                </div>\n                <div className = {styles.Categorybody}></div>\n                <div className = {styles.Buttonbody}>\n                    <ChecButton>\n                        <div className ={styles.ButtonFont}>확인하기</div>\n                    </ChecButton>\n                </div>\n            </div>\n            <div className = {styles.Line}></div>\n\n            <div className = {styles.Category}>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>1-1차</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>23/12/29</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>이승준</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>특이사항 없음</div>\n                </div>\n                <div className = {styles.Categorybody}></div>\n                <div className = {styles.Buttonbody}>\n                    <ChecButton>\n                        <div className ={styles.ButtonFont}>확인하기</div>\n                    </ChecButton>\n                </div>\n            </div>\n            <div className = {styles.Line}></div>\n\n            <div className = {styles.Category}>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>1-1차</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>23/12/29</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>이승준</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>특이사항 없음</div>\n                </div>\n                <div className = {styles.Categorybody}></div>\n                <div className = {styles.Buttonbody}>\n                    <ChecButton>\n                        <div className ={styles.ButtonFont}>확인하기</div>\n                    </ChecButton>\n                </div>\n            </div>\n            <div className = {styles.Line}></div>\n\n            <div className = {styles.Category}>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>1-1차</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>23/12/29</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>이승준</div>\n                </div>\n                <div className = {styles.Categorybody}>\n                    <div className = {styles.BodyFont}>특이사항 없음</div>\n                </div>\n                <div className = {styles.Categorybody}></div>\n                <div className = {styles.Buttonbody}>\n                    <ChecButton>\n                        <div className ={styles.ButtonFont}>확인하기</div>\n                    </ChecButton>\n                </div>\n            </div>\n            <div className = {styles.Line}></div>\n            \n            </div>\n            </form>\n        </div>\n    );\n};\n"
                }
            }
        },
        "create": {
            "__files__": {
                "page.js": "\"use client\";\n\nimport styles from \"@/styles/Create.module.scss\";\nimport Swal from \"sweetalert2\";\nimport {\n  Inputbox,\n  PostInputbox,\n  InputAreabox,\n  DropInputbox,\n  FileInputbox,\n  Checkbox,\n} from \"@/components/Inputbox\";\nimport { Button_Y } from \"@/components/Button\";\nimport withAuth from \"@/utils/hoc/withAuth\"; // withAuth HOC 사용\n\nimport { useForm } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport { createFile, newIdGenerate } from \"@/utils/api\";\nimport { useRouter } from \"next/navigation\";\n\nimport { createUser } from \"@/utils/api\";\nimport {\n  banklist,\n  sintacklist,\n  classificationlist,\n  typeidlist,\n  typelist,\n  grouplist,\n  turnlist,\n  sortlist,\n} from \"@/components/droplistdata\";\n\nfunction Create() {\n  const router = useRouter();\n\n  const { register, handleSubmit, reset } = useForm();\n\n  const [newid, setNewid] = useState(\"\");\n\n  useEffect(() => {\n    const newId = newIdGenerate();\n    const getData = () => {\n      newId.then((dummyData) => {\n        setNewid(dummyData);\n      });\n    };\n    getData();\n  }, []);\n\n  const [isupload, setIsupload] = useState({\n    upload: false,\n    A: false,\n    B: false,\n    C: false,\n    D: false,\n    E: false,\n    F: false,\n    G: false,\n    H: false,\n    I: false,\n    exception: false,\n    investment: false,\n    jscontract: false,\n  });\n  const [file, setFile] = useState({\n    upload: \"\",\n    A: \"\",\n    B: \"\",\n    C: \"\",\n    D: \"\",\n    E: \"\",\n    F: \"\",\n    G: \"\",\n    H: \"\",\n    I: \"\",\n    exception: \"\",\n    investment: \"\",\n    jscontract: \"\",\n  });\n  const [files, setFiles] = useState([]);\n\n  const handleCheckboxChange = (e) => {\n    const { name, checked } = e.target;\n\n    setIsupload((prev) => {\n      const updatedState = {\n        ...prev,\n        [name]: checked,\n      };\n      return updatedState;\n    });\n  };\n\n  const handleChange = (e) => {\n    // file 핸들링\n    const changename = e.target.className;\n    console.log(changename);\n    const value = e.target.value;\n    const originalfile = e.target.files[0];\n    const extension = value.split(\".\")[1];\n\n    setIsupload((prev) => ({ ...prev, [changename]: true }));\n    setFile((prev) => ({ ...prev, [changename]: [value] }));\n    const file = new File(\n      [originalfile],\n      [newid] + \"_\" + [e.target.className] + \".\" + extension\n    );\n\n    setFiles((prev) => [...prev, file]);\n  };\n\n  const onSubmit = (data) => {\n    data.fileinfo = isupload;\n    console.log(data);\n\n    createFile(files);\n    createUser(data);\n\n    Swal.fire({\n      icon: \"success\",\n      title: \"회원정보가 입력되었습니다.\",\n      text: \"관리번호 : \" + newid + \"/ 회원명 : \" + data.userinfo.name,\n    });\n    reset();\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h3>회원 정보</h3>\n        <div className={styles.content_container}>\n          <div className={styles.Font}>관리번호 : {newid}</div> <h1></h1>\n          <Inputbox\n            type=\"text\"\n            placeholder=\"이름 *\"\n            register={register(\"userinfo.name\", { required: true })}\n          />\n          <Inputbox\n            type=\"phone\"\n            placeholder=\"휴대폰 번호 *\"\n            register={register(\"userinfo.phone\", { required: true })}\n          />\n          <Inputbox\n            type=\"number\"\n            placeholder=\"주민번호 앞자리 *\"\n            register={register(\"userinfo.firstid\", { required: true })}\n          />\n          <Inputbox\n            type=\"number\"\n            placeholder=\"주민번호 뒷자리 *\"\n            register={register(\"userinfo.secondid\", { required: true })}\n          />\n          <Inputbox\n            type=\"email\"\n            placeholder=\"이메일 *\"\n            register={register(\"userinfo.email\", { required: true })}\n          />\n          <DropInputbox\n            list={classificationlist}\n            register={register(\"userinfo.sort\", { required: true })}\n            placeholder=\"분류 *\"\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"가입경로 *\"\n            register={register(\"userinfo.come\", { required: true })}\n          />\n          <DropInputbox\n            list={banklist}\n            register={register(\"userinfo.bank\", { required: true })}\n            placeholder=\"은행 *\"\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"계좌번호 *\"\n            register={register(\"userinfo.bankid\", { required: true })}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"예금주 *\"\n            register={register(\"userinfo.bankwho\", { required: true })}\n          />\n          <div className={styles.InputboxField}>\n            <div className={styles.InputFont}>법정주소 *</div>\n            <PostInputbox\n              placeholder=\"법정주소\"\n              name=\"userinfo.post\"\n              register={register(\"userinfo.post\", { required: true })}\n            />\n          </div>\n          <div className={styles.InputboxField}>\n            <div className={styles.InputFont}>우편물 주소지 *</div>\n            <PostInputbox\n              placeholder=\"우편물 주소지\"\n              name=\"userinfo.getpost\"\n              register={register(\"userinfo.getpost\", { required: true })}\n            />\n          </div>\n          <div className={styles.InputboxField}></div>\n        </div>\n\n        <h3>관리 정보</h3>\n        <div className={styles.mainbody}>\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <DropInputbox\n                list={typeidlist}\n                register={register(\"data.submitturn\", { required: true })}\n                placeholder=\"제출 순번 *\"\n              />\n              <DropInputbox\n                list={typelist}\n                name=\"type\"\n                register={register(\"data.type\", { required: true })}\n                placeholder=\"유형 *\"\n              />\n            </div>\n            <div className={styles.content_body2}>\n              <DropInputbox\n                list={grouplist}\n                name=\"group\"\n                register={register(\"data.group\", { required: true })}\n                placeholder=\"그룹 *\"\n              />\n              <DropInputbox\n                list={turnlist}\n                name=\"turn\"\n                register={register(\"data.turn\", { required: true })}\n                placeholder=\"턴 *\"\n              />\n            </div>\n          </div>\n\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"date\"\n                date_placeholder=\"가입일자 *\"\n                register={register(\"data.submitdate\", { required: true })}\n              />\n            </div>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"number\"\n                placeholder=\"가입가 *\"\n                register={register(\"data.submitprice\", { required: true })}\n              />\n            </div>\n          </div>\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"date\"\n                date_placeholder=\"예약금 납입일자 *\"\n                register={register(\"data.earnestdate\", { required: true })}\n              />\n            </div>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"number\"\n                placeholder=\"예약금 *\"\n                register={register(\"data.earnest\", { required: true })}\n              />\n            </div>\n          </div>\n          <div className={styles.content_body}>\n            <div className={styles.content_body3}>\n              <Checkbox\n                label=\"7차 면제\"\n                name=\"exception\"\n                onChange={handleCheckboxChange}\n              />\n            </div>\n            <div className={styles.content_body3}>\n              <Checkbox\n                label=\"출자금\"\n                name=\"investment\"\n                onChange={handleCheckboxChange}\n              />\n            </div>\n            <div className={styles.content_body3}>\n              <Checkbox\n                label=\"자산A동 계약서\"\n                name=\"jscontract\"\n                onChange={handleCheckboxChange}\n              />\n            </div>\n          </div>\n        </div>\n\n        <h3>MGM</h3>\n        <div className={styles.content_container}>\n          <Inputbox\n            type=\"text\"\n            placeholder=\"업체명 *\"\n            register={register(\"mgm.companyname\", { required: true })}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"이름 *\"\n            register={register(\"mgm.name\", { required: true })}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"기관 *\"\n            register={register(\"mgm.organization\", { required: true })}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"계좌 *\"\n            register={register(\"mgm.accountnumber\", { required: true })}\n          />\n        </div>\n\n        <h3>부속서류</h3>\n        <div className={styles.content_container}>\n          <Checkbox\n            label=\"인감증명서\"\n            name=\"A\"\n            onChange={handleCheckboxChange}\n          />\n          <Checkbox\n            label=\"본인서명확인서\"\n            name=\"B\"\n            onChange={handleCheckboxChange}\n          />\n          <Checkbox label=\"확약서\" name=\"C\" onChange={handleCheckboxChange} />\n          <Checkbox label=\"신분증\" name=\"D\" onChange={handleCheckboxChange} />\n          <Checkbox label=\"무상옵션\" name=\"E\" onChange={handleCheckboxChange} />\n          <Checkbox label=\"창준위용\" name=\"F\" onChange={handleCheckboxChange} />\n          <Checkbox\n            label=\"총회동의서\"\n            name=\"G\"\n            onChange={handleCheckboxChange}\n          />\n          <Checkbox\n            label=\"선호도조사\"\n            name=\"H\"\n            onChange={handleCheckboxChange}\n          />\n          <Checkbox label=\"사은품\" name=\"I\" onChange={handleCheckboxChange} />\n          <span></span>\n          <span></span>\n          <span></span>\n          <span>파일업로드</span>\n          <span></span>\n          <FileInputbox\n            className=\"upload\"\n            name=\"fileupload\"\n            value={file[\"upload\"]}\n            isupload={isupload[\"upload\"]}\n            handleChange={handleChange}\n          />\n        </div>\n\n        <h3>담당자 정보</h3>\n        <div className={styles.content_container}>\n          <Inputbox\n            type=\"text\"\n            placeholder=\"총괄 *\"\n            register={register(\"ext.manage\", { required: true })}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"본부 *\"\n            register={register(\"ext.managemain\", { required: true })}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"팀 *\"\n            register={register(\"ext.manageteam\", { required: true })}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"성명 *\"\n            register={register(\"ext.managename\", { required: true })}\n          />\n        </div>\n\n        <h3>기타 정보</h3>\n        <div className={styles.content_container}>\n          <InputAreabox\n            type=\"text\"\n            placeholder=\"기타 *\"\n            register={register(\"ext.ext\", { required: true })}\n          />\n        </div>\n        <h1></h1>\n        <Button_Y>저장하기</Button_Y>\n        <h1></h1>\n      </form>\n    </div>\n  );\n}\n\nexport default withAuth(Create); // withAuth HOC 적용\n"
            }
        },
        "createwithdraw": {
            "__files__": {
                "page.js": "\"use client\";\n\nimport styles from \"@/styles/Create.module.scss\";\nimport Swal from \"sweetalert2\";\nimport {\n  Inputbox,\n  PostInputbox,\n  InputAreabox,\n  DropInputbox,\n  FileInputbox,\n  Checkbox,\n} from \"@/components/Inputbox\";\nimport { Button_Y } from \"@/components/Button\";\nimport withAuth from \"@/utils/hoc/withAuth\"; // withAuth HOC 사용\n\nimport { useForm } from \"react-hook-form\";\nimport { useState, useEffect } from \"react\";\nimport { createFile, newIdGenerate } from \"@/utils/api\";\nimport { useRouter } from \"next/navigation\";\n\nimport { createUser } from \"@/utils/api\";\nimport {\n  banklist,\n  sintacklist,\n  classificationlist,\n  typeidlist,\n  typelist,\n  grouplist,\n  turnlist,\n  sortlist,\n  cancellist,\n} from \"@/components/droplistdata\";\n\nfunction Createwithdraw() {\n  const router = useRouter();\n\n  const { register, handleSubmit, reset } = useForm();\n\n  const [newid, setNewid] = useState(\"\");\n\n  useEffect(() => {\n    const newId = newIdGenerate();\n    const getData = () => {\n      newId.then((dummyData) => {\n        setNewid(dummyData);\n      });\n    };\n    getData();\n  }, []);\n\n  const [isupload, setIsupload] = useState({\n    upload: false,\n    A: false,\n    B: false,\n    C: false,\n    D: false,\n    E: false,\n    F: false,\n    G: false,\n    H: false,\n    I: false,\n    exception: false,\n    investment: false,\n    jscontract: false,\n  });\n  const [file, setFile] = useState({\n    upload: \"\",\n    A: \"\",\n    B: \"\",\n    C: \"\",\n    D: \"\",\n    E: \"\",\n    F: \"\",\n    G: \"\",\n    H: \"\",\n    I: \"\",\n    exception: \"\",\n    investment: \"\",\n    jscontract: \"\",\n  });\n  const [files, setFiles] = useState([]);\n\n  const handleCheckboxChange = (e) => {\n    const { name, checked } = e.target;\n\n    setIsupload((prev) => {\n      const updatedState = {\n        ...prev,\n        [name]: checked,\n      };\n      return updatedState;\n    });\n  };\n\n  const handleChange = (e) => {\n    // file 핸들링\n    const changename = e.target.className;\n    console.log(changename);\n    const value = e.target.value;\n    const originalfile = e.target.files[0];\n    const extension = value.split(\".\")[1];\n\n    setIsupload((prev) => ({ ...prev, [changename]: true }));\n    setFile((prev) => ({ ...prev, [changename]: [value] }));\n    const file = new File(\n      [originalfile],\n      [newid] + \"_\" + [e.target.className] + \".\" + extension\n    );\n\n    setFiles((prev) => [...prev, file]);\n  };\n\n  const onSubmit = (data) => {\n    data.fileinfo = isupload;\n    console.log(data);\n\n    createFile(files);\n    createUser(data);\n\n    Swal.fire({\n      icon: \"success\",\n      title: \"회원정보가 입력되었습니다.\",\n      text: \"관리번호 : \" + newid + \"/ 회원명 : \" + data.userinfo.name,\n    });\n    reset();\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h3>회원 정보</h3>\n        <div className={styles.content_container}>\n          <div className={styles.Font}>관리번호 : {newid}</div> <h1></h1>\n          <Inputbox\n            type=\"text\"\n            placeholder=\"이름 *\"\n            register={register(\"userinfo.name\", { required: true })}\n          />\n          <Inputbox\n            type=\"phone\"\n            placeholder=\"휴대폰 번호 *\"\n            register={register(\"userinfo.phone\", { required: true })}\n          />\n          <Inputbox\n            type=\"number\"\n            placeholder=\"주민번호 앞자리 *\"\n            register={register(\"userinfo.firstid\", { required: true })}\n          />\n          <Inputbox\n            type=\"number\"\n            placeholder=\"주민번호 뒷자리 *\"\n            register={register(\"userinfo.secondid\", { required: true })}\n          />\n          <Inputbox\n            type=\"email\"\n            placeholder=\"이메일\"\n            register={register(\"userinfo.email\")}\n          />\n          <DropInputbox\n            list={cancellist}\n            register={register(\"userinfo.sort\")}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"가입경로\"\n            register={register(\"userinfo.come\")}\n          />\n          <DropInputbox list={banklist} register={register(\"userinfo.bank\")} />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"계좌번호\"\n            register={register(\"userinfo.bankid\")}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"예금주\"\n            register={register(\"userinfo.bankwho\")}\n          />\n          <div className={styles.InputboxField}>\n            <div className={styles.InputFont}>법정주소</div>\n            <PostInputbox\n              placeholder=\"법정주소\"\n              name=\"userinfo.post\"\n              register={register(\"userinfo.post\")}\n            />\n          </div>\n          <div className={styles.InputboxField}>\n            <div className={styles.InputFont}>우편물 주소지</div>\n            <PostInputbox\n              placeholder=\"우편물 주소지\"\n              name=\"userinfo.getpost\"\n              register={register(\"userinfo.getpost\")}\n            />\n          </div>\n          <div className={styles.InputboxField}></div>\n        </div>\n\n        <h3>관리 정보</h3>\n        <div className={styles.mainbody}>\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <DropInputbox\n                list={typeidlist}\n                register={register(\"data.submitturn\")}\n              />\n              <DropInputbox\n                list={typelist}\n                name=\"type\"\n                register={register(\"data.type\")}\n              />\n            </div>\n            <div className={styles.content_body2}>\n              <DropInputbox\n                list={grouplist}\n                name=\"group\"\n                register={register(\"data.group\")}\n              />\n              <DropInputbox\n                list={turnlist}\n                name=\"turn\"\n                register={register(\"data.turn\")}\n              />\n            </div>\n          </div>\n\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"date\"\n                date_placeholder=\"가입일자\"\n                register={register(\"data.submitdate\")}\n              />\n            </div>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"number\"\n                placeholder=\"가입가\"\n                register={register(\"data.submitprice\")}\n              />\n            </div>\n          </div>\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"date\"\n                date_placeholder=\"예약금 납입일자\"\n                register={register(\"data.earnestdate\")}\n              />\n            </div>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"number\"\n                placeholder=\"예약금\"\n                register={register(\"data.earnest\")}\n              />\n            </div>\n          </div>\n          <div className={styles.content_body}>\n            <div className={styles.content_body3}>\n              <Checkbox\n                label=\"7차 면제\"\n                name=\"exception\"\n                onChange={handleCheckboxChange}\n              />\n            </div>\n            <div className={styles.content_body3}>\n              <Checkbox\n                label=\"출자금\"\n                name=\"investment\"\n                onChange={handleCheckboxChange}\n              />\n            </div>\n            <div className={styles.content_body3}>\n              <Checkbox\n                label=\"자산A동 계약서\"\n                name=\"jscontract\"\n                onChange={handleCheckboxChange}\n              />\n            </div>\n          </div>\n        </div>\n\n        <h3>MGM</h3>\n        <div className={styles.content_container}>\n          <Inputbox\n            type=\"text\"\n            placeholder=\"업체명\"\n            register={register(\"mgm.companyname\")}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"이름\"\n            register={register(\"mgm.name\")}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"기관\"\n            register={register(\"mgm.organization\")}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"계좌\"\n            register={register(\"mgm.accountnumber\")}\n          />\n        </div>\n        <h3>가입해지</h3>\n        <div className={styles.mainbody}>\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"date\"\n                date_placeholder=\"해지일자 *\"\n                register={register(\"cancel.canceldate\", { required: true })}\n              />\n            </div>\n          </div>\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"date\"\n                date_placeholder=\"환급일자 *\"\n                register={register(\"cancel.paybackdate\", { required: true })}\n              />\n            </div>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"number\"\n                placeholder=\"환급금 *\"\n                register={register(\"cancel.paybackprice\", { required: true })}\n              />\n            </div>\n          </div>\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <DropInputbox\n                list={banklist}\n                register={register(\"cancel.bank\", { required: true })}\n              />\n            </div>\n          </div>\n          <div className={styles.content_body}>\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"text\"\n                placeholder=\"예금주 *\"\n                register={register(\"cancel.bankwho\", { required: true })}\n              />\n            </div>{\" \"}\n            <div className={styles.content_body2}>\n              <Inputbox\n                type=\"text\"\n                placeholder=\"계좌번호 *\"\n                register={register(\"cancel.bankid\", { required: true })}\n              />\n            </div>\n          </div>\n        </div>\n\n        <h3>지연이자</h3>\n        <div className={styles.content_container}>\n          <Inputbox\n            type=\"text\"\n            placeholder=\"일수 *\"\n            register={register(\"delayedloan.loandate\", { required: true })}\n          />\n          <Inputbox\n            type=\"number\"\n            placeholder=\"지연이자액 *\"\n            register={register(\"delayedloan.loan\", { required: true })}\n          />\n        </div>\n\n        <h3>부속서류</h3>\n        <div className={styles.content_container}>\n          <Checkbox\n            label=\"인감증명서\"\n            name=\"A\"\n            onChange={handleCheckboxChange}\n          />\n          <Checkbox\n            label=\"본인서명확인서\"\n            name=\"B\"\n            onChange={handleCheckboxChange}\n          />\n          <Checkbox label=\"확약서\" name=\"C\" onChange={handleCheckboxChange} />\n          <Checkbox label=\"신분증\" name=\"D\" onChange={handleCheckboxChange} />\n          <Checkbox label=\"무상옵션\" name=\"E\" onChange={handleCheckboxChange} />\n          <Checkbox label=\"창준위용\" name=\"F\" onChange={handleCheckboxChange} />\n          <Checkbox\n            label=\"총회동의서\"\n            name=\"G\"\n            onChange={handleCheckboxChange}\n          />\n          <Checkbox\n            label=\"선호도조사\"\n            name=\"H\"\n            onChange={handleCheckboxChange}\n          />\n          <Checkbox label=\"사은품\" name=\"I\" onChange={handleCheckboxChange} />\n          <span></span>\n          <span></span>\n          <span></span>\n          <span>파일업로드</span>\n          <span></span>\n          <FileInputbox\n            className=\"upload\"\n            name=\"fileupload\"\n            value={file[\"upload\"]}\n            isupload={isupload[\"upload\"]}\n            handleChange={handleChange}\n          />\n        </div>\n\n        <h3>담당자 정보</h3>\n        <div className={styles.content_container}>\n          <Inputbox\n            type=\"text\"\n            placeholder=\"총괄\"\n            register={register(\"ext.manage\")}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"본부\"\n            register={register(\"ext.managemain\")}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"팀\"\n            register={register(\"ext.manageteam\")}\n          />\n          <Inputbox\n            type=\"text\"\n            placeholder=\"성명\"\n            register={register(\"ext.managename\")}\n          />\n        </div>\n\n        <h3>기타 정보</h3>\n        <div className={styles.content_container}>\n          <InputAreabox\n            type=\"text\"\n            placeholder=\"기타\"\n            register={register(\"ext.ext\")}\n          />\n        </div>\n        <h1></h1>\n        <Button_Y>저장하기</Button_Y>\n        <h1></h1>\n      </form>\n    </div>\n  );\n}\n\nexport default withAuth(Createwithdraw); // withAuth HOC 적용\n"
            }
        },
        "dashboard": {
            "__files__": {
                "page.js": "import styles from \"../../styles/Dashboard.module.scss\";\nimport dash1 from \"../../img/dash1.png\";\nimport dash2 from \"../../img/dash2.png\";\nimport dash3 from \"../../img/dash3.png\";\nimport dash4 from \"../../img/dash4.png\";\nimport up from \"../../img/up.png\";\nimport calendar from \"../../img/calendar.png\";\nimport { BsBagDash } from \"react-icons/bs\";\nimport { BiGroup } from \"react-icons/bi\";\nimport { BsDatabase } from \"react-icons/bs\";\nimport { BiCalendar } from \"react-icons/bi\";\nimport { AiFillCaretUp } from \"react-icons/ai\";\n\nconst Dashboard = () =>{\n    return (\n      <div className={styles.container}>\n        <div className={styles.MainTitle}>\n          <div className={styles.ContractBody}>\n            <div className={styles.Contract}>\n\n              <div className={styles.ContractSum}>\n                <div className={styles.ContractValue}>\n                  <div className={styles.ContractIcons}>\n                    <div className={styles.ContractImg} style = {{color:'#7152F3'}}>\n                      <BsBagDash style={{ width: '100%', height: '100%' }} />\n                    </div>\n                  </div>\n                  <div className={styles.ContractName}>총 계약건수</div>\n                </div>\n                <div className={styles.ContractValue2}>\n                  <div className={styles.ContractVal1}>\n                    <div className={styles.Value}>1028</div>\n                  </div>\n                  <div className={styles.ContractVal2}>\n                    <div className={styles.Percentage_G}>\n                      <div className={styles.UpImg} style = {{color:'#30BE82'}}>\n                        <AiFillCaretUp style={{ width: '100%', height: '100%' }} />\n                      </div>\n                      <div className={styles.UpText}>\n                        12%\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className={styles.Bottominfo}>\n                  <div className={styles.BottomDate}>\n                    업데이트 : 2023년 12월 28일\n                  </div>\n                </div>\n              </div> \n              {/* 덩어리 하나 */}\n            \n              <div className={styles.ContractSum}>\n                <div className={styles.ContractValue}>\n                  <div className={styles.ContractIcons}>\n                    <div className={styles.ContractImg} style = {{color:'#7152F3'}}>\n                      <BiGroup style={{ width: '100%', height: '100%' }} />\n                    </div>\n                  </div>\n                  <div className={styles.ContractName}>완료인원</div>\n                </div>\n                <div className={styles.ContractValue2}>\n                  <div className={styles.ContractVal1}>\n                    <div className={styles.Value}>390</div>\n                  </div>\n                  <div className={styles.ContractVal2}>\n                    <div className={styles.Percentage_G}>\n                      <div className={styles.UpImg} style = {{color:'#30BE82'}}>\n                        <AiFillCaretUp style={{ width: '100%', height: '100%' }} />\n                      </div>\n                      <div className={styles.UpText}>\n                        5%\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className={styles.Bottominfo}>\n                  <div className={styles.BottomDate}>\n                    업데이트 : 2023년 12월 28일\n                  </div>\n                </div>\n              </div> \n              {/* 덩어리 하나 */}\n\n            </div>\n            <div className={styles.Contract}>\n              <div className={styles.ContractSum}>\n                <div className={styles.ContractValue}>\n                  <div className={styles.ContractIcons}>\n                    <div className={styles.ContractImg} style = {{color:'#7152F3'}}>\n                      <BsDatabase style={{ width: '100%', height: '100%' }} />\n                    </div>\n                  </div>\n                  <div className={styles.ContractName}>계약금액</div>\n                </div>\n                <div className={styles.ContractValue2}>\n                  <div className={styles.ContractVal}>\n                    <div className={styles.Value}>12,390,000,000 ₩</div>\n                  </div>\n                </div>\n                <div className={styles.Bottominfo}>\n                  <div className={styles.BottomDate}>\n                    업데이트 : 2023년 12월 28일\n                  </div>\n                </div>\n              </div> \n              {/* 덩어리 하나 */}\n\n              <div className={styles.ContractSum}>\n                <div className={styles.ContractValue}>\n                  <div className={styles.ContractIcons}>\n                    <div className={styles.ContractImg} style = {{color:'#7152F3'}}>\n                      <BsDatabase style={{ width: '100%', height: '100%' }} />\n                    </div>\n                  </div>\n                  <div className={styles.ContractName}>확입금액</div>\n                </div>\n                <div className={styles.ContractValue2}>\n                  <div className={styles.ContractVal}>\n                    <div className={styles.Value}>8,990,000,000 ₩</div>\n                  </div>\n                </div>\n                <div className={styles.Bottominfo}>\n                  <div className={styles.BottomDate}>\n                    업데이트 : 2023년 12월 28일\n                  </div>\n                </div>\n              </div> \n              {/* 덩어리 하나 */}\n\n            </div>\n\n\n            \n            <div className={styles.Client}>\n              <div className={styles.ClientBody}>\n                <div className={styles.ClientContents}>\n                  <div className={styles.ClientTitle}>\n                    <div className={styles.ClientTitle1}>\n                      <div className={styles.Titlefont}>\n                        미납자 명단\n                      </div>\n                    </div>\n                    <div className={styles.ClientTitle2}>\n                      <div className={styles.InfoBotton}>\n                        <div className={styles.Bottonfont}>정보입력</div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className={styles.ClientCategory}>\n                    <div className={styles.Number}>\n                      <div className={styles.Categoryfont}>\n                        관리번호\n                      </div>\n                    </div>\n                    <div className={styles.Name}>\n                      <div className={styles.Categoryfont}>\n                        성명\n                      </div>\n                    </div>\n                    <div className={styles.Cha}>\n                      <div className={styles.Categoryfont}>\n                        최종납부\n                      </div>\n                    </div>\n                    <div className={styles.Dong}>\n                      <div className={styles.Categoryfont}>\n                        임시동호\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div className={styles.ClientValue}>\n                    <div className={styles.Number}>\n                      <div className={styles.Valuefont}>\n                        123455\n                      </div>\n                    </div>\n                    <div className={styles.Name}>\n                      <div className={styles.Valuefont}>\n                        이승준\n                      </div>\n                    </div>\n                    <div className={styles.Cha}>\n                      <div className={styles.Valuefont}>\n                        4차\n                      </div>\n                    </div>\n                    <div className={styles.Dong}>\n                      <div className={styles.Valuefont}>\n                        84A-사-1\n                      </div>\n                    </div>\n                  </div>\n                  {/* 덩어리 하나 */}\n\n                  <div className={styles.ClientValue}>\n                    <div className={styles.Number}>\n                      <div className={styles.Valuefont}>\n                        123455\n                      </div>\n                    </div>\n                    <div className={styles.Name}>\n                      <div className={styles.Valuefont}>\n                        이승준\n                      </div>\n                    </div>\n                    <div className={styles.Cha}>\n                      <div className={styles.Valuefont}>\n                        4차\n                      </div>\n                    </div>\n                    <div className={styles.Dong}>\n                      <div className={styles.Valuefont}>\n                        84A-사-1\n                      </div>\n                    </div>\n                  </div>\n                  {/* 덩어리 하나 */}\n\n                  <div className={styles.ClientValue}>\n                    <div className={styles.Number}>\n                      <div className={styles.Valuefont}>\n                        123455\n                      </div>\n                    </div>\n                    <div className={styles.Name}>\n                      <div className={styles.Valuefont}>\n                        이승준\n                      </div>\n                    </div>\n                    <div className={styles.Cha}>\n                      <div className={styles.Valuefont}>\n                        4차\n                      </div>\n                    </div>\n                    <div className={styles.Dong}>\n                      <div className={styles.Valuefont}>\n                        84A-사-1\n                      </div>\n                    </div>\n                  </div>\n                  {/* 덩어리 하나 */}\n\n                  <div className={styles.ClientValue}>\n                    <div className={styles.Number}>\n                      <div className={styles.Valuefont}>\n                        123455\n                      </div>\n                    </div>\n                    <div className={styles.Name}>\n                      <div className={styles.Valuefont}>\n                        이승준\n                      </div>\n                    </div>\n                    <div className={styles.Cha}>\n                      <div className={styles.Valuefont}>\n                        4차\n                      </div>\n                    </div>\n                    <div className={styles.Dong}>\n                      <div className={styles.Valuefont}>\n                        84A-사-1\n                      </div>\n                    </div>\n                  </div>\n                  {/* 덩어리 하나 */}\n\n                  <div className={styles.ClientValue}>\n                    <div className={styles.Number}>\n                      <div className={styles.Valuefont}>\n                        123455\n                      </div>\n                    </div>\n                    <div className={styles.Name}>\n                      <div className={styles.Valuefont}>\n                        이승준\n                      </div>\n                    </div>\n                    <div className={styles.Cha}>\n                      <div className={styles.Valuefont}>\n                        4차\n                      </div>\n                    </div>\n                    <div className={styles.Dong}>\n                      <div className={styles.Valuefont}>\n                        84A-사-1\n                      </div>\n                    </div>\n                  </div>\n                  {/* 덩어리 하나 */}\n\n                  <div className={styles.ClientValue}>\n                    <div className={styles.Number}>\n                      <div className={styles.Valuefont}>\n                        123455\n                      </div>\n                    </div>\n                    <div className={styles.Name}>\n                      <div className={styles.Valuefont}>\n                        이승준\n                      </div>\n                    </div>\n                    <div className={styles.Cha}>\n                      <div className={styles.Valuefont}>\n                        4차\n                      </div>\n                    </div>\n                    <div className={styles.Dong}>\n                      <div className={styles.Valuefont}>\n                        84A-사-1\n                      </div>\n                    </div>\n                  </div>\n                  {/* 덩어리 하나 */}\n\n                  <div className={styles.ClientValue}>\n                    <div className={styles.Number}>\n                      <div className={styles.Valuefont}>\n                        123455\n                      </div>\n                    </div>\n                    <div className={styles.Name}>\n                      <div className={styles.Valuefont}>\n                        이승준\n                      </div>\n                    </div>\n                    <div className={styles.Cha}>\n                      <div className={styles.Valuefont}>\n                        4차\n                      </div>\n                    </div>\n                    <div className={styles.Dong}>\n                      <div className={styles.Valuefont}>\n                        84A-사-1\n                      </div>\n                    </div>\n                  </div>\n                  {/* 덩어리 하나 */}\n\n\n                </div>\n              </div>\n            </div>\n\n\n          </div>\n          <div className={styles.Date}>\n            <div className={styles.DateTitle}>\n              <div className={styles.DateTitle1}>\n                <div className={styles.DateTitleName}>일정관리</div>\n              </div>\n              <div className={styles.DateTitle2}>\n                <div className={styles.DateIcon}>\n                  <div className={styles.CalendarImg} style = {{color:'#7152F3'}}>\n                      <BiCalendar style={{ width: '100%', height: '100%' }} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={styles.Calendar}></div>\n            <div className={styles.Line}></div>\n            <div className={styles.Today}>\n              <div className={styles.TodayTitle}>\n                <div className={styles.TodayTitle1}>\n                  <div className={styles.TodayTitleName}>오늘의 일정</div>\n                </div>\n                <div className={styles.TodayTitle2}></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.Notice}>\n          <div className={styles.NoticeTitle}>\n            <div className={styles.NoticeTitle1}>\n              <div className={styles.NoticeName}>공지사항</div>\n            </div>\n            <div className={styles.NoticeTitle2}>\n              <div className={styles.NoticeBotton}>\n                <div className={styles.NoticeBottonFont}>View All</div>\n              </div>\n            </div>\n          </div>\n          <div className={styles.NoticeCategory}>\n            <div className={styles.NoticeCategory1}>\n              <div className={styles.NoticeCategoryFont}>제목</div>\n            </div>\n            <div className={styles.NoticeCategory2}>\n              <div className={styles.NoticeCategoryFont}>작성자</div>\n            </div>\n            <div className={styles.NoticeCategory3}>\n              <div className={styles.NoticeCategoryFont}>사항</div>\n            </div>\n            <div className={styles.NoticeCategory4}>\n              <div className={styles.NoticeCategoryFont}>작성일자</div>\n            </div>\n            <div className={styles.NoticeCategory5}>\n              <div className={styles.NoticeCategoryFont}>상태</div>\n            </div>\n          </div>\n\n          <div className={styles.NoticeContent}>\n            <div className={styles.NoticeCategory1}>\n              <div className={styles.NoticeContentFont}>사이트 개설 안내</div>\n            </div>\n            <div className={styles.NoticeCategory2}>\n              <div className={styles.NoticeContentFont}>오준서</div>\n            </div>\n            <div className={styles.NoticeCategory3}>\n              <div className={styles.NoticeContentFont}>일반</div>\n            </div>\n            <div className={styles.NoticeCategory4}>\n              <div className={styles.NoticeContentFont}>23-12-28 09:27 AM</div>\n            </div>\n            <div className={styles.NoticeCategory5}>\n              <div className={styles.ContentState_G}>\n                <div className={styles.G_Font}>해결됨</div>\n              </div>\n            </div>\n          </div>\n          {/* 내용 한 덩어리 */}\n\n          <div className={styles.NoticeContent}>\n            <div className={styles.NoticeCategory1}>\n              <div className={styles.NoticeContentFont}>[긴급] 시스템 점검 안내 (12/29 8Am 부터)</div>\n            </div>\n            <div className={styles.NoticeCategory2}>\n              <div className={styles.NoticeContentFont}>오준서</div>\n            </div>\n            <div className={styles.NoticeCategory3}>\n              <div className={styles.NoticeContentFont}>긴급</div>\n            </div>\n            <div className={styles.NoticeCategory4}>\n              <div className={styles.NoticeContentFont}>23-12-28 09:27 AM</div>\n            </div>\n            <div className={styles.NoticeCategory5}>\n              <div className={styles.ContentState_B}>\n                <div className={styles.B_Font}>진행중</div>\n              </div>\n            </div>\n          </div>\n          {/* 내용 한 덩어리 */}\n          \n\n        </div>\n      </div>\n      );\n  };\n\nexport default Dashboard;"
            }
        },
        "inputmoney": {
            "__files__": {
                "page.js": "\"use client\";\n\nimport styles from \"@/styles/Inputmoneysearch.module.scss\";\nimport { Searchbox } from \"@/components/Inputbox\";\nimport Link from \"next/link\";\nimport { searchnameState, searchnumberState } from \"@/utils/atom\";\nimport { namesearchSelector } from \"@/utils/selector\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilValueLoadable, useSetRecoilState } from \"recoil\";\nimport { CgSearch } from \"react-icons/cg\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst SearchList = ({ name, number }) => {\n  let searchname = name.length > 1 ? name : \"\";\n  let searchnumber = number.length > 1 ? number : \"\";\n\n  const setNameState = useSetRecoilState(searchnameState);\n  const setNumberState = useSetRecoilState(searchnumberState);\n\n  useEffect(() => {\n    setNameState(searchname);\n    setNumberState(searchnumber);\n  }, [searchname, searchnumber, setNameState, setNumberState]);\n\n  let searchdata = useRecoilValueLoadable(namesearchSelector);\n\n  if (searchdata.state === \"loading\") {\n    return <div>Loading...</div>;\n  }\n\n  if (searchdata.state === \"hasError\") {\n    return <div>Error fetching data</div>;\n  }\n\n  if (searchdata.state === \"hasValue\") {\n    return (\n      <div>\n        {searchdata.contents.map((k) => (\n          <Link\n            key={k.id}\n            className={styles.MainContainer}\n            href={`/inputmoney/userinfo/${k.id}`}\n          >\n            <div className={styles.CategoryContent}>\n              <div className={styles.CategoryBody1}>\n                <div className={styles.ContentFont}>{k.id}</div>\n              </div>\n              <div className={styles.CategoryBody1}>\n                <div className={styles.ContentFont}>{k.userinfo.name}</div>\n              </div>\n              <div className={styles.CategoryBody1}>\n                <div className={styles.ContentFont}>\n                  {k.data.type}-{k.data.group}-{k.data.turn}\n                </div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nfunction Inputmoneysearch() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onNameChange = (e) => {\n    const text = e.target.value;\n    setName(text.replace(/ /g, \"\"));\n  };\n\n  const onNumberChange = (e) => {\n    const text = e.target.value;\n    setNumber(text.replace(/ /g, \"\"));\n  };\n\n  return (\n    <div className={styles.SelectContainer}>\n      <div className={styles.SelectTitleBody}>\n        <div className={styles.SelectTitle}>\n          <div className={styles.SelectTitleFont}>회원선택</div>\n        </div>\n        <div className={styles.Search}>\n          <div className={styles.SearchBody}>\n            <Searchbox\n              type=\"text\"\n              placeholder=\"관리번호\"\n              onChange={onNumberChange}\n            />\n            <Searchbox\n              type=\"text\"\n              placeholder=\"회원성함\"\n              onChange={onNameChange}\n            />\n          </div>\n        </div>\n        <div className={styles.CategoryBody}>\n          <div className={styles.CategoryBody1}>\n            <div className={styles.CategoryFont}>회원번호</div>\n          </div>\n          <div className={styles.CategoryBody1}>\n            <div className={styles.CategoryFont}>성명</div>\n          </div>\n          <div className={styles.CategoryBody1}>\n            <div className={styles.CategoryFont}>동호번호</div>\n          </div>\n        </div>\n        <div className={styles.Line}></div>\n        <SearchList name={name} number={number} />\n        <div className={styles.Line}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default withAuth(Inputmoneysearch);\n"
            },
            "cancle": {
                "[id]": {
                    "__files__": {
                        "page.js": "\"use client\";\n\nimport {\n  Inputbox,\n  Inputbox_L,\n  Inputbox_M,\n  PostInputbox,\n  LongInputbox,\n  DropInputbox,\n  FileInputbox,\n  Spanbox,\n} from \"@/components/Inputbox\";\nimport {\n  PaymentScheduleButton,\n  ToggleButton,\n  SearchButton,\n  Button_Y,\n  Button_N,\n  ModifyButton,\n} from \"@/components/Button\";\nimport styles from \"@/styles/Inputmoneycancle.module.scss\";\nimport { BsDatabase } from \"react-icons/bs\";\nimport { CgSearch } from \"react-icons/cg\";\nimport { useForm } from \"react-hook-form\";\nimport Link from \"next/link\";\n\nimport { useEffect, useState } from \"react\";\nimport { useRecoilValueLoadable, useRecoilState } from \"recoil\";\nimport { userinfoSelector } from \"@/utils/selector\";\nimport { useridState } from \"@/utils/atom\";\nimport { usePathname, useRouter } from \"next/navigation\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst Inputmoneycancle = () => {\n  const { register, watch, handleSubmit } = useForm();\n  const [IdState, setIdState] = useRecoilState(useridState);\n  const [userData, setUserData] = useState(null);\n\n  const pathname = usePathname();\n\n  useEffect(() => {\n    const regex = /\\/(\\d+)$/;\n    const match = pathname.match(regex);\n    if (match) {\n      const extractedId = match[1];\n      console.log(extractedId);\n      setIdState(extractedId);\n    }\n  }, [pathname, setIdState, IdState]);\n\n  const userselectordata = useRecoilValueLoadable(userinfoSelector);\n  useEffect(() => {\n    if (userselectordata.state === \"hasValue\") {\n      const userdata = userselectordata.contents;\n      if (userdata === undefined) {\n        console.error(\"잘못된 접근입니다\");\n      } else {\n        setUserData(userdata);\n      }\n    }\n  }, [userselectordata]);\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.Mainbody}>\n        <div className={styles.MainTitle}>\n          <div className={styles.MainTitle1}>\n            <div className={styles.SearchClientNum}>\n              <div className={styles.SearchFont1}>회원번호 : </div>\n              <div className={styles.SearchFont2}>{userData.id}</div>\n            </div>\n          </div>\n          <div className={styles.MainTitle2}>\n            <Link href=\"/inputmoney\">\n              <SearchButton>\n                <div className={styles.BottonIcon} style={{ color: \"white\" }}>\n                  <CgSearch style={{ width: \"100%\", height: \"100%\" }} />\n                </div>\n                <div className={styles.BottonFont}>회원선택</div>\n              </SearchButton>\n            </Link>\n          </div>\n        </div>\n        <div className={styles.InputBody}>\n          <div className={styles.InputBodyTitle}>\n            <div className={styles.IBTIcon}>\n              <div className={styles.Icon} style={{ color: \"#7152F3\" }}>\n                <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.IBTText}>해약</div>\n          </div>\n          <div className={styles.Line}></div>\n          <div className={styles.IBLayer}>\n            <Inputbox_L\n              type=\"text\"\n              placeholder=\"해지일자\"\n              register={register(\"cancledate\")}\n            />\n          </div>\n          {/* 한 덩어리 */}\n\n          <div className={styles.IBLayer}>\n            <Inputbox_L\n              type=\"text\"\n              placeholder=\"환급일자\"\n              register={register(\"paybackdate\")}\n            />\n          </div>\n          {/* 한 덩어리 */}\n\n          {/* 한 덩어리 */}\n          <div className={styles.IBLayer}>\n            <Inputbox_L\n              type=\"text\"\n              placeholder=\"해지일자\"\n              register={register(\"paybackmoney\")}\n            />\n          </div>\n          {/* 한 덩어리 */}\n\n          <div className={styles.IBBottonLayer}>\n            <Button_N>\n              <div className={styles.BottonFont2}>취소</div>\n            </Button_N>\n            <Button_Y>\n              <div className={styles.BottonFont}>해약</div>\n            </Button_Y>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withAuth(Inputmoneycancle);\n"
                    }
                }
            },
            "loan": {
                "__files__": {
                    "page.js": "\"use client\";\n\nimport {\n  Inputbox,\n  Inputbox_L,\n  Inputbox_M,\n  PostInputbox,\n  LongInputbox,\n  DropInputbox,\n  FileInputbox,\n  Spanbox,\n} from \"@/components/Inputbox\";\nimport {\n  PaymentScheduleButton,\n  ToggleButton,\n  SearchButton,\n  Button_Y,\n  Button_N,\n} from \"@/components/Button\";\nimport { useForm } from \"react-hook-form\";\nimport styles from \"@/styles/Inputmoneyloan.module.scss\";\nimport { BsDatabase } from \"react-icons/bs\";\nimport { CgSearch } from \"react-icons/cg\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst Inputmoneyloan = () => {\n  const { register, watch, handleSubmit } = useForm();\n\n  return (\n    <div className={styles.Container}>\n      <div className={styles.Mainbody}>\n        <div className={styles.MainTitle}>\n          <div className={styles.MainTitle1}>\n            <div className={styles.SearchClientNum}>\n              <div className={styles.SearchFont1}>회원번호 : </div>\n              <div className={styles.SearchFont2}>123456</div>\n            </div>\n          </div>\n          <div className={styles.MainTitle2}>\n            <Link href=\"/inputmoney\">\n              <SearchButton>\n                <div className={styles.BottonIcon} style={{ color: \"white\" }}>\n                  <CgSearch style={{ width: \"100%\", height: \"100%\" }} />\n                </div>\n                <div className={styles.BottonFont}>회원선택</div>\n              </SearchButton>\n            </Link>\n          </div>\n        </div>\n        <div className={styles.InputBody}>\n          <div className={styles.InputBodyTitle}>\n            <div className={styles.IBTIcon}>\n              <div className={styles.Icon} style={{ color: \"#7152F3\" }}>\n                <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.IBTText}>대출</div>\n          </div>\n          <div className={styles.Line}></div>\n          <div className={styles.IBLayer}>\n            <Inputbox_L\n              type=\"date\"\n              date_placeholder=\"대출일\"\n              register={register(\"loandate\")}\n            />\n          </div>\n          <div className={styles.IBLayer}>\n            <div className={styles.IBTText2}>\n              <div className={styles.IBTText2Font}>농협</div>\n            </div>\n            <Inputbox_L\n              type=\"text\"\n              placeholder=\"대출금\"\n              register={register(\"N_loanomey\")}\n            />\n          </div>\n          {/* 한 덩어리 */}\n\n          <div className={styles.IBLayer}>\n            <div className={styles.IBTText2}>\n              <div className={styles.IBTText2Font}>새마을</div>\n            </div>\n            <Inputbox_L\n              type=\"text\"\n              placeholder=\"대출금\"\n              register={register(\"S_loanmoney\")}\n            />\n          </div>\n          {/* 한 덩어리 */}\n\n          {/* 한 덩어리 */}\n          <div className={styles.InputBodyTitle}>\n            <div className={styles.IBTIcon}>\n              <div className={styles.Icon} style={{ color: \"#7152F3\" }}>\n                <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.IBTText}>자납</div>\n          </div>\n\n          <div className={styles.IBLayer}>\n            <Inputbox_L\n              type=\"date\"\n              date_placeholder=\"자납일\"\n              register={register(\"selfpaydate\")}\n            />\n          </div>\n          {/* 한 덩어리 */}\n\n          <div className={styles.IBLayer}>\n            <Inputbox_L\n              type=\"text\"\n              placeholder=\"자납\"\n              register={register(\"selfpayment\")}\n            />\n          </div>\n          {/* 한 덩어리 */}\n\n          {/* 한 덩어리 */}\n          <div className={styles.IBLayer}>\n            <Inputbox_L\n              type=\"text\"\n              placeholder=\"면제액\"\n              register={register(\"exemptionmoney\")}\n            />\n          </div>\n          {/* 한 덩어리 */}\n\n          <div className={styles.InputBodyTitle}>\n            <div className={styles.IBTIcon}>\n              <div className={styles.Icon} style={{ color: \"#7152F3\" }}>\n                <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.IBTText}>총액</div>\n          </div>\n\n          <div className={styles.IBLayer}>\n            <Inputbox_L\n              type=\"text\"\n              placeholder=\"총액\"\n              register={register(\"totalmoney\")}\n            />\n          </div>\n          {/* 한 덩어리 */}\n\n          <div className={styles.IBBottonLayer}>\n            <Button_N>\n              <div className={styles.BottonFont2}>취소</div>\n            </Button_N>\n            <Button_Y>\n              <div className={styles.BottonFont}>확인</div>\n            </Button_Y>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withAuth(Inputmoneyloan);\n"
                },
                "[id]": {
                    "__files__": {
                        "page.js": "\"use client\";\n\nimport {\n  Inputbox,\n  Inputbox_L,\n  Inputbox_M,\n  PostInputbox,\n  LongInputbox,\n  DropInputbox,\n  FileInputbox,\n  Spanbox,\n} from \"@/components/Inputbox\";\nimport {\n  PaymentScheduleButton,\n  ToggleButton,\n  SearchButton,\n  Button_Y,\n  Button_N,\n} from \"@/components/Button\";\nimport { useForm } from \"react-hook-form\";\nimport styles from \"@/styles/Inputmoneyloan.module.scss\";\nimport { BsDatabase } from \"react-icons/bs\";\nimport { CgSearch } from \"react-icons/cg\";\nimport Link from \"next/link\";\nimport { useState, useEffect } from \"react\";\nimport { useridState } from \"@/utils/atom\";\nimport { useRecoilValueLoadable, useRecoilState } from \"recoil\";\nimport { userinfoSelector, usermoneySelector } from \"@/utils/selector\";\nimport { usePathname, useRouter } from \"next/navigation\";\nimport { fetchLoanInit, fetchLoanUpdate } from \"@/utils/api\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nfunction Inputmoneyloan() {\n  const router = useRouter();\n\n  const [loandate, setLoandate] = useState(\"\");\n  const [selfdate, setSelfdate] = useState(\"\");\n\n  const [price1, setPrice1] = useState(\"\");\n  const [price2, setPrice2] = useState(\"\");\n  const [selfprice, setSelfprice] = useState(\"\");\n\n  const [tot, settot] = useState(0);\n  const [userData, setUserData] = useState(null);\n  const [data, setData] = useState(null);\n  const [IdState, setIdState] = useRecoilState(useridState);\n  const userselectordata = useRecoilValueLoadable(userinfoSelector);\n  const { register, setValue, handleSubmit } = useForm();\n  const pathname = usePathname();\n\n  useEffect(() => {\n    const regex = /\\/(\\d+)$/;\n    const match = pathname.match(regex);\n    if (match) {\n      const extractedId = match[1];\n      setIdState(extractedId);\n    }\n  }, [pathname, setIdState, IdState]);\n\n  const onSubmit = (data) => {\n    data[\"price1\"] = price1;\n    data[\"price2\"] = price2;\n    data[\"selfprice\"] = parseInt(selfprice);\n    data[\"sumprice\"] = tot;\n    console.log(data, IdState);\n\n    fetchLoanUpdate(IdState, data, () => {\n      router.back();\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [IdState]);\n\n  const fetchData = async () => {\n    try {\n      const fetchedData = await fetchLoanInit(IdState);\n      setData(fetchedData);\n      console.log(\"fetchdata : \", fetchedData);\n      setLoandate(fetchedData.loandate);\n      setSelfdate(fetchedData.selfdate);\n      setPrice1(fetchedData.price1);\n      setPrice2(fetchedData.price2);\n      setSelfprice(fetchedData.selfprice);\n      settot(fetchedData.sumprice);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (userselectordata.state === \"hasValue\") {\n      const userdata = userselectordata.contents;\n      if (userdata === undefined) {\n        console.error(\"잘못된 접근입니다\");\n      } else {\n        setUserData(userdata);\n      }\n    }\n  }, [userselectordata]);\n\n  useEffect(() => {\n    calculateTotal();\n  }, [price1, price2, selfprice]);\n\n  const calculateTotal = () => {\n    const price1Value = parseInt(price1) || 0;\n    const price2Value = parseInt(price2) || 0;\n    const selfpriceValue = parseInt(selfprice) || 0;\n    const total = price1Value + price2Value + selfpriceValue;\n    settot(total);\n  };\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"price1\": // 수정: name 속성을 price1, price2와 일치하도록 수정\n        setPrice1(value);\n        break;\n      case \"price2\": // 수정: name 속성을 price1, price2와 일치하도록 수정\n        setPrice2(value);\n        break;\n      case \"selfprice\": // 수정: name 속성을 selfprice와 일치하도록 수정\n        setSelfprice(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      {userselectordata.state === \"hasValue\" && userData && (\n        <div className={styles.Container}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className={styles.Mainbody}>\n              <div className={styles.MainTitle}>\n                <div className={styles.MainTitle1}>\n                  <div className={styles.SearchClientNum}>\n                    <div className={styles.SearchFont1}>고객번호 : </div>\n                    <div className={styles.SearchFont2}>{userData.id}</div>\n                  </div>\n                </div>\n                <div className={styles.MainTitle2}>\n                  <Link href=\"/inputmoney\">\n                    <SearchButton>\n                      <div\n                        className={styles.BottonIcon}\n                        style={{ color: \"white\" }}\n                      >\n                        <CgSearch style={{ width: \"100%\", height: \"100%\" }} />\n                      </div>\n                      <div className={styles.BottonFont}>고객선택</div>\n                    </SearchButton>\n                  </Link>\n                </div>\n              </div>\n              <div className={styles.InputBody}>\n                <div className={styles.InputBodyTitle}>\n                  <div className={styles.IBTIcon}>\n                    <div className={styles.Icon} style={{ color: \"#7152F3\" }}>\n                      <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n                    </div>\n                  </div>\n                  <div className={styles.IBTText}>대출</div>\n                </div>\n                <div className={styles.Line}></div>\n                <div className={styles.IBLayer}>\n                  <Inputbox\n                    type=\"date\"\n                    date_placeholder=\"대출일\"\n                    name=\"loandate\"\n                    onChange={onChange}\n                    defaultValue={\n                      loandate\n                        ? new Date(loandate).toISOString().substring(0, 10)\n                        : 0\n                    }\n                    register={register(\"loandate\")}\n                  />\n                </div>\n                <div className={styles.IBLayer}>\n                  <div className={styles.IBTText2}>\n                    <div className={styles.IBTText2Font}>농협</div>\n                  </div>\n                  <Inputbox_L\n                    type=\"text\"\n                    placeholder=\"농협 대출금\"\n                    name=\"price1\"\n                    onChange={onChange}\n                    register={register(\"price1\")}\n                    defaultValue={price1}\n                  />\n                </div>\n                {/* 한 덩어리 */}\n\n                <div className={styles.IBLayer}>\n                  <div className={styles.IBTText2}>\n                    <div className={styles.IBTText2Font}>새마을</div>\n                  </div>\n                  <Inputbox_L\n                    type=\"text\"\n                    placeholder=\"새마을대출금\"\n                    name=\"price2\"\n                    onChange={onChange}\n                    register={register(\"price2\")}\n                    defaultValue={price2}\n                  />\n                </div>\n                {/* 한 덩어리 */}\n\n                {/* 한 덩어리 */}\n                <div className={styles.InputBodyTitle}>\n                  <div className={styles.IBTIcon}>\n                    <div className={styles.Icon} style={{ color: \"#7152F3\" }}>\n                      <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n                    </div>\n                  </div>\n                  <div className={styles.IBTText}>자납</div>\n                </div>\n\n                <div className={styles.IBLayer}>\n                  <Inputbox\n                    type=\"date\"\n                    date_placeholder=\"자납일\"\n                    name=\"selfdate\"\n                    onChange={onChange}\n                    defaultValue={\n                      selfdate\n                        ? new Date(selfdate).toISOString().substring(0, 10)\n                        : 0\n                    }\n                    register={register(\"selfdate\")}\n                  />\n                </div>\n                {/* 한 덩어리 */}\n\n                <div className={styles.IBLayer}>\n                  <div className={styles.IBTText2}>\n                    <div className={styles.IBTText2Font}>자납액</div>\n                  </div>\n                  <Inputbox_L\n                    type=\"text\"\n                    placeholder=\"자납\"\n                    name=\"selfprice\"\n                    onChange={onChange}\n                    register={register(\"selfprice\")}\n                    defaultValue={selfprice}\n                  />\n                </div>\n\n                <div className={styles.InputBodyTitle}>\n                  <div className={styles.IBTIcon}>\n                    <div className={styles.Icon} style={{ color: \"#7152F3\" }}>\n                      <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n                    </div>\n                  </div>\n                  <div className={styles.IBTText}>총액</div>\n                </div>\n\n                <div className={styles.IBLayer}>\n                  <div className={styles.SearchFont1}>총액 :</div>\n                  <div className={styles.SearchFont2}>\n                    {tot.toLocaleString()}₩\n                  </div>\n                </div>\n\n                <div className={styles.IBBottonLayer}>\n                  <Button_N>\n                    <div className={styles.BottonFont2}>취소</div>\n                  </Button_N>\n                  <Button_Y>\n                    <div className={styles.BottonFont}>확인</div>\n                  </Button_Y>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      )}\n      ;\n    </>\n  );\n}\nexport default withAuth(Inputmoneyloan);\n"
                    }
                }
            },
            "payinfo": {
                "[id]": {
                    "[cha]": {
                        "__files__": {
                            "page.js": "\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { usePathname, useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { userchasuSelector, userinfoSelector } from \"@/utils/selector\";\nimport { useridState, chasuState } from \"@/utils/atom\";\nimport { useRecoilValueLoadable, useRecoilState } from \"recoil\";\nimport { fetchChasuUpdate } from \"@/utils/api\";\nimport { Inputbox, Inputbox_M } from \"@/components/Inputbox\";\nimport {\n  PaymentScheduleButton,\n  SearchButton,\n  Button_Y,\n  Button_N,\n} from \"@/components/Button\";\nimport styles from \"@/styles/Inputmoneypay.module.scss\";\nimport { BsDatabase } from \"react-icons/bs\";\nimport { CgSearch } from \"react-icons/cg\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst formatNumber = (value) => {\n  if (!value) return \"0\";\n  const numberString = value.toString().replace(/[^0-9]/g, \"\");\n  return numberString.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nconst parseNumber = (value) => {\n  if (!value) return \"0\";\n  return value.toString().replace(/,/g, \"\");\n};\n\nfunction Inputmoneypay() {\n  const { register, handleSubmit, setValue } = useForm();\n  const [pay, setpay] = useState(\"0\");\n  const [work, setwork] = useState(\"0\");\n  const [discount, setdiscount] = useState(\"0\");\n  const [del, setdel] = useState(\"0\");\n  const [tot, settotal] = useState(0);\n  const [payprice, setpayprice] = useState(\"0\");\n  const pathname = usePathname();\n  const router = useRouter();\n\n  const [IdState, setIdState] = useRecoilState(useridState);\n  const [ChasuState, setChasuState] = useRecoilState(chasuState);\n  const [userChasuData, setUserChasuData] = useState(null);\n\n  const userChasudatas = useRecoilValueLoadable(userchasuSelector);\n  const [userData, setUserData] = useState(null);\n  const userselectordata = useRecoilValueLoadable(userinfoSelector);\n\n  useEffect(() => {\n    const regex = /\\/(\\d+)\\/(\\d+)$/;\n    const match = pathname.match(regex);\n\n    if (match) {\n      const extractedId = match[1];\n      const extractedChasu = match[2];\n      setIdState(extractedId);\n      setChasuState(extractedChasu);\n    }\n  }, [pathname, setIdState, setChasuState]);\n\n  useEffect(() => {\n    if (userselectordata.state === \"hasValue\") {\n      const userdata = userselectordata.contents;\n      if (userdata === undefined) {\n        console.log(\"잘못된 접근입니다\");\n      } else {\n        setUserData(userdata);\n      }\n    }\n  }, [userselectordata]);\n\n  useEffect(() => {\n    if (userChasudatas.state === \"hasValue\") {\n      const userdata = userChasudatas.contents;\n      if (userdata === undefined) {\n        console.log(\"잘못된 접근입니다\");\n      } else {\n        setUserChasuData(userdata);\n        setpay(formatNumber(userdata.pay));\n        setwork(formatNumber(userdata.work));\n        setdiscount(formatNumber(userdata.discount));\n        setdel(formatNumber(userdata.del));\n        setpayprice(formatNumber(userdata.payprice));\n      }\n    }\n  }, [userChasudatas]);\n\n  const isValidDateString = (dateString) => {\n    const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\n    if (!regex.test(dateString)) return false;\n    const date = new Date(dateString);\n    const timestamp = date.getTime();\n    if (typeof timestamp !== \"number\" || Number.isNaN(timestamp)) return false;\n    return dateString === date.toISOString().substring(0, 10);\n  };\n\n  const onSubmit = (data) => {\n    data[\"sumprice\"] =\n      parseInt(parseNumber(pay)) +\n      parseInt(parseNumber(work)) -\n      parseInt(parseNumber(discount)) -\n      parseInt(parseNumber(del));\n    if (data[\"isclear\"] === undefined) {\n      data[\"isclear\"] = false;\n    }\n    data[\"pay\"] = parseNumber(pay);\n    data[\"work\"] = parseNumber(work);\n    data[\"discount\"] = parseNumber(discount);\n    data[\"del\"] = parseNumber(del);\n    data[\"payprice\"] = parseNumber(payprice);\n    fetchChasuUpdate(IdState, data, () => {\n      router.back();\n    });\n  };\n\n  useEffect(() => {\n    calculateTotal();\n  }, [pay, work, discount, del, payprice]);\n\n  const calculateTotal = () => {\n    const payValue = parseInt(parseNumber(pay)) || 0;\n    const workValue = parseInt(parseNumber(work)) || 0;\n    const discountValue = parseInt(parseNumber(discount)) || 0;\n    const deleteValue = parseInt(parseNumber(del)) || 0;\n    const paypriceValue = parseInt(parseNumber(payprice)) || 0;\n    const total =\n      payValue + workValue - discountValue - deleteValue - paypriceValue;\n    settotal(total);\n  };\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    const formattedValue = formatNumber(value);\n\n    switch (name) {\n      case \"pay\":\n        setpay(formattedValue === \"0\" ? \"\" : formattedValue);\n        break;\n      case \"work\":\n        setwork(formattedValue === \"0\" ? \"\" : formattedValue);\n        break;\n      case \"discount\":\n        setdiscount(formattedValue === \"0\" ? \"\" : formattedValue);\n        break;\n      case \"del\":\n        setdel(formattedValue === \"0\" ? \"\" : formattedValue);\n        break;\n      case \"payprice\":\n        setpayprice(formattedValue === \"0\" ? \"\" : formattedValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      {userChasuData && userselectordata.state === \"hasValue\" && userData && (\n        <div className={styles.Container}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className={styles.Mainbody}>\n              <div className={styles.MainTitle}>\n                <div className={styles.MainTitle1}>\n                  <div className={styles.SearchClientNum}>\n                    <div className={styles.SearchFont1}>회원번호 : </div>\n                    <div className={styles.SearchFont2}>{IdState}</div>\n                  </div>\n                  <div className={styles.SearchClientNum}>\n                    <div className={styles.SearchFont1}>성함 : </div>\n                    <div className={styles.SearchFont2}>\n                      {userData.userinfo.name}\n                    </div>\n                  </div>\n                </div>\n                <div className={styles.MainTitle2}>\n                  <Link href=\"/inputmoney\">\n                    <SearchButton>\n                      <div\n                        className={styles.BottonIcon}\n                        style={{ color: \"white\" }}\n                      >\n                        <CgSearch style={{ width: \"100%\", height: \"100%\" }} />\n                      </div>\n                      <div className={styles.BottonFont}>회원선택</div>\n                    </SearchButton>\n                  </Link>\n                </div>\n              </div>\n              <div className={styles.InputBody}>\n                <div className={styles.InputBodyTitle}>\n                  <div className={styles.IBTIcon}>\n                    <div className={styles.Icon} style={{ color: \"#7152F3\" }}>\n                      <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n                    </div>\n                  </div>\n                  <div className={styles.IBTText}>{ChasuState}차 납입</div>\n                </div>\n                <div className={styles.Line}></div>\n                <div className={styles.IBBottonLayer}>\n                  <PaymentScheduleButton\n                    isclear={userChasuData.isclear}\n                    setValue={setValue}\n                  />\n                </div>\n                <div className={styles.SIBLayer}>\n                  <div className={styles.SearchFont}>완납일자</div>\n                  <Inputbox\n                    type=\"date\"\n                    register={register(\"findate\")}\n                    defaultValue={\n                      isValidDateString(userChasuData.findate)\n                        ? userChasuData.findate\n                        : null\n                    }\n                  />\n                </div>\n                <div className={styles.SIBLayer}>\n                  <div className={styles.SearchFont}>예정일자</div>\n                  <Inputbox\n                    type=\"date\"\n                    register={register(\"duedate\")}\n                    defaultValue={\n                      isValidDateString(userChasuData.duedate)\n                        ? userChasuData.duedate\n                        : null\n                    }\n                  />\n                </div>\n                <div className={styles.IBLayer}>\n                  <Inputbox_M\n                    type=\"text\"\n                    placeholder=\"부담금\"\n                    name=\"pay\"\n                    register={register(\"pay\")}\n                    onChange={onChange}\n                    defaultValue={pay}\n                  />\n                  <Inputbox_M\n                    type=\"text\"\n                    placeholder=\"업무대행비\"\n                    name=\"work\"\n                    register={register(\"work\")}\n                    onChange={onChange}\n                    defaultValue={work}\n                  />\n                </div>\n                <div className={styles.IBLayer}>\n                  <Inputbox_M\n                    type=\"text\"\n                    placeholder=\"할인액\"\n                    name=\"discount\"\n                    register={register(\"discount\")}\n                    onChange={onChange}\n                    defaultValue={discount}\n                  />\n                  <Inputbox_M\n                    type=\"text\"\n                    placeholder=\"면제액\"\n                    name=\"del\"\n                    register={register(\"del\")}\n                    onChange={onChange}\n                    defaultValue={del}\n                  />\n                </div>\n                <div className={styles.IBLayer}>\n                  <Inputbox_M\n                    type=\"text\"\n                    placeholder=\"이동\"\n                    register={register(\"move\")}\n                    defaultValue={userChasuData.move}\n                  />\n                  <Inputbox_M\n                    type=\"text\"\n                    placeholder=\"납입액\"\n                    name=\"payprice\"\n                    register={register(\"payprice\")}\n                    onChange={onChange}\n                    defaultValue={payprice}\n                  />\n                  <input\n                    type=\"hidden\"\n                    {...register(\"chasu\")}\n                    value={ChasuState}\n                  />\n                </div>\n                <div className={styles.IBLayer}>\n                  <div className={styles.IBInputBox_S}>\n                    <div className={styles.SearchFont1}>총액 :</div>\n                    <div className={styles.SearchFont2}>\n                      {tot.toLocaleString()}₩\n                    </div>\n                  </div>\n                </div>\n                <div className={styles.IBBottonLayer}>\n                  <Link href={\"/inputmoney/userinfo/\" + IdState}>\n                    <Button_N type=\"submit\">\n                      <div className={styles.BottonFont2}>취소</div>\n                    </Button_N>\n                  </Link>\n                  <Button_Y type=\"submit\">\n                    <div className={styles.BottonFont}>확인</div>\n                  </Button_Y>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default withAuth(Inputmoneypay);\n"
                        }
                    }
                }
            },
            "search": {
                "__files__": {
                    "page .js": "import {\n  banklist,\n  sintacklist,\n  typeidlist,\n  typelist,\n  grouplist,\n  turnlist,\n} from \"@/components/droplistdata\";\nimport {\n  Inputbox,\n  PostInputbox,\n  LongInputbox,\n  DropInputbox,\n  FileInputbox,\n} from \"@/components/Inputbox\";\nimport styles from \"@/styles/Search.module.scss\";\n\nimport { searchnameState } from \"@/utils/atom\";\nimport { namesearchSelector } from \"@/utils/selector\";\n\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useRecoilValue,\n  useRecoilValueLoadable,\n  useSetRecoilState,\n} from \"recoil\";\nimport withAuth from \"@/utils/hoc/withAuth\"; // withAuth 임포트\n\nconst SearchList = ({ name }) => {\n  const setNameState = useSetRecoilState(searchnameState);\n  let searchdata = useRecoilValueLoadable(namesearchSelector);\n\n  useEffect(() => {\n    setNameState(name);\n  }, [name, setNameState]);\n\n  if (searchdata.state === \"loading\") {\n    return null;\n  }\n\n  if (searchdata.state === \"hasError\") {\n    return <div> </div>;\n  }\n\n  return (\n    <div>\n      {searchdata.state === \"hasValue\" &&\n        searchdata.contents.map((k) => (\n          <Link\n            className={styles.maincontainer}\n            href={\"/search/userinfo/\" + k.id}\n            key={k.id}\n          >\n            <span>{k.id}</span>\n            <span>{k.userinfo.name}</span>\n            <span>{k.data.type}</span>\n            <span>{k.data.group}</span>\n            <span>{k.data.turn}</span>\n            <span>{k.data.type + \"-\" + k.data.group + \"-\" + k.data.turn}</span>\n          </Link>\n        ))}\n    </div>\n  );\n};\n\nfunction Search() {\n  const [name, setName] = useState(\"\");\n\n  const onChange = (e) => {\n    const text = e.target.value;\n    setName(text.replace(/ /g, \"\"));\n  };\n\n  return (\n    <>\n      <h1></h1>\n      <div className={styles.container}>\n        <Inputbox type=\"text\" placeholder=\"회원 성함\" onChange={onChange} />\n        <DropInputbox list={typelist} />\n        <DropInputbox list={grouplist} />\n        <DropInputbox list={turnlist} />\n      </div>\n      <div className={styles.tablecontainer}>\n        <span>관리번호</span>\n        <span>성명</span>\n        <span>타입</span>\n        <span>군</span>\n        <span>순번</span>\n        <span>임시동호</span>\n      </div>\n      {typeof window !== \"undefined\" && <SearchList name={name} />}\n    </>\n  );\n}\n\nexport default withAuth(Search); // withAuth로 감싸기\n"
                }
            },
            "userinfo": {
                "[id]": {
                    "__files__": {
                        "page.js": "\"use client\";\n\nimport styles from \"@/styles/Inputmoney.module.scss\";\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\n\nimport { useridState } from \"@/utils/atom\";\nimport { useRecoilValueLoadable, useRecoilState } from \"recoil\";\nimport { userinfoSelector, usermoneySelector } from \"@/utils/selector\";\n\nimport { BsBagDash, BsDatabase } from \"react-icons/bs\";\nimport { CgSearch } from \"react-icons/cg\";\n\nimport ChasuPreBody from \"@/components/ChasuPreBody\";\nimport ChasuFinBody from \"@/components/ChasuFinBody\";\nimport { SearchButton, ModifyButton } from \"@/components/Button\";\n\nimport withAuth from \"@/utils/hoc/withAuth\"; // withAuth 임포트\n\nfunction Inputmoney() {\n  const pathname = usePathname();\n  const splitpath = pathname.split(\"/\");\n  const [IdState, setIdState] = useRecoilState(useridState);\n\n  const [userData, setUserData] = useState(null);\n  const [loanData, setLoandata] = useState(null);\n\n  useState(() => {\n    setIdState(splitpath[3]);\n  });\n\n  const userselectordata = useRecoilValueLoadable(userinfoSelector);\n  const usermoneyselectordata = useRecoilValueLoadable(usermoneySelector);\n\n  useEffect(() => {\n    if (\n      userselectordata.state === \"hasValue\" &&\n      usermoneyselectordata.state === \"hasValue\"\n    ) {\n      const userdata = userselectordata.contents;\n      const userloandata = usermoneyselectordata.contents;\n      if (userdata === undefined) {\n        console.log(\"잘못된 접근입니다\");\n      } else {\n        setUserData(userdata);\n        setLoandata(userloandata);\n      }\n    }\n  }, [userselectordata, usermoneyselectordata]);\n\n  const formatDate = (date) => {\n    return date ? date : \"없음\";\n  };\n\n  return (\n    <>\n      {userselectordata.state === \"hasValue\" && userData && (\n        <div className={styles.Container}>\n          <div className={styles.Mainbody}>\n            <div className={styles.SearchBody}>\n              {/* 사용자 정보 표시 부분 */}\n              <div className={styles.SearchNum}>\n                <div className={styles.SearchFont1}>관리번호 :</div>\n                <div className={styles.SearchFont2}>{userData.id}</div>\n              </div>\n              <div className={styles.SearchName}>\n                <div className={styles.SearchFont1}>성함 :</div>\n                <div className={styles.SearchFont2}>\n                  {userData.userinfo.name}\n                </div>\n              </div>\n              <div className={styles.SearchCha}>\n                <div className={styles.SearchFont1}>가입차순 :</div>\n                <div className={styles.SearchFont2}>\n                  {userData.data.submitturn}\n                </div>\n              </div>\n              <div className={styles.SearchType}>\n                <div className={styles.SearchFont1}>가입타입 :</div>\n                <div className={styles.SearchFont2}>{userData.data.type}</div>\n              </div>\n              {/* 납부 정보 표시 부분 */}\n              <Link href=\"/inputmoney\">\n                <SearchButton>\n                  <div className={styles.BottonIcon} style={{ color: \"white\" }}>\n                    <CgSearch style={{ width: \"100%\", height: \"100%\" }} />\n                  </div>\n                  <div className={styles.BottonFont}>회원선택</div>\n                </SearchButton>\n              </Link>\n            </div>\n            <div className={styles.MainContent}>\n              <div\n                className={styles.Content}\n                style={{ overflowY: \"auto\", maxHeight: \"calc(100vh - 200px)\" }}\n              >\n                <div className={styles.ContentTitle}>\n                  <div className={styles.ContentTitleIcon_Y}></div>\n                  <div className={styles.ContentTitleFont}>진행 예정 납부</div>\n                </div>\n                <ChasuPreBody userId={userData.id} />\n              </div>\n\n              <div\n                className={styles.Content}\n                style={{ overflowY: \"auto\", maxHeight: \"calc(100vh - 200px)\" }}\n              >\n                <div className={styles.ContentTitle}>\n                  <div className={styles.ContentTitleIcon_G}></div>\n                  <div className={styles.ContentTitleFont}>진행된 납부</div>\n                </div>\n                <ChasuFinBody userId={userData.id} />\n              </div>\n              <div className={styles.Content}>\n                <div className={styles.ContentTitle}>\n                  <div className={styles.ContentTitleIcon_R}></div>\n                  <div className={styles.ContentTitleFont}>\n                    대출 / 자납 / 해약\n                  </div>\n                </div>\n                <div className={styles.ContentBody_L}>\n                  <div className={styles.ContentBodyTitle_L}>\n                    <div className={styles.CBTIcon}>\n                      <div className={styles.Icon}>\n                        <BsBagDash style={{ width: \"100%\", height: \"100%\" }} />\n                      </div>\n                    </div>\n                    <div className={styles.CBTText}>\n                      <div className={styles.CBTCha}>\n                        <div className={styles.CBTChaFont}>대출 / 자납</div>\n                      </div>\n                      <div className={styles.CBTDate}>\n                        <div className={styles.CBTDateFont}>\n                          대출일 :{\" \"}\n                          {formatDate(loanData?.loandate).substr(0, 10)}\n                        </div>\n                        <div className={styles.CBTDateFont}>\n                          자납일 :{\" \"}\n                          {formatDate(loanData?.selfdate).substr(0, 10)}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className={styles.CBBottonBody}>\n                    <Link href={`/inputmoney/loan/${userData.id}`}>\n                      <ModifyButton>\n                        <div className={styles.CBBottonFont}>대출수정</div>\n                      </ModifyButton>\n                    </Link>\n                  </div>\n                  <div className={styles.CBSum}>\n                    <div className={styles.CBMoneyImg}>\n                      <div className={styles.Icon2}>\n                        <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n                      </div>\n                    </div>\n                    <div className={styles.CBSumText}>대출액</div>\n                    <div className={styles.CBSumNum}>\n                      {(\n                        (loanData?.price1 || 0) + (loanData?.price2 || 0)\n                      ).toLocaleString()}{\" \"}\n                      ₩\n                    </div>\n                  </div>\n                  <div className={styles.CBSum}>\n                    <div className={styles.CBMoneyImg}>\n                      <div className={styles.Icon2}>\n                        <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n                      </div>\n                    </div>\n                    <div className={styles.CBSumText}>자납액</div>\n                    <div className={styles.CBSumNum}>\n                      {(loanData?.selfprice || 0).toLocaleString()} ₩\n                    </div>\n                  </div>\n                  <div className={styles.CBSum}>\n                    <div className={styles.CBMoneyImg}>\n                      <div className={styles.Icon2}>\n                        <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n                      </div>\n                    </div>\n                    <div className={styles.CBSumText}>총액</div>\n                    <div className={styles.CBSumNum}>\n                      {(\n                        (loanData?.selfprice || 0) +\n                        (loanData?.price1 || 0) +\n                        (loanData?.price2 || 0)\n                      ).toLocaleString()}{\" \"}\n                      ₩\n                    </div>\n                  </div>\n                </div>\n                {/* 한 덩어리 */}\n\n                <div className={styles.ContentBody}>\n                  <div className={styles.ContentBodyTitle}>\n                    <div className={styles.CBTIcon}>\n                      <div className={styles.Icon}>\n                        <BsBagDash style={{ width: \"100%\", height: \"100%\" }} />\n                      </div>\n                    </div>\n                    <div className={styles.CBTText}>\n                      <div className={styles.CBTCha}>\n                        <div className={styles.CBTChaFont}>해약</div>\n                      </div>\n                      <div className={styles.CBTDate}>\n                        <div className={styles.CBTDateFont}>해약시 주의</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className={styles.CBBottonBody}>\n                    <Link href=\"/inputmoney/cancle\">\n                      <ModifyButton>\n                        <div className={styles.CBBottonFont}>해약하기</div>\n                      </ModifyButton>\n                    </Link>\n                  </div>\n                </div>\n                {/* 한 덩어리 */}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default withAuth(Inputmoney); // withAuth로 감싸기\n"
                    }
                }
            }
        },
        "login": {
            "__files__": {
                "page.js": "\"use client\";\nimport { LoginInputbox } from \"@/components/Inputbox\";\nimport { Button, CheckButton } from \"@/components/Button\";\nimport styles from \"@/styles/Login.module.scss\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { fetchLogin } from \"@/utils/api\";\nimport Swal from \"sweetalert2\";\nimport AuthContext from \"@/utils/context/AuthContext\";\n\nexport default function Login() {\n  const { login } = useContext(AuthContext);\n  const [userform, setUserform] = useState({\n    id: \"\",\n    pw: \"\",\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const router = useRouter();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const handleChange = (e) => {\n    setUserform({\n      ...userform,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetchLogin(userform.id, userform.pw);\n      const token = response.data.token;\n      console.log(\"asd\");\n      login(userform.id, token);\n      Swal.fire({\n        title: \"로그인 성공\",\n        text: \"로그인에 성공했습니다!\",\n        icon: \"success\",\n        confirmButtonText: \"확인\",\n      }).then(() => {\n        router.push(\"/dashboard\");\n      });\n      console.log(\"Login successful:\", response.data);\n    } catch (error) {\n      console.error(\"Login error:\", error.response.data.message);\n      Swal.fire({\n        title: \"로그인 실패\",\n        text: error.response.data.message || \"로그인에 실패했습니다.\",\n        icon: \"error\",\n        confirmButtonText: \"확인\",\n      });\n    }\n  };\n\n  if (isLoggedIn) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.childcontainer}>\n          <h1>이미 로그인 되어있습니다</h1>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.childcontainer}>\n        <h1>환영합니다👋</h1>\n        <h3>민간임대주택 분양인관리시스템에 오신것을 환영합니다!</h3>\n        <form onSubmit={handleSubmit}>\n          <LoginInputbox\n            name=\"id\"\n            placeholder=\"아이디\"\n            onChange={handleChange}\n          />\n          <LoginInputbox\n            name=\"pw\"\n            placeholder=\"비밀번호\"\n            type=\"password\"\n            onChange={handleChange}\n          />\n          <div className={styles.checkcontainer}>\n            <CheckButton />\n            <span className={styles.remembertext}>아이디 기억하기</span>\n            <span className={styles.forgottext}>계정 분실시 관리자 문의</span>\n          </div>\n          <Button type=\"submit\">로그인</Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"
            }
        },
        "modify": {
            "__files__": {
                "page.js": "\"use client\";\n\nimport { Inputbox, DropInputbox } from \"@/components/Inputbox\";\nimport styles from \"@/styles/Search.module.scss\";\nimport { searchnameState, searchnumberState } from \"@/utils/atom\";\nimport { namesearchSelector } from \"@/utils/selector\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilValueLoadable, useSetRecoilState } from \"recoil\";\nimport { typelist, grouplist, turnlist } from \"@/components/droplistdata\";\nimport { deleteUser } from \"@/utils/api\";\nimport { ModifyButton } from \"@/components/Button\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst categoryMapping = {\n  1: \"정계약\",\n  c: \"청약\",\n  j: \"정계약\",\n  r: \"수정\",\n  x: \"해지\",\n  x1: \"해지\",\n  p: \"업대\",\n  p1: \"업대\",\n  t: \"창준위\",\n  t1: \"창준위\",\n  g: \"지주\",\n};\n\nconst SearchList = ({ name, number }) => {\n  const setNameState = useSetRecoilState(searchnameState);\n  const setNumberState = useSetRecoilState(searchnumberState);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: \"ascending\",\n  });\n\n  let searchname = name.length > 1 ? name : \"\";\n  let searchnumber = number.length > 1 ? number : \"\";\n\n  useEffect(() => {\n    setNameState(searchname);\n    setNumberState(searchnumber);\n  }, [searchname, searchnumber, setNameState, setNumberState]);\n\n  let searchdata = useRecoilValueLoadable(namesearchSelector);\n\n  if (searchdata.state === \"loading\") {\n    return null;\n  }\n\n  if (searchdata.state === \"hasError\") {\n    return <div>Error loading data</div>;\n  }\n\n  if (searchdata.state === \"hasValue\") {\n    console.log(\"Received search data:\", searchdata.contents);\n  }\n\n  const handleSort = (key) => {\n    let direction = \"ascending\";\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedData = () => {\n    const allowedSortValues = [\"1\", \"c\", \"j\", \"p\", \"p1\", \"t\", \"t1\", \"g\"];\n\n    const categoryOrder = {\n      정계약: 1,\n      청약: 2,\n      수정: 3,\n      해지: 4,\n      업대: 5,\n      창준위: 6,\n      지주: 7,\n      \"N/A\": 99,\n    };\n\n    let sortableData = [...searchdata.contents].filter((k) =>\n      allowedSortValues.includes(k.userinfo?.sort)\n    );\n\n    if (sortConfig.key !== null) {\n      sortableData.sort((a, b) => {\n        let aValue, bValue;\n\n        if (sortConfig.key === \"sort\") {\n          aValue =\n            categoryOrder[categoryMapping[a.userinfo?.sort]] ||\n            categoryOrder[\"N/A\"];\n          bValue =\n            categoryOrder[categoryMapping[b.userinfo?.sort]] ||\n            categoryOrder[\"N/A\"];\n        } else if (sortConfig.key === \"id\") {\n          aValue = parseInt(a[sortConfig.key], 10);\n          bValue = parseInt(b[sortConfig.key], 10);\n        } else {\n          aValue = a.data[sortConfig.key] || a.userinfo[sortConfig.key];\n          bValue = b.data[sortConfig.key] || b.userinfo[sortConfig.key];\n        }\n\n        if (aValue < bValue) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n\n    console.log(\"Sorted data:\", sortableData);\n\n    return sortableData;\n  };\n\n  const handleDelete = async (id) => {\n    console.log(\"Deleting user with id:\", id);\n    try {\n      await deleteUser(id);\n      alert(\"사용자가 성공적으로 삭제되었습니다.\");\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      alert(\"사용자 삭제 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.tablecontainer}>\n        {/* 기존 열 */}\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"id\")}>관리번호</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"name\")}>성명</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"type\")}>타입</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"group\")}>군</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"turn\")}>순번</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitturn\")}>가입 차순</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitdate\")}>가입 날짜</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"sort\")}>분류</span>\n        </div>\n      </div>\n      {searchdata.state === \"hasValue\" &&\n        sortedData()\n          .filter((k) => k.userinfo && k.data)\n          .map((k) => {\n            return (\n              <div className={styles.maincontainer} key={k.id}>\n                <Link href={\"/modify/\" + k.id} className={styles.link}>\n                  <div className={styles.rowContainer}>\n                    <div className={styles.unitContainer}>{k.id}</div>\n                    <div className={styles.unitContainer}>\n                      {k.userinfo?.name || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.type || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.group || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.turn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitturn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitdate\n                        ? k.data.submitdate.slice(0, 10)\n                        : \"N/A\"}\n                    </div>\n\n                    <div className={styles.unitContainer}>\n                      {categoryMapping[k.userinfo?.sort] || \"N/A\"}\n                    </div>\n                  </div>\n                </Link>\n                <div className={styles.unitContainer}>\n                  <ModifyButton onClick={() => handleDelete(k.id)}>\n                    <div className={styles.CBBottonFont}>삭제</div>\n                  </ModifyButton>\n                </div>\n              </div>\n            );\n          })}\n    </div>\n  );\n};\n\nfunction Modify() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onNameChange = (e) => {\n    const text = e.target.value;\n    setName(text.replace(/ /g, \"\"));\n  };\n\n  const onNumberChange = (e) => {\n    const text = e.target.value;\n    setNumber(text.replace(/ /g, \"\"));\n  };\n\n  return (\n    <>\n      <h1></h1>\n      <div className={styles.flexContainer}>\n      <Inputbox\n          type=\"text\"\n          placeholder=\"관리번호\"\n          onChange={onNumberChange}\n        />\n        <Inputbox type=\"text\" placeholder=\"회원 성함\" onChange={onNameChange} />\n\n        <DropInputbox list={typelist} />\n        <DropInputbox list={grouplist} />\n        <DropInputbox list={turnlist} />\n      </div>\n      {typeof window !== \"undefined\" && (\n        <SearchList name={name} number={number} />\n      )}\n    </>\n  );\n}\n\nexport default withAuth(Modify);\n"
            },
            "cancel": {
                "__files__": {
                    "page.js": "\"use client\";\n\nimport { Inputbox, DropInputbox } from \"@/components/Inputbox\";\nimport styles from \"@/styles/Search.module.scss\";\nimport { searchnameState, searchnumberState } from \"@/utils/atom\";\nimport { namesearchSelector } from \"@/utils/selector\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilValueLoadable, useSetRecoilState } from \"recoil\";\nimport { typelist, grouplist, turnlist } from \"@/components/droplistdata\";\nimport { deleteUser } from \"@/utils/api\";\nimport { ModifyButton } from \"@/components/Button\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst categoryMapping = {\n  1: \"정계약\",\n  c: \"청약\",\n  j: \"정계약\",\n  r: \"수정\",\n  x: \"해지\",\n  x1: \"해지\",\n  p: \"업대\",\n  p1: \"업대\",\n  t: \"창준위\",\n  t1: \"창준위\",\n  g: \"지주\",\n};\n\nconst SearchList = ({ name, number }) => {\n  const setNameState = useSetRecoilState(searchnameState);\n  const setNumberState = useSetRecoilState(searchnumberState);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: \"ascending\",\n  });\n\n  let searchname = name.length > 1 ? name : \"\";\n  let searchnumber = number.length > 1 ? number : \"\";\n\n  useEffect(() => {\n    setNameState(searchname);\n    setNumberState(searchnumber);\n  }, [searchname, searchnumber, setNameState, setNumberState]);\n\n  let searchdata = useRecoilValueLoadable(namesearchSelector);\n\n  if (searchdata.state === \"loading\") {\n    return null;\n  }\n\n  if (searchdata.state === \"hasError\") {\n    return <div>Error loading data</div>;\n  }\n\n  if (searchdata.state === \"hasValue\") {\n    console.log(\"Received search data:\", searchdata.contents);\n  }\n\n  const handleSort = (key) => {\n    let direction = \"ascending\";\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedData = () => {\n    const allowedSortValues = [\"x\", \"x1\"];\n\n    const categoryOrder = {\n      정계약: 1,\n      청약: 2,\n      수정: 3,\n      해지: 4,\n      업대: 5,\n      창준위: 6,\n      지주: 7,\n      \"N/A\": 99,\n    };\n\n    let sortableData = [...searchdata.contents].filter((k) =>\n      allowedSortValues.includes(k.userinfo?.sort)\n    );\n\n    if (sortConfig.key !== null) {\n      sortableData.sort((a, b) => {\n        let aValue, bValue;\n\n        if (sortConfig.key === \"sort\") {\n          aValue =\n            categoryOrder[categoryMapping[a.userinfo?.sort]] ||\n            categoryOrder[\"N/A\"];\n          bValue =\n            categoryOrder[categoryMapping[b.userinfo?.sort]] ||\n            categoryOrder[\"N/A\"];\n        } else if (sortConfig.key === \"id\") {\n          aValue = parseInt(a[sortConfig.key], 10);\n          bValue = parseInt(b[sortConfig.key], 10);\n        } else {\n          aValue = a.data[sortConfig.key] || a.userinfo[sortConfig.key];\n          bValue = b.data[sortConfig.key] || b.userinfo[sortConfig.key];\n        }\n\n        if (aValue < bValue) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n\n    console.log(\"Sorted data:\", sortableData);\n\n    return sortableData;\n  };\n\n  const handleDelete = async (id) => {\n    console.log(\"Deleting user with id:\", id);\n    try {\n      await deleteUser(id);\n      alert(\"사용자가 성공적으로 삭제되었습니다.\");\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      alert(\"사용자 삭제 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.tablecontainer}>\n        {/* 기존 열 */}\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"id\")}>관리번호</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"name\")}>성명</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"type\")}>타입</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"group\")}>군</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"turn\")}>순번</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitturn\")}>가입 차순</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitdate\")}>가입 날짜</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"sort\")}>분류</span>\n        </div>\n      </div>\n      {searchdata.state === \"hasValue\" &&\n        sortedData()\n          .filter((k) => k.userinfo && k.data)\n          .map((k) => {\n            return (\n              <div className={styles.maincontainer} key={k.id}>\n                <Link href={\"/modify/\" + k.id} className={styles.link}>\n                  <div className={styles.rowContainer}>\n                    <div className={styles.unitContainer}>{k.id}</div>\n                    <div className={styles.unitContainer}>\n                      {k.userinfo?.name || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.type || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.group || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.turn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitturn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitdate\n                        ? k.data.submitdate.slice(0, 10)\n                        : \"N/A\"}\n                    </div>\n\n                    <div className={styles.unitContainer}>\n                      {categoryMapping[k.userinfo?.sort] || \"N/A\"}\n                    </div>\n                  </div>\n                </Link>\n                <div className={styles.unitContainer}>\n                  <ModifyButton onClick={() => handleDelete(k.id)}>\n                    <div className={styles.CBBottonFont}>삭제</div>\n                  </ModifyButton>\n                </div>\n              </div>\n            );\n          })}\n    </div>\n  );\n};\n\nfunction Modify() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onNameChange = (e) => {\n    const text = e.target.value;\n    setName(text.replace(/ /g, \"\"));\n  };\n\n  const onNumberChange = (e) => {\n    const text = e.target.value;\n    setNumber(text.replace(/ /g, \"\"));\n  };\n\n  return (\n    <>\n      <h1></h1>\n      <div className={styles.flexContainer}>\n      <Inputbox\n          type=\"text\"\n          placeholder=\"관리번호\"\n          onChange={onNumberChange}\n        />\n        <Inputbox type=\"text\" placeholder=\"회원 성함\" onChange={onNameChange} />\n\n        <DropInputbox list={typelist} />\n        <DropInputbox list={grouplist} />\n        <DropInputbox list={turnlist} />\n      </div>\n      {typeof window !== \"undefined\" && (\n        <SearchList name={name} number={number} />\n      )}\n    </>\n  );\n}\n\nexport default withAuth(Modify);\n"
                }
            },
            "modify": {
                "__files__": {
                    "page.js": "\"use client\";\n\nimport { Inputbox, DropInputbox } from \"@/components/Inputbox\";\nimport styles from \"@/styles/Search.module.scss\";\nimport { searchnameState, searchnumberState } from \"@/utils/atom\";\nimport { namesearchSelector } from \"@/utils/selector\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilValueLoadable, useSetRecoilState } from \"recoil\";\nimport { typelist, grouplist, turnlist } from \"@/components/droplistdata\";\nimport { deleteUser } from \"@/utils/api\";\nimport { ModifyButton } from \"@/components/Button\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst categoryMapping = {\n  1: \"정계약\",\n  c: \"청약\",\n  j: \"정계약\",\n  r: \"수정\",\n  x: \"해지\",\n  x1: \"해지\",\n  p: \"업대\",\n  p1: \"업대\",\n  t: \"창준위\",\n  t1: \"창준위\",\n  g: \"지주\",\n};\n\nconst SearchList = ({ name, number }) => {\n  const setNameState = useSetRecoilState(searchnameState);\n  const setNumberState = useSetRecoilState(searchnumberState);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: \"ascending\",\n  });\n\n  let searchname = name.length > 1 ? name : \"\";\n  let searchnumber = number.length > 1 ? number : \"\";\n\n  useEffect(() => {\n    setNameState(searchname);\n    setNumberState(searchnumber);\n  }, [searchname, searchnumber, setNameState, setNumberState]);\n\n  let searchdata = useRecoilValueLoadable(namesearchSelector);\n\n  if (searchdata.state === \"loading\") {\n    return null;\n  }\n\n  if (searchdata.state === \"hasError\") {\n    return <div>Error loading data</div>;\n  }\n\n  if (searchdata.state === \"hasValue\") {\n    console.log(\"Received search data:\", searchdata.contents);\n  }\n\n  const handleSort = (key) => {\n    let direction = \"ascending\";\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedData = () => {\n    const allowedSortValues = [\"r\"];\n\n    const categoryOrder = {\n      정계약: 1,\n      청약: 2,\n      수정: 3,\n      해지: 4,\n      업대: 5,\n      창준위: 6,\n      지주: 7,\n      \"N/A\": 99,\n    };\n\n    let sortableData = [...searchdata.contents].filter((k) =>\n      allowedSortValues.includes(k.userinfo?.sort)\n    );\n\n    if (sortConfig.key !== null) {\n      sortableData.sort((a, b) => {\n        let aValue, bValue;\n\n        if (sortConfig.key === \"sort\") {\n          aValue =\n            categoryOrder[categoryMapping[a.userinfo?.sort]] ||\n            categoryOrder[\"N/A\"];\n          bValue =\n            categoryOrder[categoryMapping[b.userinfo?.sort]] ||\n            categoryOrder[\"N/A\"];\n        } else if (sortConfig.key === \"id\") {\n          aValue = parseInt(a[sortConfig.key], 10);\n          bValue = parseInt(b[sortConfig.key], 10);\n        } else {\n          aValue = a.data[sortConfig.key] || a.userinfo[sortConfig.key];\n          bValue = b.data[sortConfig.key] || b.userinfo[sortConfig.key];\n        }\n\n        if (aValue < bValue) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n\n    console.log(\"Sorted data:\", sortableData);\n\n    return sortableData;\n  };\n\n  const handleDelete = async (id) => {\n    console.log(\"Deleting user with id:\", id);\n    try {\n      await deleteUser(id);\n      alert(\"사용자가 성공적으로 삭제되었습니다.\");\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      alert(\"사용자 삭제 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.tablecontainer}>\n        {/* 기존 열 */}\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"id\")}>관리번호</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"name\")}>성명</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"type\")}>타입</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"group\")}>군</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"turn\")}>순번</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitturn\")}>가입 차순</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitdate\")}>가입 날짜</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"sort\")}>분류</span>\n        </div>\n      </div>\n      {searchdata.state === \"hasValue\" &&\n        sortedData()\n          .filter((k) => k.userinfo && k.data)\n          .map((k) => {\n            return (\n              <div className={styles.maincontainer} key={k.id}>\n                <Link href={\"/modify/\" + k.id} className={styles.link}>\n                  <div className={styles.rowContainer}>\n                    <div className={styles.unitContainer}>{k.id}</div>\n                    <div className={styles.unitContainer}>\n                      {k.userinfo?.name || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.type || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.group || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.turn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitturn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitdate\n                        ? k.data.submitdate.slice(0, 10)\n                        : \"N/A\"}\n                    </div>\n\n                    <div className={styles.unitContainer}>\n                      {categoryMapping[k.userinfo?.sort] || \"N/A\"}\n                    </div>\n                  </div>\n                </Link>\n                <div className={styles.unitContainer}>\n                  <ModifyButton onClick={() => handleDelete(k.id)}>\n                    <div className={styles.CBBottonFont}>삭제</div>\n                  </ModifyButton>\n                </div>\n              </div>\n            );\n          })}\n    </div>\n  );\n};\n\nfunction Modify() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onNameChange = (e) => {\n    const text = e.target.value;\n    setName(text.replace(/ /g, \"\"));\n  };\n\n  const onNumberChange = (e) => {\n    const text = e.target.value;\n    setNumber(text.replace(/ /g, \"\"));\n  };\n\n  return (\n    <>\n      <h1></h1>\n      <div className={styles.flexContainer}>\n      <Inputbox\n          type=\"text\"\n          placeholder=\"관리번호\"\n          onChange={onNumberChange}\n        />\n        <Inputbox type=\"text\" placeholder=\"회원 성함\" onChange={onNameChange} />\n\n        <DropInputbox list={typelist} />\n        <DropInputbox list={grouplist} />\n        <DropInputbox list={turnlist} />\n      </div>\n      {typeof window !== \"undefined\" && (\n        <SearchList name={name} number={number} />\n      )}\n    </>\n  );\n}\n\nexport default withAuth(Modify);\n"
                }
            },
            "[id]": {
                "__files__": {
                    "page.js": "\"use client\";\nimport Mininav from \"@/components/Mininav\";\nimport styles from \"@/styles/Create.module.scss\";\nimport {\n  Checkbox,\n  Inputbox,\n  PostInputbox,\n  InputAreabox,\n  DropInputbox,\n  FileInputbox,\n  InputboxWithLabel,\n} from \"@/components/Inputbox\";\nimport { Button_Y } from \"@/components/Button\";\nimport { usePathname, useRouter } from \"next/navigation\";\nimport { useRecoilValueLoadable, useSetRecoilState } from \"recoil\";\nimport { userinfoSelector } from \"@/utils/selector\";\nimport { useState, useEffect } from \"react\";\nimport { useridState } from \"@/utils/atom\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  classificationlist,\n  banklist,\n  sintacklist,\n  typeidlist,\n  typelist,\n  grouplist,\n  turnlist,\n} from \"@/components/droplistdata\";\nimport { updateUserinfo, createFile } from \"@/utils/api\";\nimport withAuth from \"@/utils/hoc/withAuth\";\nimport Swal from \"sweetalert2\";\n\nfunction Modify() {\n  const pathname = usePathname();\n  const splitpath = pathname.split(\"/\");\n  const router = useRouter();\n\n  const { register, handleSubmit, setValue, watch } = useForm();\n  const onSubmit = async (data) => {\n    try {\n      data.fileinfo = isupload;\n      await createFile(files);\n      await updateUserinfo(splitpath[2], data);\n      Swal.fire({\n        icon: \"success\",\n        title: \"회원 정보가 성공적으로 업데이트되었습니다.\",\n        confirmButtonText: \"확인\",\n      }).then(() => {\n        window.location.reload();\n      });\n    } catch (error) {\n      console.error(\"회원 정보 업데이트 중 오류 발생:\", error);\n      Swal.fire({\n        icon: \"error\",\n        title: \"오류 발생\",\n        text: \"회원 정보 업데이트 중 오류가 발생했습니다.\",\n        confirmButtonText: \"확인\",\n      });\n    }\n  };\n\n  const setIdState = useSetRecoilState(useridState);\n  useEffect(() => {\n    setIdState(splitpath[2]);\n  }, [splitpath, setIdState]);\n  const userselectordata = useRecoilValueLoadable(userinfoSelector);\n\n  const handleChange = (e) => {\n    const changename = e.target.className;\n    const value = e.target.value;\n    const originalfile = e.target.files[0];\n    const extension = value.split(\".\")[1];\n\n    const newid = splitpath[2];\n\n    setIsupload((prev) => ({ ...prev, [changename]: true }));\n    setFile((prev) => ({ ...prev, [changename]: [value] }));\n    const file = new File(\n      [originalfile],\n      `${newid}_${changename}.${extension}`\n    );\n\n    setFiles((prev) => [...prev, file]);\n  };\n\n  const [isupload, setIsupload] = useState({\n    upload: false,\n    A: false,\n    B: false,\n    C: false,\n    D: false,\n    E: false,\n    F: false,\n    G: false,\n    H: false,\n    I: false,\n    exception: false,\n    investment: false,\n    jscontract: false,\n  });\n  const [file, setFile] = useState({\n    upload: \"\",\n    A: \"\",\n    B: \"\",\n    C: \"\",\n    D: \"\",\n    E: \"\",\n    F: \"\",\n    G: \"\",\n    H: \"\",\n    I: \"\",\n    exception: \"\",\n    investment: \"\",\n    jscontract: \"\",\n  });\n  const [files, setFiles] = useState([]);\n\n  const handleCheckboxChange = (e) => {\n    const { name, checked } = e.target;\n\n    setIsupload((prev) => {\n      const updatedState = {\n        ...prev,\n        [name]: checked,\n      };\n      return updatedState;\n    });\n\n    console.log(isupload);\n  };\n\n  useEffect(() => {\n    if (userselectordata.state === \"hasValue\" && userselectordata.contents) {\n      const userdata = userselectordata.contents;\n      const initialFileState = {};\n      const initialUploadState = {};\n\n      for (const key in isupload) {\n        if (userdata.fileinfo && userdata.fileinfo.hasOwnProperty(key)) {\n          initialFileState[key] = userdata.fileinfo[key] ? \"파일 존재\" : \"\";\n          initialUploadState[key] = !!userdata.fileinfo[key];\n        } else {\n          initialFileState[key] = \"\";\n          initialUploadState[key] = false;\n        }\n      }\n\n      setFile(initialFileState);\n      setIsupload(initialUploadState);\n    }\n  }, [userselectordata.state, userselectordata.contents]);\n\n  // Watch the value of the 'sort' field\n  const watchSort = watch(\"userinfo.sort\", \"\");\n\n  useEffect(() => {\n    if (watchSort === \"x\") {\n      Swal.fire({\n        icon: \"info\",\n        title: \"알림\",\n        text: \"해지 고객 항목이 활성화 됩니다.\",\n        confirmButtonText: \"확인\",\n      });\n    }\n  }, [watchSort]);\n\n  switch (userselectordata.state) {\n    case \"hasValue\":\n      const userdata = userselectordata.contents;\n      if (!userdata)\n        return (\n          <>\n            <h1>잘못된 접근입니다</h1>\n          </>\n        );\n      else\n        return (\n          <>\n            <h1></h1>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <h3>회원 정보</h3>\n              <div className={styles.content_container}>\n                <div className={styles.Font}>관리번호 : {userdata.id}</div>\n                <h1></h1>\n                <div>\n                  <div className={styles.InputFont}>이름</div>\n                  <Inputbox\n                    type=\"text\"\n                    defaultValue={userdata.userinfo.name || \"\"}\n                    register={register(\"userinfo.name\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>휴대폰 번호</div>\n                  <Inputbox\n                    type=\"phone\"\n                    defaultValue={userdata.userinfo.phone || \"\"}\n                    register={register(\"userinfo.phone\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>주민번호 앞자리</div>\n                  <Inputbox\n                    type=\"number\"\n                    defaultValue={userdata.userinfo.firstid || \"\"}\n                    register={register(\"userinfo.firstid\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>주민번호 뒷자리</div>\n                  <Inputbox\n                    type=\"number\"\n                    defaultValue={userdata.userinfo.secondid || \"\"}\n                    register={register(\"userinfo.secondid\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>이메일</div>\n                  <Inputbox\n                    type=\"email\"\n                    defaultValue={userdata.userinfo.email || \"\"}\n                    register={register(\"userinfo.email\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>분류</div>\n                  <DropInputbox\n                    list={classificationlist}\n                    register={register(\"userinfo.sort\")}\n                    defaultValue={userdata.userinfo.sort || \"\"}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>가입경로</div>\n                  <Inputbox\n                    type=\"text\"\n                    defaultValue={userdata.userinfo.come || \"\"}\n                    register={register(\"userinfo.come\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>은행명</div>\n                  <DropInputbox\n                    list={banklist}\n                    defaultValue={userdata.userinfo.bank || \"\"}\n                    register={register(\"userinfo.bank\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>계좌번호</div>\n                  <Inputbox\n                    type=\"text\"\n                    defaultValue={userdata.userinfo.bankid || \"\"}\n                    register={register(\"userinfo.bankid\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>예금주</div>\n                  <Inputbox\n                    type=\"text\"\n                    defaultValue={userdata.userinfo.bankwho || \"\"}\n                    register={register(\"userinfo.bankwho\")}\n                  />\n                </div>\n\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>법정주소</div>\n                  <textarea\n                    className={styles.InputTextarea}\n                    defaultValue={userdata.userinfo.getpost || \"\"}\n                    {...register(\"userinfo.getpost\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>우편물 주소지</div>\n                  <textarea\n                    className={styles.InputTextarea}\n                    defaultValue={userdata.userinfo.post || \"\"}\n                    {...register(\"userinfo.getpost\")}\n                  />\n                </div>\n              </div>\n              <h3>관리 정보</h3>\n              <div className={styles.mainbody}>\n                <div className={styles.content_body}>\n                  <div className={styles.content_body2}>\n                    <div className={styles.InputboxField}>\n                      <div className={styles.InputFont}>가입차수</div>\n                      <DropInputbox\n                        list={typeidlist}\n                        defaultValue={userdata.data.submitturn || \"\"}\n                        register={register(\"data.submitturn\")}\n                      />\n                    </div>\n                    <div className={styles.InputboxField}>\n                      <div className={styles.InputFont}>타입</div>\n                      <DropInputbox\n                        list={typelist}\n                        defaultValue={userdata.data.type || \"\"}\n                        name=\"type\"\n                        register={register(\"data.type\")}\n                      />\n                    </div>\n                  </div>\n                  <div className={styles.content_body2}>\n                    <div className={styles.InputboxField}>\n                      <div className={styles.InputFont}>군</div>\n                      <DropInputbox\n                        list={grouplist}\n                        defaultValue={userdata.data.group || \"\"}\n                        name=\"group\"\n                        register={register(\"data.group\")}\n                      />\n                    </div>\n                    <div className={styles.InputboxField}>\n                      <div className={styles.InputFont}>순번</div>\n                      <DropInputbox\n                        list={turnlist}\n                        defaultValue={userdata.data.turn || \"\"}\n                        name=\"turn\"\n                        register={register(\"data.turn\")}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className={styles.content_body}>\n                  <div className={styles.content_body2}>\n                    <div className={styles.InputboxField}>\n                      <div className={styles.InputFont}>가입일자</div>\n                      <Inputbox\n                        type=\"date\"\n                        defaultValue={\n                          userdata.data.submitdate\n                            ? userdata.data.submitdate.substr(0, 10)\n                            : \"\"\n                        }\n                        date_placeholder=\"가입일자\"\n                        register={register(\"data.submitdate\")}\n                      />\n                    </div>\n                  </div>\n                  <div className={styles.content_body2}>\n                    <div className={styles.InputboxField}>\n                      <div className={styles.InputFont}>가입가</div>\n                      <Inputbox\n                        type=\"number\"\n                        defaultValue={userdata.data.submitprice || \"\"}\n                        placeholder=\"가입가\"\n                        register={register(\"data.submitprice\")}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className={styles.content_body}>\n                  <div className={styles.content_body2}>\n                    <div className={styles.InputboxField}>\n                      <div className={styles.InputFont}>납임일자</div>\n                      <Inputbox\n                        type=\"date\"\n                        defaultValue={\n                          userdata.data.earnestdate\n                            ? userdata.data.earnestdate.substr(0, 10)\n                            : \"\"\n                        }\n                        date_placeholder=\"예약금 납입일자\"\n                        register={register(\"data.earnestdate\")}\n                      />\n                    </div>\n                  </div>\n                  <div className={styles.content_body2}>\n                    <div className={styles.InputboxField}>\n                      <div className={styles.InputFont}>예약금</div>\n                      <Inputbox\n                        type=\"number\"\n                        defaultValue={userdata.data.earnest || \"\"}\n                        placeholder=\"예약금\"\n                        register={register(\"data.earnest\")}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className={styles.content_body}>\n                  <div className={styles.content_body3}>\n                    <Checkbox\n                      label=\"7차 면제\"\n                      name=\"exception\"\n                      onChange={handleCheckboxChange}\n                      defaultChecked={\n                        userdata.fileinfo.exception &&\n                        JSON.parse(userdata.fileinfo.exception)\n                      }\n                    />\n                  </div>\n                  <div className={styles.content_body3}>\n                    <Checkbox\n                      label=\"출자금\"\n                      name=\"investment\"\n                      onChange={handleCheckboxChange}\n                      defaultChecked={\n                        userdata.fileinfo.investment &&\n                        JSON.parse(userdata.fileinfo.investment)\n                      }\n                    />\n                  </div>\n                  <div className={styles.content_body3}>\n                    <Checkbox\n                      label=\"자산A동 계약서\"\n                      name=\"jscontract\"\n                      onChange={handleCheckboxChange}\n                      defaultChecked={\n                        userdata.fileinfo.jscontract &&\n                        JSON.parse(userdata.fileinfo.jscontract)\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {watchSort === \"x\" && (\n                <>\n                  <h3>가입해지</h3>\n                  <div className={styles.mainbody}>\n                    <div className={styles.content_body}>\n                      <div className={styles.content_body2}>\n                        <Inputbox\n                          type=\"date\"\n                          date_placeholder=\"해지일자\"\n                          register={register(\"cancel.canceldate\")}\n                        />\n                      </div>\n                    </div>\n                    <div className={styles.content_body}>\n                      <div className={styles.content_body2}>\n                        <Inputbox\n                          type=\"date\"\n                          date_placeholder=\"환급일자\"\n                          register={register(\"cancel.paybackdate\")}\n                        />\n                      </div>\n                      <div className={styles.content_body2}>\n                        <Inputbox\n                          type=\"number\"\n                          placeholder=\"환급금\"\n                          register={register(\"cancel.paybackprice\")}\n                        />\n                      </div>\n                    </div>\n                    <div className={styles.content_body}>\n                      <div className={styles.content_body2}>\n                        <DropInputbox\n                          list={banklist}\n                          register={register(\"cancel.bank\")}\n                        />\n                      </div>\n                    </div>\n                    <div className={styles.content_body}>\n                      <div className={styles.content_body2}>\n                        <Inputbox\n                          type=\"text\"\n                          placeholder=\"예금주\"\n                          register={register(\"cancel.bankwho\")}\n                        />\n                      </div>{\" \"}\n                      <div className={styles.content_body2}>\n                        <Inputbox\n                          type=\"text\"\n                          placeholder=\"계좌번호\"\n                          register={register(\"cancel.bankid\")}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <h3>지연이자</h3>\n                  <div className={styles.content_container}>\n                    <Inputbox\n                      type=\"text\"\n                      placeholder=\"일수\"\n                      register={register(\"delayedloan.loandate\")}\n                    />\n                    <Inputbox\n                      type=\"number\"\n                      placeholder=\"지연이자액\"\n                      register={register(\"delayedloan.loan\")}\n                    />\n                  </div>\n                </>\n              )}\n\n              <h3>부속서류</h3>\n              <div className={styles.content_container}>\n                <Checkbox\n                  label=\"인감증명서\"\n                  name=\"A\"\n                  onChange={handleCheckboxChange}\n                  defaultChecked={JSON.parse(userdata.fileinfo.A)}\n                />\n                <Checkbox\n                  label=\"본인서명확인서\"\n                  name=\"B\"\n                  onChange={handleCheckboxChange}\n                  defaultChecked={JSON.parse(userdata.fileinfo.B)}\n                />\n                <Checkbox\n                  label=\"확약서\"\n                  name=\"C\"\n                  onChange={handleCheckboxChange}\n                  defaultChecked={JSON.parse(userdata.fileinfo.C)}\n                />\n                <Checkbox\n                  label=\"신분증\"\n                  name=\"D\"\n                  onChange={handleCheckboxChange}\n                  defaultChecked={JSON.parse(userdata.fileinfo.D)}\n                />\n                <Checkbox\n                  label=\"무상옵션\"\n                  name=\"E\"\n                  onChange={handleCheckboxChange}\n                  defaultChecked={JSON.parse(userdata.fileinfo.E)}\n                />\n                <Checkbox\n                  label=\"창준위용\"\n                  name=\"F\"\n                  onChange={handleCheckboxChange}\n                  defaultChecked={JSON.parse(userdata.fileinfo.F)}\n                />\n                <Checkbox\n                  label=\"총회동의서\"\n                  name=\"G\"\n                  onChange={handleCheckboxChange}\n                  defaultChecked={JSON.parse(userdata.fileinfo.G)}\n                />\n                <Checkbox\n                  label=\"선호도조사\"\n                  name=\"H\"\n                  onChange={handleCheckboxChange}\n                  defaultChecked={JSON.parse(userdata.fileinfo.H)}\n                />\n                <Checkbox\n                  label=\"사은품\"\n                  name=\"I\"\n                  onChange={handleCheckboxChange}\n                  defaultChecked={JSON.parse(userdata.fileinfo.I)}\n                />\n\n                <span></span>\n                <span></span>\n                <span></span>\n                <span>파일업로드</span>\n                <span></span>\n                <FileInputbox\n                  className=\"upload\"\n                  name=\"fileupload\"\n                  value={file[\"upload\"]}\n                  isupload={isupload[\"upload\"]}\n                  handleChange={handleChange}\n                />\n              </div>\n              <h3>담당자 정보</h3>\n              <div className={styles.content_container}>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>총괄</div>\n                  <Inputbox\n                    type=\"text\"\n                    defaultValue={userdata.ext.manage || \"\"}\n                    placeholder=\"총괄\"\n                    register={register(\"ext.manage\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>본부</div>\n                  <Inputbox\n                    type=\"text\"\n                    defaultValue={userdata.ext.managemain || \"\"}\n                    placeholder=\"본부\"\n                    register={register(\"ext.managemain\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>팀</div>\n                  <Inputbox\n                    type=\"text\"\n                    defaultValue={userdata.ext.manageteam || \"\"}\n                    placeholder=\"팀\"\n                    register={register(\"ext.manageteam\")}\n                  />\n                </div>\n                <div className={styles.InputboxField}>\n                  <div className={styles.InputFont}>성명</div>\n                  <Inputbox\n                    type=\"text\"\n                    defaultValue={userdata.ext.managename || \"\"}\n                    placeholder=\"성명\"\n                    register={register(\"ext.managename\")}\n                  />\n                </div>\n              </div>\n              <h3>기타 정보</h3>\n              <div className={styles.content_container}>\n                <InputAreabox\n                  type=\"text\"\n                  placeholder=\"기타\"\n                  defaultValue={userdata.ext.ext || \"\"}\n                  register={register(\"ext.ext\")}\n                />\n              </div>\n              <h1></h1>\n              <Button_Y>저장하기</Button_Y>\n            </form>\n          </>\n        );\n\n    case \"loading\":\n      console.log(\"loading\");\n      return <div>Loading...</div>;\n\n    case \"hasError\":\n      throw userselectordata.contents;\n  }\n}\n\nexport default withAuth(Modify);\n"
                }
            }
        },
        "search": {
            "__files__": {
                "page.js": "\"use client\";\n\nimport { Inputbox, DropInputbox } from \"@/components/Inputbox\";\nimport styles from \"@/styles/Search.module.scss\";\nimport { searchnameState, searchnumberState } from \"@/utils/atom\";\nimport { namesearchSelector } from \"@/utils/selector\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilValueLoadable, useSetRecoilState } from \"recoil\";\nimport { typelist, grouplist, turnlist } from \"@/components/droplistdata\";\nimport { deleteUser } from \"@/utils/api\";\nimport { ModifyButton } from \"@/components/Button\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst categoryMapping = {\n  1: \"정계약\",\n  c: \"청약\",\n  j: \"정계약\",\n  r: \"수정\",\n  x: \"해지\",\n  x1: \"해지\",\n  p: \"업대\",\n  p1: \"업대\",\n  t: \"창준위\",\n  t1: \"창준위\",\n  g: \"지주\",\n};\n\nconst SearchList = ({ name, number }) => {\n  const setNameState = useSetRecoilState(searchnameState);\n  const setNumberState = useSetRecoilState(searchnumberState);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: \"ascending\",\n  });\n\n  let searchname = name.length > 1 ? name : \"\";\n  let searchnumber = number.length > 1 ? number : \"\";\n\n  useEffect(() => {\n    setNameState(searchname);\n    setNumberState(searchnumber);\n  }, [searchname, searchnumber, setNameState, setNumberState]);\n\n  let searchdata = useRecoilValueLoadable(namesearchSelector);\n\n  if (searchdata.state === \"loading\") {\n    return null;\n  }\n\n  if (searchdata.state === \"hasError\") {\n    return <div>Error loading data</div>;\n  }\n\n  const handleSort = (key) => {\n    let direction = \"ascending\";\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedData = () => {\n    const allowedSortValues = [\"1\", \"c\", \"j\", \"p\", \"p1\", \"t\", \"t1\", \"g\"];\n\n    let sortableData = [...searchdata.contents].filter((k) =>\n      allowedSortValues.includes(k.userinfo?.sort)\n    );\n\n    if (sortConfig.key !== null) {\n      sortableData.sort((a, b) => {\n        let aValue, bValue;\n\n        if (sortConfig.key === \"id\") {\n          aValue = parseInt(a[sortConfig.key], 10);\n          bValue = parseInt(b[sortConfig.key], 10);\n        } else {\n          aValue = a.data[sortConfig.key] || a.userinfo[sortConfig.key];\n          bValue = b.data[sortConfig.key] || b.userinfo[sortConfig.key];\n        }\n\n        if (aValue < bValue) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n\n    return sortableData;\n  };\n\n  const handleDelete = async (id) => {\n    console.log(\"Deleting user with id:\", id);\n    try {\n      await deleteUser(id);\n      alert(\"사용자가 성공적으로 삭제되었습니다.\");\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      alert(\"사용자 삭제 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.tablecontainer}>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"id\")}>관리번호</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"name\")}>성명</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"type\")}>타입</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"group\")}>군</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"turn\")}>순번</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitturn\")}>가입 차순</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitdate\")}>가입 날짜</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"category\")}>분류</span>\n        </div>\n      </div>\n      {searchdata.state === \"hasValue\" &&\n        sortedData()\n          .filter((k) => k.userinfo && k.data)\n          .map((k) => {\n            return (\n              <div className={styles.maincontainer} key={k.id}>\n                <Link href={\"/search/userinfo/\" + k.id} className={styles.link}>\n                  <div className={styles.rowContainer}>\n                    <div className={styles.unitContainer}>{k.id}</div>\n                    <div className={styles.unitContainer}>\n                      {k.userinfo?.name || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.type || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.group || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.turn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitturn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitdate\n                        ? k.data.submitdate.slice(0, 10)\n                        : \"N/A\"}\n                    </div>\n                    {/* <div className={styles.unitContainer}>\n                      {`${k.data?.type || \"N/A\"}-${k.data?.group || \"N/A\"}-${k.data?.turn || \"N/A\"}`}\n                    </div> */}\n                    <div className={styles.unitContainer}>\n                      {categoryMapping[k.userinfo?.sort] || \"N/A\"}\n                    </div>\n                  </div>\n                </Link>\n                <div className={styles.unitContainer}>\n                  <ModifyButton onClick={() => handleDelete(k.id)}>\n                    <div className={styles.CBBottonFont}>삭제</div>\n                  </ModifyButton>\n                </div>\n              </div>\n            );\n          })}\n    </div>\n  );\n};\n\nfunction Modify() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onNameChange = (e) => {\n    const text = e.target.value;\n    setName(text.replace(/ /g, \"\"));\n  };\n\n  const onNumberChange = (e) => {\n    const text = e.target.value;\n    setNumber(text.replace(/ /g, \"\"));\n  };\n\n  return (\n    <>\n      <h1></h1>\n      <div className={styles.flexContainer}>\n      <Inputbox\n          type=\"text\"\n          placeholder=\"관리번호\"\n          onChange={onNumberChange}\n        />\n        <Inputbox type=\"text\" placeholder=\"회원 성함\" onChange={onNameChange} />\n\n        <DropInputbox list={typelist} />\n        <DropInputbox list={grouplist} />\n        <DropInputbox list={turnlist} />\n      </div>\n      {typeof window !== \"undefined\" && (\n        <SearchList name={name} number={number} />\n      )}\n    </>\n  );\n}\n\nexport default withAuth(Modify);\n"
            },
            "cancel": {
                "__files__": {
                    "page.js": "\"use client\";\n\nimport { Inputbox, DropInputbox } from \"@/components/Inputbox\";\nimport styles from \"@/styles/Search.module.scss\";\nimport { searchnameState, searchnumberState } from \"@/utils/atom\";\nimport { namesearchSelector } from \"@/utils/selector\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilValueLoadable, useSetRecoilState } from \"recoil\";\nimport { typelist, grouplist, turnlist } from \"@/components/droplistdata\";\nimport { deleteUser } from \"@/utils/api\";\nimport { ModifyButton } from \"@/components/Button\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst categoryMapping = {\n  1: \"정계약\",\n  c: \"청약\",\n  j: \"정계약\",\n  r: \"수정\",\n  x: \"해지\",\n  x1: \"해지\",\n  p: \"업대\",\n  p1: \"업대\",\n  t: \"창준위\",\n  t1: \"창준위\",\n  g: \"지주\",\n};\n\nconst SearchList = ({ name, number }) => {\n  const setNameState = useSetRecoilState(searchnameState);\n  const setNumberState = useSetRecoilState(searchnumberState);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: \"ascending\",\n  });\n\n  let searchname = name.length > 1 ? name : \"\";\n  let searchnumber = number.length > 1 ? number : \"\";\n\n  useEffect(() => {\n    setNameState(searchname);\n    setNumberState(searchnumber);\n  }, [searchname, searchnumber, setNameState, setNumberState]);\n\n  let searchdata = useRecoilValueLoadable(namesearchSelector);\n\n  if (searchdata.state === \"loading\") {\n    return null;\n  }\n\n  if (searchdata.state === \"hasError\") {\n    return <div>Error loading data</div>;\n  }\n\n  const handleSort = (key) => {\n    let direction = \"ascending\";\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedData = () => {\n    const allowedSortValues = [\"x\", \"x1\"];\n\n    let sortableData = [...searchdata.contents].filter((k) =>\n      allowedSortValues.includes(k.userinfo?.sort)\n    );\n\n    if (sortConfig.key !== null) {\n      sortableData.sort((a, b) => {\n        let aValue, bValue;\n\n        if (sortConfig.key === \"id\") {\n          aValue = parseInt(a[sortConfig.key], 10);\n          bValue = parseInt(b[sortConfig.key], 10);\n        } else {\n          aValue = a.data[sortConfig.key] || a.userinfo[sortConfig.key];\n          bValue = b.data[sortConfig.key] || b.userinfo[sortConfig.key];\n        }\n\n        if (aValue < bValue) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n\n    return sortableData;\n  };\n\n  const handleDelete = async (id) => {\n    console.log(\"Deleting user with id:\", id);\n    try {\n      await deleteUser(id);\n      alert(\"사용자가 성공적으로 삭제되었습니다.\");\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      alert(\"사용자 삭제 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.tablecontainer}>\n        {/* 기존 열 */}\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"id\")}>관리번호</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"name\")}>성명</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"type\")}>타입</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"group\")}>군</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"turn\")}>순번</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitturn\")}>가입 차순</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitdate\")}>가입 날짜</span>\n        </div>\n        {/* <div className={styles.unitContainer}>\n          <span>임시동호</span>\n        </div> */}\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"category\")}>분류</span>\n        </div>\n      </div>\n      {searchdata.state === \"hasValue\" &&\n        sortedData()\n          .filter((k) => k.userinfo && k.data)\n          .map((k) => {\n            return (\n              <div className={styles.maincontainer} key={k.id}>\n                <Link href={\"/search/userinfo/\" + k.id} className={styles.link}>\n                  <div className={styles.rowContainer}>\n                    <div className={styles.unitContainer}>{k.id}</div>\n                    <div className={styles.unitContainer}>\n                      {k.userinfo?.name || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.type || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.group || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.turn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitturn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitdate\n                        ? k.data.submitdate.slice(0, 10)\n                        : \"N/A\"}\n                    </div>\n                    {/* <div className={styles.unitContainer}>\n                      {`${k.data?.type || \"N/A\"}-${k.data?.group || \"N/A\"}-${k.data?.turn || \"N/A\"}`}\n                    </div> */}\n                    <div className={styles.unitContainer}>\n                      {categoryMapping[k.userinfo?.sort] || \"N/A\"}\n                    </div>\n                  </div>\n                </Link>\n                <div className={styles.unitContainer}>\n                  <ModifyButton onClick={() => handleDelete(k.id)}>\n                    <div className={styles.CBBottonFont}>삭제</div>\n                  </ModifyButton>\n                </div>\n              </div>\n            );\n          })}\n    </div>\n  );\n};\n\nfunction Modify() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onNameChange = (e) => {\n    const text = e.target.value;\n    setName(text.replace(/ /g, \"\"));\n  };\n\n  const onNumberChange = (e) => {\n    const text = e.target.value;\n    setNumber(text.replace(/ /g, \"\"));\n  };\n\n  return (\n    <>\n      <h1></h1>\n      <div className={styles.flexContainer}>        \n        <Inputbox\n          type=\"text\"\n          placeholder=\"관리번호\"\n          onChange={onNumberChange}\n        />\n        <Inputbox type=\"text\" placeholder=\"회원 성함\" onChange={onNameChange} />\n\n        <DropInputbox list={typelist} />\n        <DropInputbox list={grouplist} />\n        <DropInputbox list={turnlist} />\n      </div>\n      {typeof window !== \"undefined\" && (\n        <SearchList name={name} number={number} />\n      )}\n    </>\n  );\n}\n\nexport default withAuth(Modify);\n"
                }
            },
            "modify": {
                "__files__": {
                    "page.js": "\"use client\";\n\nimport { Inputbox, DropInputbox } from \"@/components/Inputbox\";\nimport styles from \"@/styles/Search.module.scss\";\nimport { searchnameState, searchnumberState } from \"@/utils/atom\";\nimport { namesearchSelector } from \"@/utils/selector\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\";\nimport { useRecoilValueLoadable, useSetRecoilState } from \"recoil\";\nimport { typelist, grouplist, turnlist } from \"@/components/droplistdata\";\nimport { deleteUser } from \"@/utils/api\";\nimport { ModifyButton } from \"@/components/Button\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nconst categoryMapping = {\n  1: \"정계약\",\n  c: \"청약\",\n  j: \"정계약\",\n  r: \"수정\",\n  x: \"해지\",\n  x1: \"해지\",\n  p: \"업대\",\n  p1: \"업대\",\n  t: \"창준위\",\n  t1: \"창준위\",\n  g: \"지주\",\n};\n\nconst SearchList = ({ name, number }) => {\n  const setNameState = useSetRecoilState(searchnameState);\n  const setNumberState = useSetRecoilState(searchnumberState);\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: \"ascending\",\n  });\n\n  let searchname = name.length > 1 ? name : \"\";\n  let searchnumber = number.length > 1 ? number : \"\";\n\n  useEffect(() => {\n    setNameState(searchname);\n    setNumberState(searchnumber);\n  }, [searchname, searchnumber, setNameState, setNumberState]);\n\n  let searchdata = useRecoilValueLoadable(namesearchSelector);\n\n  if (searchdata.state === \"loading\") {\n    return null;\n  }\n\n  if (searchdata.state === \"hasError\") {\n    return <div>Error loading data</div>;\n  }\n\n  if (searchdata.state === \"hasValue\") {\n    console.log(\"Received search data:\", searchdata.contents);\n  }\n\n  const handleSort = (key) => {\n    let direction = \"ascending\";\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const sortedData = () => {\n    const allowedSortValues = [\"r\"];\n\n    const categoryOrder = {\n      정계약: 1,\n      청약: 2,\n      수정: 3,\n      해지: 4,\n      업대: 5,\n      창준위: 6,\n      지주: 7,\n      \"N/A\": 99,\n    };\n\n    let sortableData = [...searchdata.contents].filter((k) =>\n      allowedSortValues.includes(k.userinfo?.sort)\n    );\n\n    if (sortConfig.key !== null) {\n      sortableData.sort((a, b) => {\n        let aValue, bValue;\n\n        if (sortConfig.key === \"sort\") {\n          aValue =\n            categoryOrder[categoryMapping[a.userinfo?.sort]] ||\n            categoryOrder[\"N/A\"];\n          bValue =\n            categoryOrder[categoryMapping[b.userinfo?.sort]] ||\n            categoryOrder[\"N/A\"];\n        } else if (sortConfig.key === \"id\") {\n          aValue = parseInt(a[sortConfig.key], 10);\n          bValue = parseInt(b[sortConfig.key], 10);\n        } else {\n          aValue = a.data[sortConfig.key] || a.userinfo[sortConfig.key];\n          bValue = b.data[sortConfig.key] || b.userinfo[sortConfig.key];\n        }\n\n        if (aValue < bValue) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n\n    console.log(\"Sorted data:\", sortableData);\n\n    return sortableData;\n  };\n\n  const handleDelete = async (id) => {\n    console.log(\"Deleting user with id:\", id);\n    try {\n      await deleteUser(id);\n      alert(\"사용자가 성공적으로 삭제되었습니다.\");\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      alert(\"사용자 삭제 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.tablecontainer}>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"id\")}>관리번호</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"name\")}>성명</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"type\")}>타입</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"group\")}>군</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"turn\")}>순번</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitturn\")}>가입 차순</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"submitdate\")}>가입 날짜</span>\n        </div>\n        <div className={styles.unitContainer}>\n          <span onClick={() => handleSort(\"sort\")}>분류</span>\n        </div>\n      </div>\n      {searchdata.state === \"hasValue\" &&\n        sortedData()\n          .filter((k) => k.userinfo && k.data)\n          .map((k) => {\n            return (\n              <div className={styles.maincontainer} key={k.id}>\n                <Link href={\"/search/userinfo/\" + k.id} className={styles.link}>\n                  <div className={styles.rowContainer}>\n                    <div className={styles.unitContainer}>{k.id}</div>\n                    <div className={styles.unitContainer}>\n                      {k.userinfo?.name || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.type || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.group || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.turn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitturn || \"N/A\"}\n                    </div>\n                    <div className={styles.unitContainer}>\n                      {k.data?.submitdate\n                        ? k.data.submitdate.slice(0, 10)\n                        : \"N/A\"}\n                    </div>\n                    {/* {<div className={styles.unitContainer}>\n                      {`${k.data?.type || \"N/A\"}-${k.data?.group || \"N/A\"}-${k.data?.turn || \"N/A\"}`}\n                    </div>} */}\n                    <div className={styles.unitContainer}>\n                      {categoryMapping[k.userinfo?.sort] || \"N/A\"}\n                    </div>\n                  </div>\n                </Link>\n                <div className={styles.unitContainer}>\n                  <ModifyButton onClick={() => handleDelete(k.id)}>\n                    <div className={styles.CBBottonFont}>삭제</div>\n                  </ModifyButton>\n                </div>\n              </div>\n            );\n          })}\n    </div>\n  );\n};\n\nfunction Modify() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onNameChange = (e) => {\n    const text = e.target.value;\n    setName(text.replace(/ /g, \"\"));\n  };\n\n  const onNumberChange = (e) => {\n    const text = e.target.value;\n    setNumber(text.replace(/ /g, \"\"));\n  };\n\n  return (\n    <>\n      <h1></h1>\n      <div className={styles.flexContainer}>\n      <Inputbox\n          type=\"text\"\n          placeholder=\"관리번호\"\n          onChange={onNumberChange}\n        />\n        <Inputbox type=\"text\" placeholder=\"회원 성함\" onChange={onNameChange} />\n\n        <DropInputbox list={typelist} />\n        <DropInputbox list={grouplist} />\n        <DropInputbox list={turnlist} />\n      </div>\n      {typeof window !== \"undefined\" && (\n        <SearchList name={name} number={number} />\n      )}\n    </>\n  );\n}\n\nexport default withAuth(Modify);\n"
                }
            },
            "userinfo": {
                "[id]": {
                    "__files__": {
                        "page.js": "\"use client\";\nimport Mininav from \"@/components/Mininav\";\nimport styles from \"@/styles/Userinfo.module.scss\";\nimport { usePathname } from \"next/navigation\";\nimport { useRecoilValueLoadable, useSetRecoilState } from \"recoil\";\nimport { userinfoSelector } from \"@/utils/selector\";\nimport { useState } from \"react\";\nimport { useridState } from \"@/utils/atom\";\nimport { DownloadButton, Button } from \"@/components/Button\";\nimport Link from \"next/link\";\nimport { Inputbox, InputAreabox } from \"@/components/Inputbox\";\nimport withAuth from \"@/utils/hoc/withAuth\";\n\nfunction Search() {\n  const pathname = usePathname();\n  const splitpath = pathname.split(\"/\"); //splitpath[3]\n  const userid = splitpath[3];\n  const setIdState = useSetRecoilState(useridState);\n  useState(() => {\n    setIdState(userid);\n  });\n  const userselectordata = useRecoilValueLoadable(userinfoSelector);\n\n  const sortMapping = {\n    1: \"정계약\",\n    c: \"청약\",\n    j: \"정계약\",\n    r: \"수정\",\n    x: \"해지\",\n    x1: \"해지\",\n    p: \"업대\",\n    p1: \"업대\",\n    t: \"창준위\",\n    t1: \"창준위\",\n    g: \"지주\",\n  };\n\n  switch (userselectordata.state) {\n    case \"hasValue\":\n      const userdata = userselectordata.contents;\n      console.log(userdata);\n      if (userdata === undefined)\n        return (\n          <>\n            <h1>잘못된 접근입니다</h1>\n          </>\n        );\n      else\n        return (\n          <>\n            <h3>회원정보</h3>\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>관리번호</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.id || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>성명</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.userinfo.name || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>주민번호</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>\n                    {userdata.userinfo.firstid || \"정보 없음\"}-\n                    {userdata.userinfo.secondid || \"정보 없음\"}\n                  </span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>이메일</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.userinfo.email || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>휴대전화</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.userinfo.phone || \"정보 없음\"}</span>\n                </div>\n              </div>\n            </div>\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>타입</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.data.type || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>군</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.data.group || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>순번</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.data.turn || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>가입차순</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.data.submitturn || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>분류</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>\n                    {sortMapping[userdata.userinfo.sort] || \"정보 없음\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>가입일자</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>\n                    {userdata.data.submitdate\n                      ? userdata.data.submitdate.slice(0, 10)\n                      : \"정보 없음\"}\n                  </span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>가입가</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>\n                    {userdata.data.submitprice\n                      ? userdata.data.submitprice\n                          .toString()\n                          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                      : \"정보 없음\"}\n                  </span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>예약금 납입일자</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>\n                    {userdata.data.earnestdate\n                      ? userdata.data.earnestdate.slice(0, 10)\n                      : \"정보 없음\"}\n                  </span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>예약금</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>\n                    {userdata.data.earnest\n                      ? userdata.data.earnest\n                          .toString()\n                          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                      : \"정보 없음\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className={styles.rowcontainer}>\n              <div className={styles.postunitbody}>\n                <div className={styles.posttitlebody}>\n                  <span className={styles.title}>법정주소</span>\n                </div>\n                <div className={styles.postcontentbody}>\n                  <span>{userdata.userinfo.getpost || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.postunitbody}>\n                <div className={styles.posttitlebody}>\n                  <span className={styles.title}>우편물 수령주소</span>\n                </div>\n                <div className={styles.postcontentbody}>\n                  <span>{userdata.userinfo.post || \"정보 없음\"}</span>\n                </div>\n              </div>\n            </div>\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>은행명</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.userinfo.bank || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>계좌번호</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.userinfo.bankid || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>예금주</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.userinfo.bankwho || \"정보 없음\"}</span>\n                </div>\n              </div>\n            </div>\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>7차 면제</span>\n                </div>\n                <div className={styles.contentbody}>\n                  {userdata.fileinfo.exception &&\n                  JSON.parse(userdata.fileinfo.exception) ? (\n                    <span>✔️</span>\n                  ) : (\n                    <span>❌</span>\n                  )}\n                </div>\n              </div>\n\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>출자금</span>\n                </div>\n                <div className={styles.contentbody}>\n                  {userdata.fileinfo.investment &&\n                  JSON.parse(userdata.fileinfo.investment) ? (\n                    <span>✔️</span>\n                  ) : (\n                    <span>❌</span>\n                  )}\n                </div>\n              </div>\n\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>지산A동 계약서</span>\n                </div>\n                <div className={styles.contentbody}>\n                  {userdata.fileinfo.jscontract &&\n                  JSON.parse(userdata.fileinfo.jscontract) ? (\n                    <span>✔️</span>\n                  ) : (\n                    <span>❌</span>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>총괄</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.ext.manage || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>본부</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.ext.managemain || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>팀</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.ext.manageteam || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>담당자</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.ext.managename || \"정보 없음\"}</span>\n                </div>\n              </div>\n            </div>\n            <h1></h1>\n            <hr />\n\n            <h3>MGM</h3>\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>업체명</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.mgm?.companyname || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>이름</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.mgm?.name || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>기관</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.mgm?.organization || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>계좌</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.mgm?.accountnumber || \"정보 없음\"}</span>\n                </div>\n              </div>\n            </div>\n            <h1></h1>\n            <hr />\n\n            <h3>가입해지</h3>\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>해지일자</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>\n                    {userdata.cancel && userdata.cancel.canceldate\n                      ? userdata.cancel.canceldate.slice(0, 10)\n                      : \"정보 없음\"}\n                  </span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>환급일자</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>\n                    {userdata.cancel && userdata.cancel.paybackdate\n                      ? userdata.cancel.paybackdate.slice(0, 10)\n                      : \"정보 없음\"}\n                  </span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>환급금</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.cancel?.paybackprice || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>은행</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.cancel?.bank || \"정보 없음\"}</span>\n                </div>\n              </div>\n            </div>\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>계좌번호</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.cancel?.bankid || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>예금주</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.cancel?.bankwho || \"정보 없음\"}</span>\n                </div>\n              </div>\n            </div>\n            <h1></h1>\n            <hr />\n\n            <h3>지연이자</h3>\n            <div className={styles.rowcontainer}>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>지연일수</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.delayedloan?.loandate || \"정보 없음\"}</span>\n                </div>\n              </div>\n              <div className={styles.unitbody}>\n                <div className={styles.titlebody}>\n                  <span className={styles.title}>지연이자액</span>\n                </div>\n                <div className={styles.contentbody}>\n                  <span>{userdata.delayedloan?.loan || \"정보 없음\"}</span>\n                </div>\n              </div>\n            </div>\n            <h1></h1>\n            <hr />\n\n            <h3>부속서류</h3>\n            <div className={styles.file_container}>\n              {userdata.fileinfo &&\n              userdata.fileinfo.upload &&\n              JSON.parse(userdata.fileinfo.upload) ? (\n                <DownloadButton userid={userid} filename=\"upload\">\n                  부속 서류\n                </DownloadButton>\n              ) : (\n                <>\n                  <div className={styles.A}>\n                    <p>부속 서류</p>\n                    <p>파일이 없습니다.</p>\n                  </div>\n                </>\n              )}\n\n              <div className={styles.file_status}>\n                <ul>\n                  <li>\n                    <span>인감증명서 </span>\n                    {userdata.fileinfo.A && JSON.parse(userdata.fileinfo.A) ? (\n                      <span>✔️</span>\n                    ) : (\n                      <span>❌</span>\n                    )}\n                  </li>\n                  <li>\n                    <span>본인서명확인서 </span>\n                    {userdata.fileinfo.B && JSON.parse(userdata.fileinfo.B) ? (\n                      <span>✔️</span>\n                    ) : (\n                      <span>❌</span>\n                    )}\n                  </li>\n                  <li>\n                    <span>신분증 </span>\n                    {userdata.fileinfo.C && JSON.parse(userdata.fileinfo.C) ? (\n                      <span>✔️</span>\n                    ) : (\n                      <span>❌</span>\n                    )}\n                  </li>\n                  <li>\n                    <span>확약서 </span>\n                    {userdata.fileinfo.D && JSON.parse(userdata.fileinfo.D) ? (\n                      <span>✔️</span>\n                    ) : (\n                      <span>❌</span>\n                    )}\n                  </li>\n                </ul>\n              </div>\n              <div className={styles.file_status}>\n                <ul>\n                  <li>\n                    <span>창준위용 </span>\n                    {userdata.fileinfo.E && JSON.parse(userdata.fileinfo.E) ? (\n                      <span>✔️</span>\n                    ) : (\n                      <span>❌</span>\n                    )}\n                  </li>\n                  <li>\n                    <span>무상옵션 </span>\n                    {userdata.fileinfo.F && JSON.parse(userdata.fileinfo.F) ? (\n                      <span>✔️</span>\n                    ) : (\n                      <span>❌</span>\n                    )}\n                  </li>\n                  <li>\n                    <span>선호도조사 </span>\n                    {userdata.fileinfo.G && JSON.parse(userdata.fileinfo.G) ? (\n                      <span>✔️</span>\n                    ) : (\n                      <span>❌</span>\n                    )}\n                  </li>\n                  <li>\n                    <span>총회동의서 </span>\n                    {userdata.fileinfo.H && JSON.parse(userdata.fileinfo.H) ? (\n                      <span>✔️</span>\n                    ) : (\n                      <span>❌</span>\n                    )}\n                  </li>\n                  <li>\n                    <span>사은품 </span>\n                    {userdata.fileinfo.I && JSON.parse(userdata.fileinfo.I) ? (\n                      <span>✔️</span>\n                    ) : (\n                      <span>❌</span>\n                    )}\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <h1></h1>\n            <hr />\n            <h3>납입금 관리</h3>\n            <div className={styles.linkbutton}>\n              <Link href={\"/inputmoney/userinfo/\" + splitpath[3]}>\n                <Button>\n                  <h3>바로가기</h3>\n                </Button>\n              </Link>\n            </div>\n            <hr />\n            <h3>기타 정보</h3>\n            <div>\n              <InputAreabox value={userdata.ext.ext || \"정보 없음\"} />\n            </div>\n          </>\n        );\n\n    case \"loading\":\n      console.log(\"loading\");\n      return <></>;\n\n    case \"hasError\":\n      throw userselectordata.contents;\n  }\n}\n\nexport default withAuth(Search);\n"
                    }
                }
            }
        },
        "signup": {
            "__files__": {
                "page.js": "\"use client\";\nimport { LoginInputbox } from \"@/components/Inputbox\";\nimport { Button } from \"@/components/Button\";\nimport styles from \"@/styles/Signup.module.scss\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\"; // Import useRouter\nimport Swal from \"sweetalert2\"; // Import SweetAlert2\nimport { fetchSignup } from \"@/utils/api\";\n\nexport default function Signup() {\n  const [userform, setUserform] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    roles: [\"user\"], //default 는 유저\n  });\n\n  const router = useRouter(); // Initialize useRouter\n\n  const handleChange = (e) => {\n    setUserform({\n      ...userform,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetchSignup(\n        userform.username,\n        userform.email,\n        userform.password,\n        userform.roles\n      );\n      Swal.fire({\n        title: \"회원가입 성공\",\n        text: \"회원가입이 완료되었습니다!\",\n        icon: \"success\",\n        confirmButtonText: \"확인\",\n      }).then(() => {\n        router.push(\"/dashboard\"); // Redirect to dashboard\n      });\n      console.log(\"Signup successful:\", response.data);\n    } catch (error) {\n      console.error(\"Signup error:\", error.response.data.message);\n      Swal.fire({\n        title: \"회원가입 실패\",\n        text: error.response.data.message || \"회원가입에 실패했습니다.\",\n        icon: \"error\",\n        confirmButtonText: \"확인\",\n      });\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.childcontainer}>\n        <h1 className={styles.title}>회원가입</h1>\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <LoginInputbox\n            className={styles.input}\n            name=\"username\"\n            placeholder=\"사용자 이름 (아이디)\"\n            onChange={handleChange}\n          />\n          <LoginInputbox\n            className={styles.input}\n            name=\"email\"\n            placeholder=\"이메일\"\n            type=\"email\"\n            onChange={handleChange}\n          />\n          <LoginInputbox\n            className={styles.input}\n            name=\"password\"\n            placeholder=\"비밀번호\"\n            type=\"password\"\n            onChange={handleChange}\n          />\n          <Button className={styles.button} type=\"submit\">\n            회원가입\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"
            }
        },
        "testpage": {
            "__files__": {
                "page.js": "import Test from \"@/components/Test\"\n\nexport default function Testpage() {\n  return (\n      <>\n        <h1>thisistestpage</h1>\n        <Test></Test>\n      </>\n    )\n}\n"
            }
        }
    },
    "components": {
        "__files__": {
            "Button.js": "\"use client\"\nimport styles from \"@/styles/Button.module.scss\"\nimport { useState } from 'react'\n\nimport { CgSearch } from \"react-icons/cg\";\nimport { FaFileDownload } from \"react-icons/fa\";\n\nimport { downloadFile } from \"@/utils/api\";\n\nexport const Button = (props) => {\n    return(\n        <button className={styles.buttonstyle}>\n            {props.children}\n        </button>\n    )\n}\n\nconst iconstyle = { fontSize: \"1.5em\", marginLeft: \"10px\", marginTop: \"10px\" };\n\nexport const DownloadButton = (props) => {\n    const userid = props.userid;\n    const filename = props.filename;\n\n    const handleClick = () => {\n        downloadFile(userid,filename);\n    }\n    return(\n        <>\n        <p>{props.children}</p>\n        <button className={styles.downloadbuttonstyle} onClick={handleClick}>\n            다운로드\n        </button>\n        </>\n    )\n} \n\nexport const CgSearchButton = (props) => {\n    return(\n        <button className={styles.CgButton}>\n            <CgSearch />\n            {props.children}\n        </button>\n    )\n}\n\nexport const CheckButton = (props) => {\n    const {name, value} = props;\n    return(\n        <input type=\"checkbox\" className={styles.checkstyle} name={name} value={value} />\n    )\n}\n\nexport const Button_Y = (props) => {\n    return(\n        <button className={styles.buttonstyle_y}>\n            {props.children}\n        </button>\n    )\n}\n\nexport const Button_N = (props) => {\n    return(\n        <button className={styles.buttonstyle_n}>\n            {props.children}\n        </button>\n    )\n}\n\nexport const SearchButton = (props) => {\n    return(\n        <button className={styles.searchbuttonstyle}>\n            {props.children}\n        </button>\n    )\n}\n\nexport const ModifyButton = (props) => {\n    return(\n        <button className={styles.modifybutton} onClick={props.onClick}>\n            {props.children}\n        </button>\n    )\n}\n\nexport const ChecButton = (props) => {\n    return(\n        <button className={styles.checkbutton}>\n            {props.children}\n        </button>\n    )\n}\n\nexport const PaymentScheduleButton = (props) => {\n    const [isActivePayment, setIsActivePayment] = useState(props.isclear); // 납입 버튼 활성화 상태를 관리하는 상태\n    const setValue = props.setValue;\n    const handlePaymentClick = () => {\n        setIsActivePayment(true); // 납입 버튼 활성화\n        setValue('isclear',true);\n    };\n\n    const handleScheduleClick = () => {\n        setIsActivePayment(false); // 예정 버튼 활성화\n        setValue('isclear',false);\n    };\n\n    return (\n        <>\n            <button type=\"button\" className={`${styles.toggleButton} ${isActivePayment ? styles.active : ''}`} onClick={handlePaymentClick}>\n                <div className={styles.ButtonFont}>납입</div>\n            </button>\n            <button  type=\"button\" className={`${styles.toggleButton} ${!isActivePayment ? styles.active : ''}`} onClick={handleScheduleClick}>\n                <div className={styles.ButtonFont2}>예정</div>\n            </button>\n        </>\n    );\n};",
            "ChasuFinBody.js": "// ChasuPreBody 컴포넌트\nimport { useState, useEffect } from \"react\";\nimport { searchFinchasu } from \"@/utils/api\";\nimport { BsBagDash } from \"react-icons/bs\";\nimport { BsDatabase } from \"react-icons/bs\";\nimport { SearchButton, ModifyButton } from \"@/components/Button\";\nimport styles from \"@/styles/Inputmoney.module.scss\";\nimport Link from \"next/link\";\n\nconst ChasuFinBody = ({ userId }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const fetchedData = await searchFinchasu(userId);\n      setData(fetchedData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div>\n      {data.map((item, index) => (\n        <div key={index} className={styles.ContentFinBody}>\n          <div className={styles.ContentBodyTitle}>\n            <div className={styles.CBTIcon}>\n              <div className={styles.Icon}>\n                <BsBagDash style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.CBTText}>\n              <div className={styles.CBTCha}>\n                <div className={styles.CBTChaFont}>{item.chasu}차 납부</div>\n              </div>\n              <div className={styles.CBTDate}>\n                <div className={styles.CBTDateFont}>\n                  업데이트 : {item.findate}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={styles.CBBottonBody}>\n            <ModifyButton>\n              <Link href={`/inputmoney/payinfo/${userId}/${item.chasu}`}>\n                <div className={styles.CBBottonFont}>납부수정</div>\n              </Link>\n            </ModifyButton>\n          </div>\n          <div className={styles.CBSum}>\n            <div className={styles.CBMoneyImg}>\n              <div className={styles.Icon2}>\n                <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.CBSumText}>{item.chasu}차 총액</div>\n            <div className={styles.CBSumNum}>\n              {item.sumprice.toLocaleString()} ₩\n            </div>\n          </div>\n          <div className={styles.CBSum}>\n            <div className={styles.CBMoneyImg}>\n              <div className={styles.Icon2}>\n                <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.CBSumText}>납입금액</div>\n            <div className={styles.CBSumNum} style={{ color: \"#3E9C12\" }}>\n              {item.payprice.toLocaleString()} ₩\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChasuFinBody;\n",
            "ChasuPreBody.js": "// ChasuPreBody 컴포넌트\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport { searchPrechasu } from \"@/utils/api\";\nimport { BsBagDash } from \"react-icons/bs\";\nimport { BsDatabase } from \"react-icons/bs\";\nimport { SearchButton, ModifyButton } from \"@/components/Button\";\nimport styles from \"@/styles/Inputmoney.module.scss\";\nimport Link from \"next/link\";\n\nconst ChasuPreBody = ({ userId }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const fetchedData = await searchPrechasu(userId);\n      setData(fetchedData);\n      console.log(fetchedData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div>\n      {data.map((item, index) => (\n        <div key={index} className={styles.ContentPreBody}>\n          <div className={styles.ContentBodyTitle}>\n            <div className={styles.CBTIcon}>\n              <div className={styles.Icon}>\n                <BsBagDash style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.CBTText}>\n              <div className={styles.CBTCha}>\n                <div className={styles.CBTChaFont}>{item.chasu}차 납부</div>\n              </div>\n              <div className={styles.CBTDate}>\n                <div className={styles.CBTDateFont}>\n                  업데이트 : {item.duedate}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={styles.CBBottonBody}>\n            <ModifyButton onClick={() => {}}>\n              <Link href={`/inputmoney/payinfo/${userId}/${item.chasu}`}>\n                <div className={styles.CBBottonFont}>납부수정</div>\n              </Link>\n            </ModifyButton>\n          </div>\n          <div className={styles.CBSum}>\n            <div className={styles.CBMoneyImg}>\n              <div className={styles.Icon2}>\n                <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.CBSumText}>{item.chasu}차 총액</div>\n            <div className={styles.CBSumNum}>\n              {item.sumprice.toLocaleString()} ₩\n            </div>\n          </div>\n          <div className={styles.CBSum}>\n            <div className={styles.CBMoneyImg}>\n              <div className={styles.Icon2}>\n                <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.CBSumText}>납입금액</div>\n            <div className={styles.CBSumNum}>\n              {item.payprice.toLocaleString()} ₩\n            </div>\n          </div>\n          <div className={styles.CBSum}>\n            <div className={styles.CBMoneyImg}>\n              <div className={styles.Icon2}>\n                <BsDatabase style={{ width: \"100%\", height: \"100%\" }} />\n              </div>\n            </div>\n            <div className={styles.CBSumText}>미납금액</div>\n            <div className={styles.CBSumNum} style={{ color: \"#D11414\" }}>\n              {(item.sumprice - item.payprice).toLocaleString()} ₩\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChasuPreBody;\n",
            "droplistdata.js": "export const sortlist = [\n  {\n    value: \"1\",\n    item: \"청약\",\n  },\n];\n\nexport const banklist = [\n  {\n    value: \"SHINHAN\",\n    item: \"신한은행\",\n  },\n  {\n    value: \"IBK\",\n    item: \"IBK기업은행\",\n  },\n  {\n    value: \"KOOKMIN\",\n    item: \"KB국민은행\",\n  },\n  {\n    value: \"SUHYUP\",\n    item: \"수협은행\",\n  },\n  {\n    value: \"NH\",\n    item: \"농협은행\",\n  },\n  {\n    value: \"HANA\",\n    item: \"KEB하나은행\",\n  },\n  {\n    value: \"SHIN\",\n    item: \"신한은행\",\n  },\n  {\n    value: \"IBK\",\n    item: \"IBK기업은행\",\n  },\n  {\n    value: \"SC\",\n    item: \"SC제일은행\",\n  },\n  {\n    value: \"HWAN\",\n    item: \"외환은행\",\n  },\n  {\n    value: \"CITY\",\n    item: \"한국시티은행\",\n  },\n  {\n    value: \"KN\",\n    item: \"경남은행\",\n  },\n  {\n    value: \"GJ\",\n    item: \"광주은행\",\n  },\n  {\n    value: \"DG\",\n    item: \"대구은행\",\n  },\n  {\n    value: \"BS\",\n    item: \"부산은행\",\n  },\n  {\n    value: \"JB\",\n    item: \"전북은행\",\n  },\n  {\n    value: \"JEJU\",\n    item: \"제주은행\",\n  },\n  {\n    value: \"INDUSTRY\",\n    item: \"한국산업은행\",\n  },\n  {\n    value: \"EXPORT\",\n    item: \"한국수출은행\",\n  },\n];\nexport const classificationlist = [\n  {\n    value: \"c\",\n    item: \"청약\",\n  },\n  {\n    value: \"j\",\n    item: \"정계약\",\n  },\n  {\n    value: \"r\",\n    item: \"수정\",\n  },\n  {\n    value: \"p\",\n    item: \"업대\",\n  },\n  {\n    value: \"t\",\n    item: \"창준위\",\n  },\n  {\n    value: \"g\",\n    item: \"지주\",\n  },\n  {\n    value: \"x\",\n    item: \"해지\",\n  },\n];\nexport const cancellist = [\n  {\n    value: \"x\",\n    item: \"해지\",\n  },\n];\nexport const sintacklist = [\n  {\n    value: \"MOGUNGHWA\",\n    item: \"무궁화신탁\",\n  },\n  {\n    value: \"KYOBO\",\n    item: \"교보자산신탁\",\n  },\n  {\n    value: \"DASIN\",\n    item: \"대신자산신탁\",\n  },\n  {\n    value: \"SINYOUNG\",\n    item: \"신영부동산신탁\",\n  },\n];\n\nexport const typeidlist = [\n  {\n    value: \"1-1차\",\n    item: \"1-1차\",\n  },\n  {\n    value: \"1-2차\",\n    item: \"1-2차\",\n  },\n  {\n    value: \"1-3차\",\n    item: \"1-3차\",\n  },\n  {\n    value: \"1-4차\",\n    item: \"1-4차\",\n  },\n  {\n    value: \"1-5차\",\n    item: \"1-5차\",\n  },\n  {\n    value: \"2차\",\n    item: \"2차\",\n  },\n];\n\nexport const typelist = [\n  {\n    value: \"44\",\n    item: \"44\",\n  },\n  {\n    value: \"49\",\n    item: \"49\",\n  },\n  {\n    value: \"70\",\n    item: \"70\",\n  },\n  {\n    value: \"84A\",\n    item: \"84A\",\n  },\n  {\n    value: \"84B\",\n    item: \"84B\",\n  },\n];\n\nexport const grouplist = [\n  {\n    value: \"가\",\n    item: \"가\",\n  },\n  {\n    value: \"나\",\n    item: \"나\",\n  },\n  {\n    value: \"다\",\n    item: \"다\",\n  },\n  {\n    value: \"라\",\n    item: \"라\",\n  },\n  {\n    value: \"마\",\n    item: \"마\",\n  },\n  {\n    value: \"바\",\n    item: \"바\",\n  },\n  {\n    value: \"사\",\n    item: \"사\",\n  },\n];\n\nexport const turnlist = [\n  {\n    value: \"1\",\n    item: \"1\",\n  },\n  {\n    value: \"2\",\n    item: \"2\",\n  },\n  {\n    value: \"3\",\n    item: \"3\",\n  },\n  {\n    value: \"4\",\n    item: \"4\",\n  },\n  {\n    value: \"5\",\n    item: \"5\",\n  },\n];\n",
            "Header.js": "\"use client\";\nimport React, { useContext } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { usePathname } from \"next/navigation\";\nimport { AiOutlineBell } from \"react-icons/ai\";\nimport styles from \"../styles/Header.module.scss\";\nimport AuthContext from \"@/utils/context/AuthContext\";\n\nconst iconstyle = { fontSize: \"1.5em\", float: \"left\", margin: \"13px\" };\n\nconst Header = () => {\n  const router = useRouter();\n  const pathname = usePathname();\n  const splitpath = pathname.split(\"/\");\n  const headertitle = {\n    dashboard: \"조합원관리시스템이 정상 작동중입니다 👋🏻\",\n    search: \"회원 정보 검색\",\n    create: \"회원 정보 입력\",\n    createwithdraw: \"해약 회원 정보 입력\",\n    modify: \"회원 정보 수정\",\n    inputmoney: \"납입금 관리\",\n    control: \"차수 관리\",\n  };\n  const subtitle = {\n    dashboard: \"덕소 리버 베르데포레 [개발중]\",\n    search: \"회원정보를 한번에 확인할 수 있는 페이지입니다.\",\n    create: \"신규 회원정보를 생성할 수 있는 페이지입니다.\",\n    createwithdraw: \"해약 회원정보를 생성할 수 있는 페이지입니다.\",\n    modify: \"기존 회원정보를 수정할 수 있는 페이지입니다.\",\n    inputmoney: \"회원의 납입금을 한번에 관리할 수 있는 페이지입니다.\",\n    control:\n      \"차수별 납입금을 한번에 확인하고 수정,생성,삭제를 진행할 수 있습니다. [개발중]\",\n  };\n\n  const { isLoggedIn, username, logout } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    logout();\n    router.push(\"/login\");\n  };\n\n  const handleLogin = () => {\n    router.push(\"/login\");\n  };\n\n  return (\n    <div className={styles.maincontainer}>\n      <div className={styles.container}>\n        <h1 className={styles.title}>{headertitle[splitpath[1]]}</h1>\n        <h3 className={styles.subtitle}>{subtitle[splitpath[1]]}</h3>\n      </div>\n      <div className={styles.rightcontainer}>\n        <AiOutlineBell style={iconstyle} />\n        <div className={styles.loginbody}>\n          {isLoggedIn ? (\n            <div className={styles.usercontainer}>\n              <div className={styles.Name}>\n                <h1 className={styles.name}>{username}</h1>\n              </div>\n              <div className={styles.loginfo}>\n                <h3 className={styles.role}>Logged in</h3>\n                <button onClick={handleLogout} className={styles.logoutButton}>\n                  <h3 className={styles.role}>\n                    <div className={styles.logoutbutton}>로그아웃</div>\n                  </h3>\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className={styles.button}>\n              <button onClick={handleLogin} className={styles.loginButton}>\n                <div className={styles.ButtonFont}>로그인</div>\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n",
            "Inputbox.js": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport styles from \"@/styles/Inputbox.module.scss\";\nimport { IoMdCloudUpload } from \"react-icons/io\";\nimport { useForm, SubmitHandler, FieldValues } from \"react-hook-form\";\n\nexport const Checkbox = (props) => {\n  const { label, name, onChange, defaultChecked, register } = props;\n\n  return (\n    <div className={styles.checkboxContainer}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        defaultChecked={defaultChecked}\n        onChange={onChange}\n        {...register}\n        className={styles.checkbox}\n      />\n      <label className={styles.checkboxLabel}>{label}</label>\n    </div>\n  );\n};\n\nexport const Spanbox = ({ children }) => {\n  return (\n    <>\n      <span className={styles.spancontainer}>{children}</span>\n    </>\n  );\n};\n\nexport const Inputbox = (props) => {\n  const {\n    type,\n    placeholder,\n    onChange,\n    date_placeholder,\n    name,\n    defaultValue,\n    register,\n  } = props;\n\n  return (\n    <>\n      <input\n        className={styles.inputcontainer}\n        data-placeholder={date_placeholder}\n        type={type}\n        name={name}\n        onChange={onChange}\n        placeholder={placeholder}\n        defaultValue={defaultValue}\n        {...register}\n      />\n    </>\n  );\n};\n\nexport const InputAreabox = (props) => {\n  const type = props.type;\n  const placeholder = props.placeholder;\n  const onChange = props.onChange;\n  const date_placeholder = props.date_placeholder;\n  const name = props.name;\n  const defaultValue = props.defaultValue;\n  const value = props.value;\n  return (\n    <>\n      <textarea\n        className={styles.areacontainer}\n        data-placeholder={date_placeholder}\n        defaultValue={defaultValue}\n        type={type}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        {...props.register}\n      />\n    </>\n  );\n};\n\nexport const Searchbox = (props) => {\n  const type = props.type;\n  const placeholder = props.placeholder;\n  const onChange = props.onChange;\n  const date_placeholder = props.date_placeholder;\n  const name = props.name;\n\n  return (\n    <>\n      <input\n        className={styles.searchclient}\n        data-placeholder={date_placeholder}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        onChange={onChange}\n        {...props.register}\n      />\n    </>\n  );\n};\nexport const Inputbox_L = (props) => {\n  const type = props.type;\n  const placeholder = props.placeholder;\n  const onChange = props.onChange;\n  const date_placeholder = props.date_placeholder;\n  const name = props.name;\n  const defaultValue = props.defaultValue;\n\n  return (\n    <>\n      <input\n        className={styles.inputcontainer_L}\n        data-placeholder={date_placeholder}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        {...props.register}\n        onChange={onChange}\n        defaultValue={defaultValue}\n      />\n    </>\n  );\n};\n\nexport const Inputbox_M = (props) => {\n  const type = props.type;\n  const placeholder = props.placeholder;\n  const onChange = props.onChange;\n  const date_placeholder = props.date_placeholder;\n  const name = props.name;\n  const defaultValue = props.defaultValue;\n\n  return (\n    <>\n      <div className={styles.SearchFont}>{placeholder}</div>\n      <input\n        className={styles.inputcontainer_M}\n        data-placeholder={date_placeholder}\n        type={type}\n        name={name}\n        {...props.register}\n        onChange={onChange}\n        value={defaultValue}\n      />\n    </>\n  );\n};\n\nexport const LoginInputbox = (props) => {\n  const type = props.type;\n  const placeholder = props.placeholder;\n  const value = props.value;\n  const onChange = props.onChange;\n  const name = props.name;\n\n  return (\n    <>\n      <input\n        className={styles.logininputcontainer}\n        type={type}\n        name={name}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        {...props.register}\n      />\n    </>\n  );\n};\n\nexport const LongInputbox = (props) => {\n  const type = props.type;\n  const placeholder = props.placeholder;\n  return (\n    <>\n      <input\n        className={styles.Longinputcontainer}\n        type={type}\n        placeholder={placeholder}\n        {...props.register}\n      />\n    </>\n  );\n};\n\nexport const DropInputbox = (props) => {\n  const optionlist = props.list;\n  const handlechange = props.handlechange;\n  const defaultValue = props.defaultValue;\n  const placeholder = props.placeholder;\n  const value = props.value;\n  return (\n    <select\n      className={styles.Dropinputcontainer}\n      defaultValue={defaultValue}\n      {...props.register}\n    >\n      {optionlist.map((i, index) => {\n        return (\n          <option key={index} value={i.value}>\n            {i.item}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\nconst iconstyle = {\n  fontSize: \"3.4em\",\n  textAlign: \"center\",\n  color: \"#7152F3\",\n  paddingRight: \"10%\",\n  paddingLeft: \"7%\",\n};\n\nexport const FileInputbox = (props) => {\n  return (\n    <label className={styles.Fileinputcontainer} htmlFor={props.className}>\n      <input\n        type=\"file\"\n        id={props.className}\n        onChange={props.handleChange}\n        className={props.className}\n        name={props.name}\n      />\n      <p style={{ textAlign: \"center\", margin: 0 }}>\n        <IoMdCloudUpload style={iconstyle} />\n      </p>\n      {props.isupload ? (\n        <>\n          <p className={styles.successtext}>업로드완료</p>\n          <p className={styles.successfilename}>\n            {props.value.toString().slice(12)}\n          </p>\n        </>\n      ) : (\n        <>\n          <p className={styles.filetext}>\n            드래그 드랍 또는{\" \"}\n            <span className={styles.texthighlight}>업로드 할 파일</span>을\n            선택해주세요\n          </p>\n          <p className={styles.filetypetext}>파일형식 : PDF, PNG, JPEG</p>\n        </>\n      )}\n    </label>\n  );\n};\nexport const PostInputbox = (props) => {\n  const [postnumber, setPostnumber] = useState(\"우편번호\");\n  const [post, setPost] = useState(\"주소\");\n  const [postdetail, setPostdetail] = useState(\"주소상세\");\n  const placeholder = props.placeholder;\n\n  const getpost = () => {\n    new daum.Postcode({\n      oncomplete: function (data) {\n        setPostnumber(data.zonecode);\n        setPost(data.roadAddress);\n        setPostdetail(data.roadAddress + \",\");\n      },\n    }).open();\n  };\n\n  const handleChange = (e) => {\n    setPostdetail(e.target.value);\n  };\n\n  const postInput = () => {\n    return [postnumber, post];\n  };\n\n  return (\n    <>\n      <input\n        className={styles.postcontainer}\n        type=\"button\"\n        onClick={getpost}\n        defaultValue={postnumber}\n        placeholder=\"우편번호\"\n      />\n      <input\n        className={styles.postcontainer}\n        type=\"button\"\n        onClick={getpost}\n        defaultValue={post}\n        placeholder=\"주소\"\n      />\n      <input\n        className={styles.inputcontainer}\n        type=\"text\"\n        onChange={handleChange}\n        defaultValue={postdetail}\n        {...props.register}\n      />\n    </>\n  );\n};\n",
            "LoanBody.js": "// ChasuPreBody 컴포넌트\nimport { useState, useEffect } from \"react\";\nimport { fetchLoanInit } from '@/utils/api';\nimport { BsBagDash } from \"react-icons/bs\";\nimport { BsDatabase } from \"react-icons/bs\";\nimport { SearchButton, ModifyButton } from \"@/components/Button\";\nimport styles from \"@/styles/Inputmoney.module.scss\";\nimport Link from \"next/link\";\n\nconst LoanBody = ({ userId }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const fetchedData = await fetchLoanInit();\n      setData(fetchedData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div className={styles.ContentBody_L}>\n                  <div className={styles.ContentBodyTitle_L}>\n                  <div className={styles.CBTIcon}>\n                      <div className={styles.Icon}>\n                        <BsBagDash style={{ width: '100%', height: '100%' }} />\n                      </div>\n                    </div>\n                    <div className={styles.CBTText}>\n                      <div className={styles.CBTCha}>\n                        <div className={styles.CBTChaFont}>대출 / 자납</div>\n                      </div>\n                      <div className={styles.CBTDate}>\n                        <div className={styles.CBTDateFont}>대출일 : {loanData.loandate?new Date(loanData.loandate).toLocaleDateString('KR-GB'):\"대출정보 없음.\"} </div>\n                        <div className={styles.CBTDateFont}>자납일 : {loanData.loandate?new Date(loanData.selfdate).toLocaleDateString('KR-GB'):\"대출정보 없음.\"}</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className={styles.CBBottonBody}>\n                  <Link href = \"/inputmoney/loan\">\n                    <ModifyButton>\n                      <div className={styles.CBBottonFont}>대출수정</div>\n                    </ModifyButton>\n                  </Link>\n                  </div>\n                  <div className={styles.CBSum}>\n                  <div className={styles.CBMoneyImg}>\n                      <div className={styles.Icon2}>\n                        <BsDatabase style={{ width: '100%', height: '100%' }} />\n                      </div>\n                    </div>\n                    <div className={styles.CBSumText}>대출액</div>\n                    <div className={styles.CBSumNum}>{((loanData.price1 !== undefined ? loanData.price1 : 0) + (loanData.price2 !== undefined ? loanData.price2 : 0)).toLocaleString()} ₩</div>\n                  </div>\n                  <div className={styles.CBSum}>\n                  <div className={styles.CBMoneyImg}>\n                      <div className={styles.Icon2}>\n                        <BsDatabase style={{ width: '100%', height: '100%' }} />\n                      </div>\n                    </div>\n                    <div className={styles.CBSumText}>자납액</div>\n                    <div className={styles.CBSumNum}>{(loanData.selfprice !== undefined ? loanData.selfprice : 0).toLocaleString()} ₩</div>\n                  </div>\n                  <div className={styles.CBSum}>\n                  <div className={styles.CBMoneyImg}>\n                      <div className={styles.Icon2}>\n                        <BsDatabase style={{ width: '100%', height: '100%' }} />\n                      </div>\n                    </div>\n                    <div className={styles.CBSumText}>총액</div>\n                    <div className={styles.CBSumNum}>{((loanData.selfprice !== undefined ? loanData.selfprice : 0) + (loanData.price1 !== undefined ? loanData.price1 : 0) + (loanData.price2 !== undefined ? loanData.price2 : 0)).toLocaleString()} ₩</div>\n                  </div>\n                </div>\n            \n  );\n};\n\nexport default LoanBody;\n",
            "Mininav.js": "\"use client\";\n\nimport { FaRegUser } from \"react-icons/fa6\";\nimport { FaUser } from \"react-icons/fa6\";\nimport { MdOutlineBusinessCenter } from \"react-icons/md\";\nimport { MdBusinessCenter } from \"react-icons/md\";\nimport { RiMoneyDollarCircleFill } from \"react-icons/ri\";\nimport { RiMoneyDollarCircleLine } from \"react-icons/ri\";\nimport { IoDocumentTextOutline } from \"react-icons/io5\";\nimport { IoDocumentText } from \"react-icons/io5\";\n\nimport Link from \"next/link\";\nimport React from 'react'\nimport { usePathname } from \"next/navigation\";\n\nimport styles from \"../styles/Mininav.module.scss\";\n\nconst iconstyle = { fontSize: \"1.2em\", paddingRight: \"2%\", paddingLeft: \"1%\" };\n\nconst Mininav = () => {\n    const pathname = usePathname();\n    const splitpath = pathname.split('/');\n  \n    return(\n        <ul className={styles.listconatiner}>\n            <Link href={\"/search/userinfo/\"+splitpath[3]}>\n                <li className={splitpath[2] === \"userinfo\" ? styles.select : styles.nonselect}> \n                        {splitpath[2] === \"userinfo\" ? (<FaUser style={iconstyle} />) : (<FaRegUser style={iconstyle} />)}\n                        <span>고객 정보</span>\n                </li>\n            </Link>\n            <Link href={\"/search/payinfo/\"+splitpath[3]}>\n                <li className={splitpath[2] === \"payinfo\" ? styles.select : styles.nonselect}> \n                        {splitpath[2] === \"payinfo\" ? (<MdBusinessCenter style={iconstyle} />) : (<MdOutlineBusinessCenter style={iconstyle} />)}\n                        <span>납입금</span>\n                </li>\n            </Link>\n            <Link href={\"/search/leaninfo/\"+splitpath[3]}>\n                <li className={splitpath[2] === \"leaninfo\" ? styles.select : styles.nonselect}> \n                        {splitpath[2] === \"leaninfo\" ? (<RiMoneyDollarCircleFill style={iconstyle} />) : (<RiMoneyDollarCircleLine style={iconstyle} />)}\n                        <span>대출/자납</span>\n                </li>\n            </Link>\n            <Link href={\"/search/extinfo/\"+splitpath[3]}>\n                <li className={splitpath[2] === \"extinfo\" ? styles.select : styles.nonselect}> \n                        {splitpath[2] === \"extinfo\" ? (<IoDocumentText style={iconstyle} />) : (<IoDocumentTextOutline style={iconstyle} />)}\n                        <span>비고</span>\n                </li>\n            </Link>\n        </ul>\n    );\n}\n\n\n\nexport default Mininav;",
            "Nav.js": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { usePathname } from \"next/navigation\";\nimport {\n  AiFillAppstore,\n  AiOutlineAppstore,\n  AiOutlineDollar,\n  AiFillDollarCircle,\n} from \"react-icons/ai\";\nimport { HiOutlineUsers, HiUsers } from \"react-icons/hi2\";\nimport LOGO from \"@/img/logo.png\";\nimport styles from \"../styles/Nav.module.scss\";\n\nconst iconstyle = { fontSize: \"1.5em\", paddingRight: \"10%\", paddingLeft: \"7%\" };\n\nconst Nav = () => {\n  const pathname = usePathname();\n  const splitpath = pathname.split(\"/\");\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  return (\n    <div className={styles.container}>\n      <Link href=\"/dashboard\">\n        <Image src={LOGO} className={styles.logostyle} alt={\"logo\"} />\n      </Link>\n      <div className={styles.listContainer}>\n        <Link href=\"/dashboard\">\n          <div\n            className={\n              splitpath[1] === \"dashboard\" ? styles.select : styles.nonselect\n            }\n          >\n            <div className={styles.innerContainer}>\n              {splitpath[1] === \"dashboard\" ? (\n                <AiFillAppstore style={iconstyle} />\n              ) : (\n                <AiOutlineAppstore style={iconstyle} />\n              )}\n              <span className={styles.innertext}>대시보드</span>\n            </div>\n          </div>\n        </Link>\n        <div\n          className={styles.expandableContainer}\n          onMouseEnter={() => setMenuOpen(true)}\n          onMouseLeave={() => setMenuOpen(false)}\n        >\n          <div\n            className={\n              splitpath[1] === \"search\" ? styles.select : styles.nonselect\n            }\n          >\n            <div className={styles.innerContainer}>\n              {splitpath[1] === \"search\" ? (\n                <HiUsers style={iconstyle} />\n              ) : (\n                <HiOutlineUsers style={iconstyle} />\n              )}\n              <span className={styles.innertext}>회원 정보 검색</span>\n            </div>\n          </div>\n          <div className={styles.expandableMenu}>\n            <Link href=\"/search\">\n              <div className={styles.expandableMenuItem}>정계약</div>\n            </Link>\n            <Link href=\"/search/modify\">\n              <div className={styles.expandableMenuItem}>수정</div>\n            </Link>\n            <Link href=\"/search/cancel\">\n              <div className={styles.expandableMenuItem}>해지</div>\n            </Link>\n          </div>\n        </div>\n        <Link href=\"/create\">\n          <div\n            className={\n              splitpath[1] === \"create\" ? styles.select : styles.nonselect\n            }\n          >\n            <div className={styles.innerContainer}>\n              {splitpath[1] === \"create\" ? (\n                <HiUsers style={iconstyle} />\n              ) : (\n                <HiOutlineUsers style={iconstyle} />\n              )}\n              <span className={styles.innertext}>회원 정보 입력</span>\n            </div>\n          </div>\n        </Link>\n        <Link href=\"/createwithdraw\">\n          <div\n            className={\n              splitpath[1] === \"createwithdraw\"\n                ? styles.select\n                : styles.nonselect\n            }\n          >\n            <div className={styles.innerContainer}>\n              {splitpath[1] === \"createwithdraw\" ? (\n                <HiUsers style={iconstyle} />\n              ) : (\n                <HiOutlineUsers style={iconstyle} />\n              )}\n              <span className={styles.innertext}>해약 회원 입력</span>\n            </div>\n          </div>\n        </Link>\n        <div\n          className={styles.expandableContainer}\n          onMouseEnter={() => setMenuOpen(true)}\n          onMouseLeave={() => setMenuOpen(false)}\n        >\n          <div\n            className={\n              splitpath[1] === \"modify\" ? styles.select : styles.nonselect\n            }\n          >\n            <div className={styles.innerContainer}>\n              {splitpath[1] === \"modify\" ? (\n                <HiUsers style={iconstyle} />\n              ) : (\n                <HiOutlineUsers style={iconstyle} />\n              )}\n              <span className={styles.innertext}>회원 정보 수정</span>\n            </div>\n          </div>\n          <div className={styles.expandableMenu}>\n            <Link href=\"/modify\">\n              <div className={styles.expandableMenuItem}>정계약</div>\n            </Link>\n            <Link href=\"/modify/modify\">\n              <div className={styles.expandableMenuItem}>수정</div>\n            </Link>\n            <Link href=\"/modify/cancel\">\n              <div className={styles.expandableMenuItem}>해지</div>\n            </Link>\n          </div>\n        </div>\n\n        <Link href=\"/inputmoney\">\n          <div\n            className={\n              splitpath[1] === \"inputmoney\" ? styles.select : styles.nonselect\n            }\n          >\n            <div className={styles.innerContainer}>\n              {splitpath[1] === \"inputmoney\" ? (\n                <AiFillDollarCircle style={iconstyle} />\n              ) : (\n                <AiOutlineDollar style={iconstyle} />\n              )}\n              <span className={styles.innertext}>납입금 관리</span>\n            </div>\n          </div>\n        </Link>\n        <Link href=\"/control\">\n          <div\n            className={\n              splitpath[1] === \"control\" ? styles.select : styles.nonselect\n            }\n          >\n            <div className={styles.innerContainer}>\n              {splitpath[1] === \"control\" ? (\n                <AiFillDollarCircle style={iconstyle} />\n              ) : (\n                <AiOutlineDollar style={iconstyle} />\n              )}\n              <span className={styles.innertext}>차수 관리</span>\n            </div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Nav;\n",
            "Test.js": "import React from 'react'\nimport styles from \"../styles/Test.module.scss\";\n\nconst Test = () => {\n    return(\n        <>\n            <h1 className={styles.titlecolor}>test page</h1>\n        </>\n    )\n}\n\nexport default Test;",
            "Testpage.js": "import React from 'react'\n\nconst Testpage = () => {\n    return(\n        <>\n            <h1>etstse</h1>\n        </>\n    )\n}\n\n\nexport default Testpage;"
        }
    },
    "img": {
        "__files__": {
            "Bag.png": null,
            "BottonIcon.png": null,
            "calendar.png": null,
            "dash1.png": null,
            "dash2.png": null,
            "dash3.png": null,
            "dash4.png": null,
            "logo.png": null,
            "logo.svg": null,
            "money.png": null,
            "profile.png": null,
            "up.png": null,
            "User.png": null
        }
    },
    "styles": {
        "__files__": {
            "Button.module.scss": ".buttonstyle{\n    width: 108%;\n    background-color: #7152F3;\n    border: 0;\n    border-radius: 10px;\n    height: 56px;\n    margin-top: 3%;\n    color: #fff;\n}\n.downloadbuttonstyle{\n    width: 100px;\n    background-color: #7152F3;\n    border: 0;\n    border-radius: 10px;\n    height: 43px;\n    margin-top: 3%;\n    color: #fff;\n\n    span{\n        font-weight: 500;\n        font-size: 15px;\n        margin-right: 10px;\n    }\n}\n.searchbuttonstyle{\n    display: inline-flex;\n    width:133px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    margin-top:20px;\n    background: var(--Primary-500, #7152F3);\n}\n.checkstyle {\n    width: 18px;\n    height: 18px;\n    margin-top: 3%;\n}\n.buttonstyle_y{\n    display: flex;\n    width: 91px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n\n    box-shadow: none;\n\n    background: #7152F3;\n    color: #fff;\n}\n.buttonstyle_n{\n    display: flex;\n    width: 91px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    margin-left:880px;\n}\n.toggleButton {\n    padding: 8px 16px;\n    border: none;\n    color: var(--Dark-500, #16151C);\n    color: #333;\n    cursor: pointer;\n    outline: none;\n    transition: background-color 0.3s ease;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    width: 133px;\n    height: 50px;\n\n    &:hover {\n        color: var(--Dark-500, #16151C);\n    }\n\n    &.active {\n        background: var(--Primary-500, #7152F3);\n        color: #fff;\n    }\n}\n.BottonFont{\n    color: var(--White-500, #FFF);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.CgButton{\n    width: 24px;\n    height: 24px;\n}\n.BottonFont2{\n    color: var(--Dark-500, #16151C);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n    margin-left:30px;\n    margin-top:13px;\n}\n\n.modifybutton{\n    display: flex;\n    width:55px;\n    height: 28px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 5px;\n    background: #7152F3;\n    margin-right:10px;\n}\n\n.checkbutton{\n    display: flex;\n    width: 70px;\n    height: 36px;\n    border-radius: 5px;\nbackground: var(--Primary-500, #7152F3);\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}",
            "chasu.module.scss": ".Container{\n    width: 1131px;\n    height: 819px;\n    flex-shrink: 0;\n    display:flex;\n    flex-direction: column;\n}\n.Title{\n    box-sizing: border-box;\n    width: 1131px;\n    height: 88px;\n    flex-shrink: 0;\n    display:flex;\n    flex-direction: column;\n    padding-left:46px;\n    padding-top:35px;\n}\n.TitleFont1{\n    color: var(--Dark-500, #16151C);\n    /* Header-6 Bold */\n    font-family: Lexend;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 30px; /* 150% */\n}\n.TitleFont2{\n    color: var(--Gray-500, #A2A1A8);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n\n}\n.MainBody{\n    box-sizing: border-box;\n    width: 1131px;\n    height: 731px;\n    flex-shrink: 0;\n    display:flex;\n    flex-direction: column;\n    padding-left:40px;\n}\n.MainTop{\n    box-sizing: border-box;\n    width: 1131px;\n    height: 21px;\n    flex-shrink: 0;\n    padding-left:894px;\n}\n.MainTitleFont{\n    color: var(--Gray-500, #A2A1A8);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.MainTitle1{\n    width: 1100px;\n    height: 58px;\n    flex-shrink: 0;\n    display:flex;\n    border-bottom: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.MainTitle1_head{\n    display: flex;\n    width: 100px;\n    height:58px;\n    align-items: flex-start;\n    gap: 10px;\n    flex-shrink: 0;\n}\n.MainTitle1_body{\n    display: flex;\n    width: 80px;\n    height:58px;\n    align-items: flex-start;\n    gap: 10px;\n    flex-shrink: 0;\n}\n.MainTitle2{\n    padding-top:10px;\n    margin-bottom: 3px;\n    box-sizing: border-box;\n    height: 65px;\n    width: 1100px;\n    flex-shrink: 0;\n    display:flex;\n    border-bottom: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.MainTitle2_head{\n    display: flex;\n    width: 50px;\n    height:65px;\n    align-items: flex-start;\n    gap: 10px;\n    flex-shrink: 0;\n}\n.MainTitle2_body{\n    display: flex;\n    width: 80px;\n    height:65px;\n    align-items: flex-start;\n    gap: 10px;\n    flex-shrink: 0;\n}\n.ExcelContentsBody{\n    margin-bottom: 10px;\n    width: 1100px;\n    height: 44px;\n    flex-shrink: 0;\n    display:flex;\n    border-bottom: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    background: #D6C6C6;\n}\n.ExcelContent_Head{\n    box-sizing: border-box;\n    padding-top:10px;\n    width:50px;\n    height:44px;\n    align-items: flex-start;\n    gap: 10px;\n    flex-shrink: 0;\n}\n.ExcelContent_Body{\n    box-sizing: border-box;\n    padding-top:10px;\n    width:80px;\n    height:44px;\n    align-items: flex-start;\n    gap: 10px;\n    flex-shrink: 0;\n}\n.ExcelContentFont{\n    color: var(--Dark-500, #16151C);\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 24px; /* 150% */\n}\n.line{\n    width:1131px;\n    height: 1px;\n    flex-shrink: 0;\n    background: var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}",
            "chasupay.module.scss": ".Container{\n    width: 1131px;\n    height: 819px;\n    flex-shrink: 0;\n    display:flex;\n    flex-direction: column;\n}\n.Mainbody{\n    width: 1080px;\n    height: 922px;\n    flex-shrink: 0;\n    display:flex;\n    flex-direction: column;\n    margin-top:45px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.Category{\n    box-sizing: border-box;\n    width:1080px;\n    height:44px;\n    margin-top:15px;\n    padding-left:35px;\n    display:flex;\n    margin-bottom:10px;\n}\n.Categorybody{\n    margin-top:10px;\n    display: flex;\n    width: 142px;\n    height:24px;\n    gap: 10px;\n}\n.Buttonbody{\n    margin-top:5px;\n    display: flex;\n    width: 142px;\n    height:24px;\n    gap: 10px;\n}\n.ButtonFont{\n    color: var(--White-500, #FFF);\n\n    /* Caption Regular */\n    font-family: Lexend;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 18px; /* 150% */\n}\n.Line{\n    margin-left :20px;\n    width: 1040px;\n    height: 1px;\n    flex-shrink: 0;\n    background: var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.CategoryFont{\n    color: var(--Gray-500, #A2A1A8);\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.BodyFont{\n    color: var(--Dark-500, #16151C);\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 24px; /* 150% */\n}\n.Title{\n    box-sizing: border-box;\n    width: 1131px;\n    height: 88px;\n    flex-shrink: 0;\n    display:flex;\n    flex-direction: column;\n    padding-left:35px;\n    padding-top:35px;\n}\n.TitleFont1{\n    color: var(--Dark-500, #16151C);\n    /* Header-6 Bold */\n    font-family: Lexend;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 30px; /* 150% */\n}\n.TitleFont2{\n    color: var(--Gray-500, #A2A1A8);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n\n}",
            "Create.module.scss": ".content_container{\n    display: grid;\n\tgrid-template-columns: 1fr 1fr;\n    gap: 20px;\n    padding: 20px;\n    width: 70vw;\n    height: auto;\n    flex-shrink: 0;\n    margin-left:20px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.mainbody{\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    padding: 20px;\n    width: 70vw;\n    height: auto;\n    flex-shrink: 0;\n    margin-left:20px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.content_body{\n    width:70vw;\n    height: auto;\n    display:flex;\n}\n.content_body2{\n    display: block;\n    width: 35vw;\n    height: auto;\n    display: grid;\n\tgrid-template-columns: 2fr 4fr;\n}\n.content_body3{\n    width: 23vw;\n    height: auto;\n    display: grid;\n}\n.InputField{\n    width:25vw;\n    height:60px;\n    display:grid;\n    grid-template-columns: 1fr 1fr;\n    flex-direction: row;\n}\n.InputTextarea{\n    width: 30vw;\n}\n.InputFont{\n    font-size:14px;\n    padding-left:10px;\n    padding-top: 15px;\n    padding-bottom:10px;\n    color:#A1A2A8;\n}\n.Font {\n    margin-top: 5px;\n    color: dark;\n    font-family: Lexend;\n    font-size: 16px;\n    font-weight: 550;\n    line-height: 24px;\n}\n\n",
            "Dashboard.module.scss": ".Container{\n    width: 1079px;\n    height: 1424px;\n    flex-shrink: 0;\n    display: flex;\n    flex-direction: column;\n}\n.MainTitle{\n    width: 1079px;\n    height: 882px;\n    flex-shrink: 0;\n    display:flex;\n    margin-bottom:20px;\n}\n\n.Notice{\n    display: inline-flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n    width: 1080px;\n    height: 522px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.Date{\n    width: 414px;\n    height: 882px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.ContractBody{\n    width: 645px;\n    height: 882px;\n    flex-shrink: 0;\n    margin-right:20px;\n}\n.Contract{\n    width: 646px;\n    height: 154px;\n    flex-shrink: 0;\n    display:flex;\n    margin-bottom: 20px;\n}\n.ContractSum{\n    width: 313px;\n    height: 154px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    margin-right:20px;\n}\n.ContractValue{\n    width: 312px;\n    height: 70px;\n    flex-shrink: 0;\n    display:flex;\n}\n.ContractValue2{\n    width:313px;\n    height:50px;\n    flex-direction:0;\n    display:flex;\n    flex-direction: columns;\n}\n.ContractVal{\n    width: 313px;\n    height: 50px;\n    flex-shrink: 0;\n}\n.ContractVal1{\n    width: 233px;\n    height: 50px;\n    flex-shrink: 0;\n}\n\n.ContractVal2{\n    width: 70px;\n    height: 50px;\n    flex-shrink: 0;\n}\n.Percentage_G{\n    display: inline-flex;\n    height: 26px;\n    width:54px;\n    gap: 5px;\n    flex-shrink: 0;\n    border-radius: 5px;\n    background: rgba(48, 190, 130, 0.10);\n    margin-top:7px;\n}\n.ContractIcons{\n    display: flex;\n    width: 10px;\n    height: 10px;\n    padding: 20px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 5px;\n    background: rgba(113, 82, 243, 0.05);\n    margin-top:16px;\n    margin-left:16px;\n    margin-bottom: 10px;\n    margin-right:10px;\n}\n.UpImg{\n    width:12px;\n    height:12px;\n    flex-shrink: 0;\n    margin-left:5px;\n}\n.UpText{\n    color: var(--Color-Option-Color-Option-1, #30BE82);\n    /* Label Regular */\n    font-family: Lexend;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 24px; /* 145.455% */\n}\n.CalendarImg{\n    width:30px;\n    height:30px;\n    margin-top:9px;\n    margin-left:10px\n}\n.ContractImg{\n    width: 24px;\n    height: 24px;\n    flex-shrink: 0;\n}\n.ContractName{\n    color:#16151C;\n    /* Body-2 Regular */\n    font-family: Lexend;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 22px; /* 157.143% */\n    margin-top:27px;\n}\n.Client{\n    width: 646px;\n    height: 534px;\n    flex-shrink: 0;\n}\n\n.Value{\n    color: var(--Dark-500, #16151C);\n    /* Header-4 Bold */\n    font-family: Lexend;\n    font-size: 30px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 40px; /* 133.333% */\n    margin-left:16px;\n}\n.Bottominfo{\n    width: 313px;\n    height: 38px;\n    flex-shrink: 0;\n    border-radius: 0px 0px 10px 10px;\n    border-top: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.BottomDate{\n    color:#A2A1A8;\n    /* Caption Regular */\n    font-family: Lexend;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 18px; /* 150% */\n    margin-left:16px;\n    margin-top:7px;\n}\n\n// 위에는 4개 덩어리 scss\n\n.ClientBody{\n    width: 563.874px;\n    height: 534px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    display:flex;\n    flex-direction: column;\n}\n.ClientContents{\n    width: 547px;\n    height: 494px;\n    flex-shrink: 0;\n    padding-left:16px;\n}\n.ClientTitle{\n    width: 547px;\n    height: 59px;\n    flex-shrink: 0;\n    display:flex;\n}\n.ClientTitle1{\n    width: 461px;\n    height: 59px;\n    flex-shrink: 0;\n}\n.ClientTitle2{\n    width: 86px;\n    height: 59px;\n    flex-shrink: 0;\n    margin-right:14px;\n    margin-top:19px;\n}\n.InfoBotton{\n    width:72px;\n    height: 40px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.Bottonfont{\n    color:#16151C;\n    padding-top:9px;\n    padding-left:8px;\n    \n    /* Body-2 Regular */\n    font-family: Lexend;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 22px; /* 157.143% */\n}\n.ClientCategory{\n    width: 547px;\n    height: 38px;\n    flex-shrink: 0;\n    border-bottom: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    display: flex;\n    align-items: flex-start;\n    align-self: stretch;\n}\n.ClientValue{\n    width: 547px;\n    height: 54px;\n    flex-shrink: 0;\n    border-bottom: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    display: flex;\n    align-items: flex-start;\n    align-self: stretch;\n}\n.Valuefont{\n    color:#16151C;\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 24px; /* 150% */\n    padding-top:10px;\n}\n.Categoryfont{\n    color:#A2A1A8;\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 24px; /* 150% */\n}\n.Titlefont{\n    padding-top:24px;\n    color:#16151C;\n\n    /* Header-6 Bold */\n    font-family: Lexend;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 30px; /* 150% */\n}\n.Number{\n    display: flex;\n    width: 132px;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n    padding-top:10px;\n}\n.Name{\n    display: flex;\n    width: 142px;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n    padding-top:10px;\n}\n.Cha{\n    display: flex;\n    width: 142px;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n    padding-top:10px;\n}\n.Dong{\n    display: flex;\n    width: 102px;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n    padding-top:10px;\n}\n\n// 위에는 미납자 scss\n\n.DateTitle{\n    width: 414px;\n    height: 73px;\n    flex-shrink: 0;\n    display: flex;\n}\n.DateTitle1{\n    width:344px;\n    height:73px;\n    flex-shrink:0;\n}\n.DateTitleName{\n    padding-left:20px;\n    padding-top:30px;\n    color:#16151C;\n\n    /* Header-6 Bold */\n    font-family: Lexend;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 30px; /* 150% */\n}\n.DateTitle2{\n    width: 70px;\n    height: 73px;\n    flex-shrink: 0;\n    margin-top:20px;\n    display:flex;\n}\n.DateIcon{\n    display: flex;\n    width: 50px;\n    height: 50px;\n    border-radius: 10px;\n    background:rgba(113, 82, 243, 0.10);\n}\n.Calendar{\n    width: 414px;\n    height: 349px;\n    flex-shrink: 0;\n}\n.Line{\n    width: 374px;\n    height: 1px;\n    background: rgba(162, 161, 168, 0.10);\n}\n.Today{\n    width: 414px;\n    height: 100vh;\n    flex-shrink: 0;\n}\n.TodayTitle{\n    width: 414px;\n    height: 46px;\n    flex-shrink: 0;\n    display:flex;\n}\n.TodayTitle1{\n    width: 379px;\n    height: 46px;\n    flex-shrink: 0;\n}\n.TodayTitleName{\n    padding-top:20px;\n    padding-left:20px;\n    color:#16151C;\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 24px; /* 150% */\n}\n.TodayTitle2{\n    width: 35px;\n    height: 46px;\n    flex-shrink: 0;\n}\n\n\n// 아래부터 공지사항\n\n.NoticeTitle{\n    width: 1080px;\n    height: 80px;\n    flex-shrink: 0;\n    display:flex;\n}\n.NoticeTitle1{\n    width: 998px;\n    height: 80px;\n    flex-shrink: 0;\n}\n.NoticeName{\n    padding-top:25px;\n    padding-left:20px;\n    color:#16151C;\n    /* Header-6 Bold */\n    font-family: Lexend;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 30px; /* 150% */\n}\n.NoticeTitle2{\n    margin-top:20px;\n    width: 92px;\n    height: 80px;\n    flex-shrink: 0;\n}\n.NoticeCategory{\n    width:1040px;\n    height:44px;\n    padding-left:20px;\n    display:flex;\n    border-bottom: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n}\n.NoticeCategory1{\n    width:327px;\n    height:44px;\n}\n.NoticeCategory2{\n    width:257px;\n    height:44px;\n}\n.NoticeCategory3{\n    width:161px;\n    height:44px;\n}\n.NoticeCategory4{\n    width:191px;\n    height:44px;\n}\n.NoticeCategory5{\n    width:100px;\n    height:44px;\n}\n.NoticeCategoryFont{\n    padding-top:10px;\n    color:#A2A1A8;\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.NoticeContent{\n    padding-left:20px;\n    display: flex;\n    width: 1040px;\n    align-items: flex-start;\n    border-bottom: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n}\n.ContentFont{\n    padding-top:10px;\n    color: var(--Dark-500, #16151C);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.ContentState_G{\n    display: flex;\n    width: 66px;\n    height:24px;\n    padding: 3px 8px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 4px;\n    background: rgba(63, 194, 138, 0.10);\n}\n.G_Font{\n    color: #3FC28A;\n    /* Caption Regular */\n    font-family: Lexend;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 18px; /* 150% */\n}\n.ContentState_B{\n    display: flex;\n    width: 66px;\n    height:24px;\n    padding: 3px 8px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 4px;\n    background: rgba(244, 91, 105, 0.10);\n}\n.B_Font{\n    color: #F45B69;\n\n    /* Caption Regular */\n    font-family: Lexend;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 18px; /* 150% */\n}\n.NoticeBotton{\n    width:70px;\n    display: flex;\n    height: 40px;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid rgba(162, 161, 168, 0.20);\n}\n.NoticeBottonFont{\n    color: var(--Dark-500, #16151C);\n    font-family: Lexend;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 300;\n    padding-right:10px;\n}",
            "Header.module.scss": ".container {\n    float: left;\n    margin-top: 25px;\n}\n.rightcontainer {\n    width:300px;\n    float: right;\n    margin-right: 50px;\n    margin-top: 40px;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n}\n.title {\n    color: #16151C;\n    font-size: 20px;\n}\n\n.subtitle {\n    color: #A2A1A8;\n    font-size: 14px;\n    font-weight: 300;\n}\n\n.name {\n    margin-top: 7px;\n    margin-bottom: 0;\n    color: #16151C;\n    font-size: 16px;\n}\n\n.role {\n    margin: 5px;\n    color: #A2A1A8;\n    font-size: 12px;\n}\n.maincontainer{\n    width: 100vw;\n    height: 100px;\n}\n.usercontainer{\n    float: left;\n    width: 170px;\n    height: 60px;\n    background-color: #a2a1a800;\n    border-radius: 8px;\n    border: 1px solid rgba(162, 161, 168, 0.20);\n    padding-left:10px;\n\n}\n.image{\n    float: left;\n    border-radius: 10px;\n    margin: 5px;\n}\n.loginbody{\n    padding-top:8px;\n    width:150px;\n    height:60px;\n    justify-content: center;\n    align-items: center;\n}\n.logoutbutton{\n    display: flex;\n    margin-left:10px;\n    width:60px;\n    height: 20px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 5px;\n    border: 1px solid rgba(162, 161, 168, 0.20);\n    margin-right:10px;\n}\n.button{\n    display: flex;\n    width:65px;\n    height: 34px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 5px;\n    background: #ffffff;\n    border: 1px solid rgba(162, 161, 168, 0.20);\n    margin-right:10px;\n    margin-top:8px;\n}\n.Name{\n    padding-left:5px;\n    width:184px;\n    height:20px;\n}\n.loginfo{\n    width:184px;\n    height:20px;\n    display:flex;\n\n}\n.ButtonFont{\n    color: var(--White-500, #000000);\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 13px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}",
            "Inputbox.module.scss": ".areacontainer{\n    border-radius: 10px;\n    border: 1px solid rgba(162, 161, 168, 0.20);\n    display: flex;\n    height: 200px;   \n    width: 180%;\n    padding: 10px 20px 10px 16px;\n    float: left;\n}\n.SearchFont{\n    margin-top:13px;\n    margin-left:16px;\n    color: dark;\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.spancontainer {\n    border-radius: 10px;\n    border: 1px solid rgba(162, 161, 168, 0.20);\n    display: flex;\n    height: 30px;   \n    width: 1fr;\n\n    padding: 10px 20px 10px 16px;\n    line-height: 30px;\n    text-align: center;\n    font-size: 13px;\n}\n.searchclient{\n    display: flex;\n    width: 310px;\n    height:56px;\n    box-sizing: border-box;\n    padding: 16px;\n    flex-direction: column;\n    align-items: flex-start;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    gap: 10px;\n}\n.inputcontainer_L{\n    display: flex;\n    width:800px;\n    height:30px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    padding: 10px 20px 10px 16px;\n    float: left;\n}\n.inputcontainer_M{\n    display: flex;\n    width: 350px;\n    height:30px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    padding: 10px 20px 10px 16px;\n    float: left;\n    margin-right:10px;\n}\n\n\n.inputcontainer {\n    display: flex;\n    width: 25vw;\n    height:30px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    padding: 10px 20px 10px 16px;\n    float: left;\n    margin-right:10px;\n}\n.Dropinputcontainer {\n    border-radius: 10px;\n    border: 1px solid rgba(162, 161, 168, 0.20);\n    display: flex;\n    height: 50px;   \n    width: 10vw;\n    padding: 10px 20px 10px 16px;\n    margin-right: 10px;\n    float: left;\n}\n.postcontainer {\n    border-radius: 10px;\n    border: 1px solid rgba(162, 161, 168, 0.20);\n    display: flex;\n    height: 50px;   \n    width: 20vw;\n    padding: 10px 20px 10px 16px;\n    margin-right: 10px;\n    float: left;\n}\n\n.logininputcontainer {\n    border-radius: 10px;\n    border: 1px solid #7152F3;\n    display: flex;\n    height: 30px;   \n    width: 100%;\n    margin-top: 3%;\n    padding: 10px 20px 10px 16px;\n    float: left;\n}\n\n\n.Longinputcontainer {\n    border-radius: 10px;\n    border: 1px solid rgba(162, 161, 168, 0.20);\n    display: flex;\n    height: 30px;   \n    width: 100%;\n    padding: 10px 20px 10px 16px;\n    margin-right: 100px;\n    float: left;\n    grid-column: span 2;\n}\n\n\n\n.Fileinputcontainer{\n    grid-row: span 2;\n    width: 1fr;\n    height: 133px;\n    border: 1px dashed  #7152F3;\n    border-radius: 10px;\n}   \n\n.filetext{\n    text-align: center;\n    font-family: Lexend;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 22px; /* 157.143% */\n    color: #000;\n}\n\n.texthighlight{\n    color: #7152F3;\n}\n\n.successtext{\n    color: #7152F3;\n    font-weight: bold;\n    text-align: center;\n    padding-right: 10px;\n}\n\n\n.filetypetext{\n    font-family: Lexend;\n    font-size: 11px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 16px; /* 145.455% */\n    color: #A2A1A8;\n    text-align: center;\n\n}\n.checkboxContainer {\n    display: flex;\n    align-items: center;\n  }\n  \n  .checkbox {\n    margin-right: 8px;\n  }\n  \n  .checkboxLabel {\n    font-size: 1em;\n    color: #333;\n  }",
            "Inputclient.module.scss": "\n.Container{\n    width: 1079px;\n    height: 1424px;\n    flex-shrink: 0;\n    display: flex;\n    flex-direction: column;\n}\n.MainBody{\n    display: inline-flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n    width: 1080px;\n    height: 741px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.SearchBody{\n    width: 784px;\n    height: 59px;\n    flex-shrink: 0;\n    margin-bottom : 18px;\n    display:flex;\n}\n.SearchName{\n    display: flex;\n    width: 261px;\n    height: 25px;\n    padding: 13px 16px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n}\n.SelectType{\n    display: flex;\n    width: 152px;\n    height: 27px;\n    padding: 13px 20px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 10px;\n    flex-shrink: 0;\n    margin-top:23px;\n}\n.InfoBody{\n    width: 769px;\n    height: 793px;\n    flex-shrink: 0;\n}\n.InfoCategory{\n    width: 769px;\n    height: 46px;\n    flex-shrink: 0;\n    display:flex;\n}\n.InfoCategory1{\n    display: flex;\n    width: 132px;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n}\n.InfoCategory2{\n    display: flex;\n    width: 142px;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n}\n.InfoCategory3{\n    display: flex;\n    width: 142px;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n}\n.InfoCategory4{\n    display: flex;\n    width: 100px;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n}\n.InfoCategory5{\n    display: flex;\n    width: 125px;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n}\n.InfoCategory6{\n    display: flex;\n    padding: 10px 10px 10px 0px;\n    align-items: flex-start;\n    gap: 10px;\n\n}\n.InfoCategoryFont{\n    color: var(--Gray-500, #A2A1A8);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n\n\n",
            "Inputmoney.module.scss": ".Container{\n\n    width: 1080px;\n    height: 922px;\n    flex-shrink: 0;\n}\n.Mainbody{\n    margin-top:45px;\n    width: 1080px;\n    height: 922px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.SearchBody{\n    width: 1080px;\n    height: 98px;\n    flex-shrink: 0;\n    display:flex;\n}\n.SearchFont1{\n    color: var(--dark-dark-20, rgba(22, 21, 28, 0.20));\n    padding-left:16px;\n    padding-top: 13px;\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.SearchFont2{\n    color: #000;\n    padding-top: 13px;\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px;\n}\n.SearchNum{\n    display: flex;\n    width: 209px;\n    height:50px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    margin-top:20px;\n    margin-left:18px;\n    display:flex;\n}\n.SearchName{\n    display: flex;\n    width: 195px;\n    height:50px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    margin-top:20px;\n    margin-left:18px;\n    display:flex;\n}\n.SearchCha{\n    display: flex;\n    width: 199px;\n    height:50px;\n    display:flex;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    margin-top:20px;\n    margin-left:18px;\n}\n.SearchType{\n    display: flex;\n    width: 159px;\n    height:50px;\n    display:flex;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    margin-top:20px;\n    margin-left:18px;\n}\n.Botton{\n    display: inline-flex;\n    width:133px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    margin-top:20px;\n    margin-left:56px;\n    background: var(--Primary-500, #7152F3);\n}\n.BottonIcon{\n    width: 24px;\n    height: 24px;\n}\n.BottonFont{\n    color: var(--White-500, #FFF);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.MainContent{\n    width: 1080px;\n    height: 822px;\n    flex-shrink: 0;\n    display:flex;\n}\n\n.Content{\n    width: 333px;\n    height: 100vh;\n    flex-shrink: 0;\n    margin-left:20px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n\n.ContentTitleIcon_Y{\n    width: 10px;\n    height: 10px;\n    background-color: #EFBE12;\n    margin-right:8px;\n    border-radius:20px;\n    margin-top:6px;\n}\n.ContentTitleIcon_G{\n    width: 10px;\n    height: 10px;\n    background-color: #3FC28A;\n    margin-right:8px;\n    border-radius:20px;\n    margin-top:6px;\n}\n.ContentTitleIcon_R{\n    width: 10px;\n    height: 10px;\n    background-color: #F45B69;\n    margin-right:8px;\n    border-radius:20px;\n    margin-top:6px;\n}\n.ContentTitle{\n    width: 301px;\n    height: 22px;\n    flex-shrink: 0;\n    margin-bottom:16px;\n    margin-left:20px;\n    margin-top:20px;\n    display:flex;\n}\n.ContentTitleFont{\n    color: var(--Dark-500, #16151C);\n\n    /* Body-2 Bold */\n    font-family: Lexend;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 22px; /* 157.143% */\n}\n.ContentBody{\n    width: 301px;\n    height: 170px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--gray-gray-5, rgba(162, 161, 168, 0.05));\n    margin-bottom:16px;\n    margin-left:20px;\n}\n.ContentPreBody{\n    width: 301px;\n    height: 260px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--gray-gray-5, rgba(162, 161, 168, 0.05));\n    margin-bottom:16px;\n    margin-left:20px;\n}\n.ContentFinBody{\n    width: 301px;\n    height: 215px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--gray-gray-5, rgba(162, 161, 168, 0.05));\n    margin-bottom:16px;\n    margin-left:20px;\n}\n.ContentBody_L{\n    width: 301px;\n    height: 270px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--gray-gray-5, rgba(162, 161, 168, 0.05));\n    margin-bottom:16px;\n    margin-left:20px;\n}\n.ContentBodyTitle{\n    width:301px;\n    height:44px;\n    flex-shrink: 0;\n    padding-top:16px;\n    display:flex;\n}\n.ContentBodyTitle_L{\n    width:301px;\n    height:60px;\n    flex-shrink: 0;\n    padding-top:16px;\n    display:flex;\n}\n.CBTIcon{\n    width: 45px;\n    height: 45px;\n    flex-shrink: 0;\n    border-radius: 5px;\n    background: var(--gray-gray-5, rgba(162, 161, 168, 0.05));\n    margin-left:16px;\n    margin-right:12px;\n}\n.Icon{\n    margin-top:10px;\n    margin-left:10px;\n    width:24px;\n    height:24px;\n}\n.Icon2{\n    width:24px;\n    height:24px;\n}\n.CBTCha{\n    width:174px;\n    height:24px;\n}\n.CBTChaFont{\n    color: var(--Dark-500, #16151C);\n\n    /* Body-1 Bold */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 150% */\n}\n.CBTText{\n    width:174px;\n    height:48px;\n    display:flex;\n    flex-direction: column;\n}\n.CBTDate{\n    width:174px;\n    height:24px;\n}\n.CBTDateFont{\n    color: var(--Gray-500, #A2A1A8);\n\n    /* Body-2 Regular */\n    font-family: Lexend;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 22px; /* 157.143% */\n}\n.CBBottonBody{\n    height:34px;\n    width:301px;\n    margin-top:16px;\n    padding-left:16px;\n    display: flex;\n}\n.CBBotton{\n    display: flex;\n    width:65px;\n    height: 34px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 5px;\n    background: var(--Primary-500, #7152F3);\n    margin-right:10px;\n}\n.CBBottonFont{\n    color:#FFF;\n\n    /* Caption Regular */\n    font-family: Lexend;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 18px; /* 150% */\n}\n.CBSum{\n    height:24px;\n    width:301px;\n    margin-top:20px;\n    display:flex;\n}\n.CBMoneyImg{\n    width: 24px;\n    height: 24px;\n    flex-shrink: 0;\n    margin-left:16px;\n}\n.CBSumText{\n    color: var(--Dark-500, #16151C);\n\n    /* Body-2 Regular */\n    font-family: Lexend;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 26px; /* 157.143% */\n    margin-left:5px;\n}\n.CBSumNum{\n    color: var(--Dark-500, #16151C);\n    text-align: right;\n    \n    /* Header-7 Bold */\n    font-family: Lexend;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 26px; /* 144.444% */\n    margin-left:50px;\n}",
            "Inputmoneycancle.module.scss": ".Container{\n    width: 1080px;\n    height: 922px;\n    flex-shrink: 0;\n}\n.Mainbody{\n    margin-top:45px;\n    width: 1080px;\n    height: 922px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.MainTitle{\n    width: 1080px;\n    height: 105px;\n    flex-shrink: 0;\n    display:flex;\n}\n.MainTitle1{\n    width: 884px;\n    height: 105px;\n    flex-shrink: 0;\n}\n.MainTitle2{\n    width: 196px;\n    height: 105px;\n    flex-shrink: 0;\n}\n.SearchClientNum{\n    margin-top:20px;\n    margin-left:20px;\n    display: flex;\n    width: 330px;\n    height:50px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    display:flex;\n}\n.SearchFont1{\n    margin-top:13px;\n    margin-left:16px;\n    color: var(--dark-dark-20, rgba(22, 21, 28, 0.20));\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.SearchFont2{\n    margin-top:13px;\n    color: #000;\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px;\n}\n.BackgroundBotton{\n    width: 266px;\n    height: 50px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--gray-gray-5, rgba(162, 161, 168, 0.05));\n    display:flex;\n}\n.InnerBotton{\n    display: inline-flex;\n    width:133px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--Primary-500, #7152F3);\n    margin-right:19px;\n}\n.Botton_Y{\n    display: flex;\n    width: 91px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n    background: var(--Primary-500, #7152F3);\n    margin-left:20px;\n}\n.Botton_N{\n    display: flex;\n    width: 91px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    margin-left:880px;\n}\n.Botton{\n    display: inline-flex;\n    width:133px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    margin-top:20px;\n    background: var(--Primary-500, #7152F3);\n}\n.BottonIcon{\n    width: 24px;\n    height: 24px;\n}\n.BottonFont{\n    color: var(--White-500, #FFF);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.BackgroundBottonFont{\n    color: var(--Dark-500, #16151C);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n    margin-left:30px;\n    margin-top:13px;\n}\n.InputBody{\n    width: 1080px;\n    height: 741px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.InputBodyTitle{\n    width: 1080px;\n    height: 53px;\n    flex-shrink: 0;\n    display:flex;\n}\n.IBTIcon{\n    display: flex;\n    width: 24px;\n    height: 24px;\n    justify-content: center;\n    align-items: center;\n    margin-left:20px;\n    margin-top:20px;\n    margin-right:10px;\n}\n.Icon{\n    width:24px;\n    height:24px;\n}\n.IBTText{\n    color: var(--Primary-500, #7152F3);\n    margin-top:20px;\n    /* Body-1 Bold */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 150% */\n}\n.Line{\n    margin-left :20px;\n    width: 1040px;\n    height: 1px;\n    flex-shrink: 0;\n    background: var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.IBBottonLayer{\n    margin-top:30px;\n    margin-left:20px;\n    display:flex;\n    width:1040px;\n    height:56px;\n}\n.IBLayer{\n    margin-top:20px;\n    margin-left:20px;\n    display:flex;\n    width:1040px;\n    height:56px;\n}\n.IBInputBox_L{\n    display: flex;\n    width:1040px;\n    height:54px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.IBInputBox_S{\n    display: flex;\n    width:510px;\n    height:54px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    margin-right:20px;\n}\n",
            "Inputmoneyloan.module.scss": ".Container{\n\n    width: 1080px;\n    height: 922px;\n    flex-shrink: 0;\n}\n.Mainbody{\n    margin-top:45px;\n    width: 1080px;\n    height: 922px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.MainTitle{\n    width: 1080px;\n    height: 105px;\n    flex-shrink: 0;\n    display:flex;\n}\n.MainTitle1{\n    width: 884px;\n    height: 105px;\n    flex-shrink: 0;\n}\n.MainTitle2{\n    width: 196px;\n    height: 105px;\n    flex-shrink: 0;\n}\n.SearchClientNum{\n    margin-top:20px;\n    margin-left:20px;\n    display: flex;\n    width: 330px;\n    height:50px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    display:flex;\n}\n.SearchFont1{\n    margin-top:13px;\n    margin-left:16px;\n    color: var(--dark-dark-20, rgba(22, 21, 28, 0.20));\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.SearchFont2{\n    margin-top:13px;\n    color: #000;\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px;\n}\n.BackgroundBotton{\n    width: 266px;\n    height: 50px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--gray-gray-5, rgba(162, 161, 168, 0.05));\n    display:flex;\n}\n.InnerBotton{\n    display: inline-flex;\n    width:133px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--Primary-500, #7152F3);\n    margin-right:19px;\n}\n.Botton_Y{\n    display: flex;\n    width: 91px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n    background: var(--Primary-500, #7152F3);\n    margin-left:20px;\n}\n.Botton_N{\n    display: flex;\n    width: 91px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    margin-left:880px;\n}\n.Botton{\n    display: inline-flex;\n    width:133px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    margin-top:20px;\n    background: var(--Primary-500, #7152F3);\n}\n.BottonIcon{\n    width: 24px;\n    height: 24px;\n}\n.BottonFont{\n    color: var(--White-500, #FFF);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.BackgroundBottonFont{\n    color: var(--Dark-500, #16151C);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n    margin-left:30px;\n    margin-top:13px;\n}\n.InputBody{\n    width: 1080px;\n    height: 817px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.InputBodyTitle{\n    width: 1080px;\n    height: 53px;\n    flex-shrink: 0;\n    display:flex;\n}\n.IBTIcon{\n    display: flex;\n    width: 24px;\n    height: 24px;\n    justify-content: center;\n    align-items: center;\n    margin-left:20px;\n    margin-top:20px;\n    margin-right:10px;\n}\n.Icon{\n    width:24px;\n    height:24px;\n}\n.IBTText{\n    color: var(--Primary-500, #7152F3);\n    margin-top:20px;\n    /* Body-1 Bold */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 150% */\n}\n.Line{\n    margin-left :20px;\n    width: 1040px;\n    height: 1px;\n    flex-shrink: 0;\n    background: var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.IBBottonLayer{\n    margin-top:30px;\n    margin-left:20px;\n    display:flex;\n    width:1040px;\n    height:56px;\n}\n.IBLayer{\n    margin-top:20px;\n    margin-left:20px;\n    display:flex;\n    width:1040px;\n    height:56px;\n}\n.IBInputBox_L{\n    display: flex;\n    width:1040px;\n    height:54px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.IBTText2{\n    display: flex;\n    width: 56px;\n    height: 56px;\n    margin-left:20px;\n    margin-right:8px;\n}\n.IBTText2Font{\n    margin-top:13px;\n    color: var(--Dark-500, #16151C);\n    text-align: center;\n    /* Body-1 Bold */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 150% */\n}\n.IBInputBox_M{\n    display: flex;\n    width:974px;\n    height:54px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.IBInputBox_S{\n    display: flex;\n    width:510px;\n    height:54px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    margin-right:20px;\n}\n",
            "Inputmoneypay.module.scss": ".Container{\n    width: 1080px;\n    height: 922px;\n    flex-shrink: 0;\n}\n.Mainbody{\n    margin-top:45px;\n    width: 1080px;\n    height: 922px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.MainTitle{\n    width: 1080px;\n    height: 105px;\n    flex-shrink: 0;\n    display:flex;\n}\n.MainTitle1{\n    width: 884px;\n    height: 105px;\n    flex-shrink: 0;\n    display:flex;\n}\n.MainTitle2{\n    width: 196px;\n    height: 105px;\n    flex-shrink: 0;\n}\n.SearchClientNum{\n    margin-top:20px;\n    margin-left:20px;\n    display: flex;\n    width: 330px;\n    height:50px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-10, rgba(162, 161, 168, 0.10));\n    display:flex;\n}\n.SearchFont{\n    margin-top:13px;\n    margin-left:16px;\n    color: dark;\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.SearchFont1{\n    margin-top:13px;\n    margin-left:16px;\n    color: var(--dark-dark-20, rgba(22, 21, 28, 0.20));\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.SearchFont2{\n    margin-top:13px;\n    color: #000;\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px;\n}\n.BackgroundBotton{\n    width: 266px;\n    height: 50px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--gray-gray-5, rgba(162, 161, 168, 0.05));\n    display:flex;\n}\n.InnerBotton{\n    display: inline-flex;\n    width:133px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    background: var(--Primary-500, #7152F3);\n    margin-right:19px;\n}\n.Botton_Y{\n    display: flex;\n    width: 91px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n    background: var(--Primary-500, #7152F3);\n    margin-left:20px;\n}\n.Botton_N{\n    display: flex;\n    width: 91px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    margin-left:880px;\n}\n.Botton{\n    display: inline-flex;\n    width:133px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 10px;\n    margin-top:20px;\n    background: var(--Primary-500, #7152F3);\n}\n\n.BottonIcon{\n    width: 24px;\n    height: 24px;\n}\n.BottonFont{\n    color: var(--White-500, #FFF);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.BottonFont2{\n    color: var(--White-500, #000000);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n}\n.BackgroundBottonFont{\n    color: var(--Dark-500, #16151C);\n\n    /* Body-1 Regular */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n    margin-left:30px;\n    margin-top:13px;\n}\n.InputBody{\n    width: 1080px;\n    height: 741px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.InputBodyTitle{\n    width: 1080px;\n    height: 53px;\n    flex-shrink: 0;\n    display:flex;\n}\n.IBTIcon{\n    display: flex;\n    width: 24px;\n    height: 24px;\n    justify-content: center;\n    align-items: center;\n    margin-left:20px;\n    margin-top:20px;\n    margin-right:10px;\n}\n.Icon{\n    width:24px;\n    height:24px;\n}\n.IBTText{\n    color: var(--Primary-500, #7152F3);\n    margin-top:20px;\n    /* Body-1 Bold */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 150% */\n}\n.Line{\n    margin-left :20px;\n    width: 1040px;\n    height: 1px;\n    flex-shrink: 0;\n    background: var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.IBBottonLayer{\n    margin-top:30px;\n    margin-left:20px;\n    display:flex;\n    width:1040px;\n    height:56px;\n}\n.IBLayer{\n    display: grid;\n    grid-template-columns: 3fr 4fr 3fr 4fr;\n    margin-top:20px;\n    margin-left:20px;\n    width:1040px;\n    height:56px;\n    gap: 15px;\n}\n.SIBLayer{\n    display: grid;\n    grid-template-columns: 1fr 1fr 3fr 1fr;\n    margin-top:20px;\n    margin-left:20px;\n    width:1040px;\n    height:56px;\n}\n.IBInputBox_L{\n    display: flex;\n    width:1040px;\n    height:54px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n.IBInputBox_S{\n    display: flex;\n    width:510px;\n    height:54px;\n    gap: 10px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n    margin-right:20px;\n}\n",
            "Inputmoneysearch.module.scss": ".MainContainer {\n  width: 383px;\n  height: 100vh;\n}\n.SelectContainer {\n  margin-left: 300px;\n  margin-top: 40px;\n  width: 450px;\n  height: 554px;\n  border-radius: 20px;\n  background: var(--White-500, #fff);\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  /* 스크롤이 나타날 때 스크롤 바의 스타일 설정 (선택 사항) */\n  scrollbar-width: thin; /* 스크롤바의 너비 설정 */\n  scrollbar-color: rgba(0, 0, 0, 0.5) transparent; /* 스크롤바의 색상 설정 */\n}\n.Line {\n  width: 343px;\n  height: 1px;\n  flex-shrink: 0;\n  background: var(--gray-gray-20, rgba(162, 161, 168, 0.2));\n}\n\n.SelectTitleBody {\n  box-sizing: border-box;\n  width: 383px;\n  height: 66px;\n  padding-top: 20px;\n  padding-left: 20px;\n}\n.SelectTitle {\n  width: 80px;\n  height: 30px;\n  margin-bottom: 10px;\n}\n.SelectTitleFont {\n  color: var(--Dark-500, #16151c);\n  /* Header-6 Bold */\n  font-family: Lexend;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 30px; /* 150% */\n}\n\n.Search {\n  width: 343px;\n  height: 56px;\n  display: flex;\n}\n.SearchBody {\n  display: flex;\n  width: 310px;\n  height: 56px;\n  display: flex;\n  align-items: flex-start;\n  gap: 10px;\n}\n.SearchIcon {\n  box-sizing: border-box;\n  padding-top: 16px;\n  padding-left: 5px;\n  width: 40px;\n  height: 56px;\n}\n\n.CategoryBody {\n  width: 343px;\n  height: 44px;\n  display: flex;\n}\n.CategoryBody1 {\n  box-sizing: border-box;\n  width: 114px;\n  height: 44px;\n  padding-top: 10px;\n}\n.CategoryFont {\n  color: var(--Gray-500, #a2a1a8);\n  font-family: Lexend;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 300;\n  line-height: 24px; /* 171.429% */\n}\n.CategoryContent {\n  height: 44px;\n  width: 343px;\n  display: flex;\n  margin-top: 10px;\n}\n.ContentFont {\n  color: var(--Dark-500, #16151c);\n  font-family: Lexend;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px; /* 171.429% */\n}\n",
            "Leaninfo.module.scss": ".container {\n    display: grid;\n    width: 20vw;\n    margin: 20px 0px;\n    grid-template-columns: 1fr 2fr;\n    gap: 10px;\n    row-gap: 20px;\n}\n\n.title {\n    font-size: 14px;\n    color: #A2A1A8;\n}\n\n.titlecontainer{\n    margin-bottom: 30px;\n}",
            "Login.module.scss": ".container {\n    display: flex;\n    // justify-content: center;\n    // align-items: center;\n  }\n\n.childcontainer{\n    margin-top: 100px;\n    margin-left:300px;\n    width: 460px;\n}\n\n.checkcontainer{\n    width: 520px;\n}\n\n.remembertext{\n    margin-right: 43%;\n}\n\n.forgottext{\n    color: #7152F3;\n}",
            "Mininav.module.scss": ".listconatiner{\n    color: #000;\n    height: 50px;\n}\n.select{\n    float: left;\n    \n    width: 100px;\n\n    color: #7152F3;\n    /* Body-1 Bold */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 24px; /* 150% */\n\n    border-bottom: 4px solid #7152F3;\n    border-radius: 4px;\n\n}\n.nonselect{\n    float: left;\n\n    width: 100px;\n\n    color: #16151C;\n    /* Body-1 Bold */\n    font-family: Lexend;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: 24px; /* 150% */\n    \n\n}\n\n.listconatiner span {\n    \n    text-align: center;\n\n}",
            "Nav.module.scss": ".container {\n  background-color: rgba(162, 161, 168, 0.01);\n  width: 280px;\n  height: auto;\n  float: left;\n}\n\n.logostyle {\n  margin-top: 39px;\n  margin-left: 30px;\n}\n\n.listContainer {\n  margin-top: 30px;\n  margin-left: 30px;\n}\n\n.select {\n  position: relative;\n  background: rgba(113, 82, 243, 0.05);\n  color: #7152f3;\n  font-family: Lexend;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 24px;\n  text-align: left;\n  margin: 5px 0;\n  width: 220px;\n  height: 50px;\n  border-radius: 0px 10px 10px 0px;\n  flex-shrink: 0;\n  border-left: 4px solid #7152f3;\n  transition: all 0.3s ease;\n}\n\n.innerContainer {\n  padding-top: 5.5%;\n  position: relative;\n}\n\n.innertext {\n  position: absolute;\n  padding-top: 2px;\n}\n\n.nonselect {\n  color: #16151c;\n  font-family: Lexend;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 24px;\n  margin: 5px 0;\n  text-align: left;\n  padding-left: 4px;\n  width: 220px;\n  height: 50px;\n  border-radius: 0px 10px 10px 0px;\n  flex-shrink: 0;\n  transition: all 0.3s ease;\n}\n\n.nonselect:hover {\n  background-color: rgba(113, 82, 243, 0.1);\n  color: #7152f3;\n}\n\n.expandableContainer {\n  margin: 5px 0;\n  transition: margin-bottom 0.5s ease-in-out;\n}\n\n.expandableContainer:hover {\n  margin-bottom: 0px;\n}\n\n.expandableMenu {\n  overflow: hidden;\n  max-height: 0;\n  transition: max-height 0.5s ease-in-out;\n}\n\n.expandableContainer:hover .expandableMenu {\n  max-height: 150px;\n}\n\n.expandableMenuItem {\n  padding-left: 15%;\n  font-family: Lexend;\n  font-size: 14px;\n  font-weight: 300;\n  color: #16151c;\n  line-height: 24px;\n  cursor: pointer;\n}\n\n.expandableMenuItem:hover {\n  background-color: rgba(113, 82, 243, 0.1);\n  color: #7152f3;\n  transition: all 0.3s ease;\n}\n",
            "Payinfo.module.scss": ".container {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n    row-gap: 10px;\n}\n\n.title {\n    font-size: 14px;\n    color: #A2A1A8;\n}",
            "Search.module.scss": ".container {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 20px;\n  width: 10vw;\n}\n.tablecontainer {\n  margin: 30px;\n  display: flex;\n  width: 900px;\n}\n.tablecontainer span {\n  cursor: pointer; /* 기본적으로 포인터 커서 설정 */\n}\n\n.tablecontainer span:hover {\n  cursor: pointer; /* 호버 시 포인터 커서 설정 */\n}\n\n.flexContainer {\n  width: 1100px;\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 10px;\n}\n\n.rowContainer {\n  width: 900px;\n  display: flex;\n}\n.unitContainer {\n  width: 125px;\n  height: 20px;\n  margin-right: 20px;\n  margin-top: 7px;\n}\n\n.tablecontainer span {\n  font-size: 14px;\n  color: #a2a1a8;\n}\n\n.maincontainer {\n  margin: 30px;\n  display: flex;\n  gap: 20px;\n  width: 900px;\n  font-size: 14px;\n  text-decoration: none;\n  color: #000;\n}\n\n.linkbutton {\n  width: 10px;\n}\n.CBBottonFont {\n  color: #fff;\n  /* Caption Regular */\n  font-family: Lexend;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 300;\n  line-height: 18px; /* 150% */\n}\n",
            "Signup.module.scss": "/* 'Signup.module.scss' */\n\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f5f5;\n}\n\n.childcontainer {\n  background-color: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  width: 400px;\n}\n\n.title {\n  font-size: 2rem;\n  margin-bottom: 1rem;\n  color: #333;\n}\n\n.form {\n  display: flex;\n  flex-direction: column;\n}\n\n.input {\n  margin-bottom: 1rem;\n  padding: 0.8rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n\n.button {\n  padding: 0.8rem;\n  border: none;\n  border-radius: 4px;\n  background-color: #007bff;\n  color: white;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.button:hover {\n  background-color: #0056b3;\n}\n\n.remembertext,\n.forgottext {\n  display: block;\n  margin-top: 0.5rem;\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.checkcontainer {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n}\n\n.checkcontainer span {\n  margin-left: 0.5rem;\n}\n",
            "Test.module.scss": ".titlecolor {\n    color: red;\n}",
            "Userinfo.module.scss": ".container {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    gap: 10px;\n    row-gap: 20px;\n}\n.content_container{\n    display: grid;\n\tgrid-template-columns: 1fr 1fr;\n    gap: 20px;\n    padding: 20px;\n    width: 70vw;\n    height: auto;\n    flex-shrink: 0;\n    margin-left:20px;\n    border-radius: 10px;\n    border: 1px solid var(--gray-gray-20, rgba(162, 161, 168, 0.20));\n}\n\n.rowcontainer{\n    width:1370px;\n    height:110px;\n    margin-top:30px;\n    margin-left:15px;\n    margin-bottom:15px;\n    display:flex;\n}\n.unitbody{\n    width:200px;\n    height:80px;\n    margin-right:15px;\n}\n.titlebody{\n    width:200px;\n    height:20px;\n    margin-bottom:10px;\n}\n.contentbody{\n    width:200px;\n    height:60px;\n}\n\n.postunitbody{\n    width:400px;\n    height:80px;\n    margin-right:15px;\n}\n.posttitlebody{\n    width:400px;\n    height:20px;\n    margin-bottom:10px;\n}\n.postcontentbody{\n    width:400px;\n    height:60px;\n}\n\n.title {\n    font-size: 14px;\n    color: #A2A1A8;\n}\n\n.file_container{\n    width:900px;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    gap: 10px;\n    row-gap: 20px;\n}\n\n.linkbutton {\n    width: 10vw;\n}"
        }
    },
    "utils": {
        "__files__": {
            "api.js": "import axios from \"axios\";\nconst path = \"http://localhost:8000\";\n// JUN SEO OH 개발 환경에서 사용하는 path 입니다. git 시 필수로 주석처리.\\\n\nexport const newIdGenerate = () => {\n  return axios\n    .get(path + \"/api/generateid\")\n    .then((result) => {\n      return result.data.nextid;\n    })\n    .catch((error) => {\n      console.error(error);\n      throw error;\n    });\n};\n\nexport const createFile = (files) => {\n  console.log(\"업로드 파일 : \", files);\n  const formData = new FormData();\n  files.forEach((data) => {\n    formData.append(\"file\", data);\n  });\n\n  return axios.post(path + \"/api/upload\", formData, {\n    headers: { \"Content-Type\": \"multipart/form-data\", charset: \"utf-8\" },\n  });\n};\n\nexport const downloadFile = async (id, filename) => {\n  try {\n    const response = await axios.post(\n      path + \"/api/download\",\n      { id, filename },\n      {\n        responseType: \"blob\",\n      }\n    );\n\n    // 파일 다운로드\n    const name = response.headers[\"content-disposition\"]\n      .split(\"filename=\")[1]\n      .replace(/\"/g, \"\");\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", name);\n    link.style.cssText = \"display:none\";\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  } catch (error) {\n    console.error(\"Error downloading file:\", error);\n    // 오류 처리\n  }\n};\n\nexport const createUser = (data) => {\n  return axios.post(path + \"/api/createuser\", data);\n};\n\nexport const updateUserinfo = (userid, data) => {\n  if (data.fileinfo && data.fileinfo._id) {\n    delete data.fileinfo._id;\n  }\n  return axios\n    .put(path + \"/api/userinfo/\" + userid, data)\n    .then((result) => {\n      return result.data;\n    })\n    .catch((error) => {\n      console.error(error);\n      throw error;\n    });\n};\n\nexport const fetchLogin = (username, password) => {\n  return axios.post(path + \"/api/auth/signin\", {\n    username,\n    password,\n  });\n};\n\nexport const fetchSignup = (username, email, password, roles) => {\n  return axios.post(path + \"/api/auth/signup\", {\n    username,\n    email,\n    password,\n    roles,\n  });\n};\n\nexport const fetchUserinfo = (userid) => {\n  return axios\n    .get(path + \"/api/userinfo/\" + userid)\n    .then((result) => {\n      return result.data[0];\n    })\n    .catch((error) => {\n      console.error(error);\n      throw error;\n    });\n};\n\nexport const searchFinchasu = (userid) => {\n  return axios\n    .get(path + \"/api/chasuinit/fin/\" + userid)\n    .then((result) => {\n      return result.data;\n    })\n    .catch((error) => {\n      console.error(error);\n      throw error;\n    });\n};\n\nexport const searchPrechasu = (userid) => {\n  return axios\n    .get(path + \"/api/chasuinit/pre/\" + userid)\n    .then((result) => {\n      return result.data;\n    })\n    .catch((error) => {\n      console.error(error);\n      throw error;\n    });\n};\n\nexport const fetchNameSearch = (username) => {\n  return axios\n    .get(path + \"/api/searchname/\" + username)\n    .then((result) => {\n      return result.data;\n    })\n    .catch((error) => {\n      console.log(error);\n      throw error;\n    });\n};\n\nexport const fetchNumberSearch = (usernumber) => {\n  return axios\n    .get(path + \"/api/searchnumber/\" + usernumber)\n    .then((result) => {\n      return result.data;\n    })\n    .catch((error) => {\n      console.log(error);\n      throw error;\n    });\n};\n\nexport const deleteUser = (id) => {\n  return axios\n    .post(path + \"/api/deleteuser\", { id: id.toString() })\n    .then((result) => {\n      return result.data;\n    })\n    .catch((error) => {\n      console.error(\"Error deleting user:\", error);\n      throw error;\n    });\n};\n\nexport const fetchLoanInit = (userid) => {\n  return axios\n    .get(path + \"/api/chasuinit/loan/\" + userid)\n    .then((result) => {\n      return result.data;\n    })\n    .catch((error) => {\n      console.log(error);\n      throw error;\n    });\n};\n\nexport const fetchChasuData = (userid, chasu) => {\n  return axios\n    .get(path + \"/api/chasu/\" + userid + \"/\" + chasu)\n    .then((result) => {\n      return result.data[0];\n    })\n    .catch((error) => {\n      console.log(error);\n      throw error;\n    });\n};\n\nexport const fetchChasuUpdate = (userid, data, callback) => {\n  axios\n    .put(path + \"/api/chasuupdate/\" + userid, data)\n    .then(() => {\n      callback();\n    })\n    .catch((error) => {\n      console.error(\"Error updating data:\", error);\n    });\n};\n\nexport const fetchLoanUpdate = (userid, data, callback) => {\n  axios\n    .put(path + \"/api/loanupdate/\" + userid, data)\n    .then(() => {\n      callback();\n    })\n    .catch((error) => {\n      console.error(\"Error updating data: \", error);\n    });\n};\n",
            "atom.js": "import { atom } from \"recoil\";\n\nexport const userinfoState = atom({\n    key: 'userinfoState',\n    default: null,\n});\n\nexport const useridState = atom({\n    key: 'useridState',\n    default: null,\n})\n\nexport const searchnameState = atom({\n    key: 'searchnameState',\n    default: \"\",\n})\n\nexport const searchnumberState = atom({\n    key: 'searchnumberState',\n    default: \"\",\n});\n\nexport const searchtypeState = atom({\n    key: 'searchtypeState',\n    default: null,\n});\n\nexport const usernewState = atom ({\n    key: 'usernewState',\n    default: null\n})\n\nexport const chasuState = atom ({\n    key: 'chasuState',\n    default: null\n})\n",
            "selector.js": "import { selector } from \"recoil\";\nimport { fetchNameSearch, fetchNumberSearch,fetchT,fetchUserinfo, fetchLoanInit,fetchChasuData } from \"./api\";\nimport { searchnameState,searchnumberState, useridState, searchtypeState, chasuState } from \"./atom\";\n\nexport const userinfoSelector = selector({\n    key: 'userinfoSelector',\n    get: async ({ get }) => {\n      const userid = get(useridState);\n      try {\n        const data = await fetchUserinfo(userid); \n        return data;\n      } catch (error) {\n        console.error('Error fetching userinfo:', error);\n        throw error; // 에러 처리를 위해 다시 throw\n      }\n    },\n});\n\nexport const usermoneySelector = selector({\n  key: 'usermoneySelector',\n  get: async ({ get }) => {\n    const userid = get(useridState);\n    console.log(userid);\n    try {\n      const data = await fetchLoanInit(userid);\n      return data;\n    } catch (error) {\n      console.error('Error fetching userinfo: ', error);\n      throw error;\n    }\n  }\n})\n\nexport const userchasuSelector = selector({\n  key: 'userchasuSelector',\n  get: async ({get}) => {\n    const userid = get(useridState);\n    const chasu = get(chasuState);\n    if(userid){\n    try {\n      const data = await fetchChasuData(userid,chasu);\n      return data;\n    } catch (error) {\n      console.error('Error fetching chasu: ',error);\n      throw error;\n    }}\n  }\n})\n\n\nexport const namesearchSelector = selector({\n  key: 'namesearchSelector',\n  get: async ({ get }) => {\n    const username = get(searchnameState);\n    const usernumber = get(searchnumberState);\n    \n    const dataByName = await fetchNameSearch(username);\n    const dataByNumber = await fetchNumberSearch(usernumber);\n\n    // 이름과 관리번호 둘 다 있는 경우, 합친 결과를 반환\n    if (username && usernumber) {\n      return [...dataByName, ...dataByNumber];\n    }\n\n    // 둘 중 하나만 있는 경우, 해당 결과만 반환\n    return username ? dataByName : dataByNumber;\n  }\n});\n\n"
        },
        "context": {
            "__files__": {
                "AuthContext.js": "'use client'\nimport React, { createContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('username');\n    if (token) {\n      setIsLoggedIn(true);\n      setUsername(user);\n    }\n  }, []);\n\n  const login = (username, token) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('username', username);\n    setIsLoggedIn(true);\n    setUsername(username);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    setIsLoggedIn(false);\n    setUsername('');\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, username, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"
            }
        },
        "hoc": {
            "__files__": {
                "withAuth.js": "// 'hoc/withAuth.js'\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\n\nconst withAuth = (WrappedComponent) => {\n  return (props) => {\n    const router = useRouter();\n\n    useEffect(() => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        router.push(\"/login\");\n      }\n    }, []);\n\n    return <WrappedComponent {...props} />;\n  };\n};\n\nexport default withAuth;\n"
            }
        }
    }
}